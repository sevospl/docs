{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+","tags":false},"docs":[{"location":"","text":"<p>This docs site is a work in progress.</p> <p>Please report any mistakes or provide suggestions on our discord or on the docs repo, would be much appreciated.</p> <p>Issues</p>","title":"Saltbox Documentation"},{"location":"advanced/","text":"<p>In this section you will find various guides for advanced use cases.</p>","title":"Index"},{"location":"advanced/user-crontab-examples/","text":"<p>Note that this is just some examples, not a list of things that any particular user should have in their crontab.</p> <p><code>crontab -e</code></p> <pre><code>@daily cd /opt/python-plexlibrary/plexlibrary.sh\n0 7 * * 7 sudo PATH='/usr/bin:/bin:/usr/local/bin' env ANSIBLE_CONFIG='/srv/git/saltbox/ansible.cfg' 'sb install backup' -v  &gt;&gt; '/home/seed/logs/saltbox_backup.log' 2&gt;&amp;1\n@daily sb update &amp;&amp; sb install saltbox\n* * * * * /opt/scripts/nzbget/cleanup.sh\n0 10 * * * /opt/scripts/plex/optimize.sh\n0 * * * * PATH='/usr/bin:/bin:/usr/local/bin' cd /opt/SonarrSync/ ; /usr/bin/python SonarrSync.py\n</code></pre> <p>Line 1: <code>python-plexlibrary</code> script to make Plex libraries. - [Runs midnight daily server time]</p> <p>Line 2: Saltbox backup. - [Runs every Sunday @ 7AM server time]</p> <p>Line 3: Update Saltbox and do auto-updates - [Runs daily]</p> <p>Line 4: cleanup script to remove left over junk in /downloads/nzbs/nzbget/completed/sonarr/* etc. - [Runs every minute] <code>Note: Scroll down for a couple ideas for this script.</code></p> <p>Line 5: Script to optimize the Plex database. - [Runs daily @ 10AM server time]  <code>Note: Scroll down for script.</code></p> <p>Line 6: Enormoz's SonarrSync (based on Sperryfreak's RadarrSync) - [Runs hourly]</p>","title":"User crontab examples"},{"location":"advanced/user-crontab-examples/#phos-cleanupsh","text":"<p>This script deletes  * everything under a size of 100M * every unwanted file immediately * everything but the wanted files after 10 hours * every empty folder</p> <pre><code>#!/bin/bash\n#####################################################\n# script by pho\n#####################################################\n\n# basic settings\nTARGET_FOLDER=\"/mnt/local/downloads/nzbs/{sabnzbd,nzbget}/completed/{radarr,sonarr,lidarr}/\" # find files in this folders\nFIND_SAMPLE_SIZE='100M' # files smaller then this are seen as samples and get deleted\n\n# advanced settings\nFIND=$(which find)\nFIND_BASE_CONDITION_WANTED='-type f -amin +600'\nFIND_BASE_CONDITION_UNWANTED='-type f'\nFIND_ADD_NAME='-o -iname'\nFIND_DEL_NAME='! -iname'\nFIND_ACTION='-not -path \"*_UNPACK_*\" -delete &gt; /dev/null 2&gt;&amp;1'\ncommand=\"${FIND} ${TARGET_FOLDER} -mindepth 1 ${FIND_BASE_CONDITION_WANTED} -size -${FIND_SAMPLE_SIZE} ${FIND_ACTION}\"\n#echo \"Executing ${command}\"\neval \"${command}\"\n\nWANTED_FILES=(\n    '*.mkv'\n    '*.mpg'\n    '*.mpeg'\n    '*.avi'\n    '*.mp4'\n    '*.mp3'\n    '*.flac'\n    '*.srt'\n    '*.idx'\n    '*.sub'\n)\nUNWANTED_FILES=(\n    '*.nfo'\n    '*.jpeg'\n    '*.jpg'\n    '*.gif'\n    '*.rar'\n    '*sample.*'\n    '*.sh'\n    '*.pdf'\n    '*.doc'\n    '*.docx'\n    '*.xls'\n    '*.xlsx'\n    '*.xml'\n    '*.html'\n    '*.htm'\n    '*.exe'\n    '*.nzb'\n)\n#Folder Setting\ncondition=\"-iname '${UNWANTED_FILES[0]}'\"\nfor ((i = 1; i &lt; ${#UNWANTED_FILES[@]}; i++))\ndo\n    condition=\"${condition} ${FIND_ADD_NAME} '${UNWANTED_FILES[i]}'\"\ndone\ncommand=\"${FIND} ${TARGET_FOLDER} -mindepth 1 ${FIND_BASE_CONDITION_UNWANTED} \\( ${condition} \\) ${FIND_ACTION}\"\n#echo \"Executing ${command}\"\neval \"${command}\"\n\nfor ((i = 0; i &lt; ${#WANTED_FILES[@]}-1; i++))\ndo\n    condition2=\"${condition2} ${FIND_DEL_NAME} '${WANTED_FILES[i]}'\"\ndone\ncommand=\"${FIND} ${TARGET_FOLDER} -mindepth 1 ${FIND_BASE_CONDITION_WANTED} \\( ${condition2} \\) ${FIND_ACTION}\"\n#echo \"Executing ${command}\"\neval \"${command}\"\n\ncommand=\"${FIND} ${TARGET_FOLDER} -mindepth 1 -type d -empty ${FIND_ACTION}\"\n#echo \"Executing ${command}\"\neval \"${command}\"\n</code></pre>","title":"pho's cleanup.sh"},{"location":"advanced/user-crontab-examples/#rxwatchers-cleanupsh","text":"<p>Note that this script is specific to its author's setup when it was written.  It probably won't work for you as-is.  You'll need to edit the paths to match your situation.</p> <pre><code>#!/bin/bash\nfind /mnt/local/downloads/nzbget/completed/sonarr/* -type d -mmin +60 -ls -exec rm -rf {} + 2&gt;/dev/null\nfind /mnt/local/downloads/nzbget/completed/radarr/* -type d -mmin +60 -ls -exec rm -rf {} + 2&gt;/dev/null\nfind /mnt/local/downloads/nzbget/completed/books/*  -type d -mmin +240 -ls -exec rm -rf {} + 2&gt;/dev/null\nfind /mnt/local/downloads/nzbget/completed/sonarr/* -type d -mmin +60 -ls -exec rm -rf {} + 2&gt;/dev/null\nfind /mnt/local/downloads/nzbget/completed/radarr4k/* -type d -mmin +60 -ls -exec rm -rf {} + 2&gt;/dev/null\nfind /mnt/local/downloads/nzbget/completed/anime/* -type d -mmin +60 -ls -exec rm -rf {} + 2&gt;/dev/null\n</code></pre>","title":"RXWatcher's cleanup.sh"},{"location":"advanced/user-crontab-examples/#rxwatchers-optimizesh","text":"<pre><code>#!/bin/sh\n# Get the contents of the Preferences file, keep only what we need,  push to a temp, then use it in the curl command\n\ncat \"/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml\" |  \\\nsed -e 's;^.* PlexOnlineToken=\";;' | sed -e 's;\".*$;;' | tail -1 &gt; /tmp/plex.tmp\n\ncurl --request PUT http://127.0.0.1:32400/library/optimize\\?async=1\\&amp;X-Plex-Token=`cat /tmp/plex.tmp`\n\nrm -f /tmp/plex.tmp\n</code></pre>","title":"RXWatcher's optimize.sh"},{"location":"advanced/your-own-containers/","text":"<p>When you install existing roles in saltbox, some things get handled behind the scenes for you.  Notably, this includes creating the subdomain[s] at cloudflare and creating the <code>/opt/APPNAME</code> directory tree.</p> <p>When you add a container manually as outlined on this page, neither of those things will be done for you, so prior to running the docker commands described below you will have to create the <code>APPNAME.domain.tld</code> subdomain at cloudflare [or wherever your DNS is] and create the required <code>/opt/APPNAME</code> directory tree.</p> <p>The examples below are <code>docker run</code> commands that you would execute in an SSH session on your server.</p> <p>If you want to create a role file that you can install like the built-in applications, the [Contribute page in the Community wiki] outlines the process.</p>","title":"Prerequisites:"},{"location":"advanced/your-own-containers/#format","text":"<pre>\ndocker run -d  \\\n    --name=APPNAME  \\\n    --restart=unless-stopped  \\\n    -e PGID=1000 -e PUID=1000  \\\n    -v /opt/APPNAME:/CONFIG  \\\n    -v /etc/localtime:/etc/localtime:ro  \\\n    --network=saltbox \\\n    --network-alias=APPNAME  \\\n    --label com.github.saltbox.saltbox_managed=true \\\n    --label traefik.enable=true \\\n    --label traefik.http.routers.APPNAME.entrypoints=websecure \\\n    --label traefik.http.routers.APPNAME.middlewares=secureHeaders@file \\\n    --label traefik.http.routers.APPNAME.rule=Host\\(\\`APPNAME.yourdomain.com\\`\\) \\\n    --label traefik.http.routers.APPNAME.service=APPNAME \\\n    --label traefik.http.routers.APPNAME.tls.certresolver=cfdns \\\n    --label traefik.http.routers.APPNAME.tls.options=securetls@file \\\n    --label traefik.http.services.APPNAME.loadbalancer.server.port=80 \\\n    docker/image\n</pre>","title":"Format"},{"location":"advanced/your-own-containers/#format-detailed","text":"<p>Note: containers will not always use <code>/config</code>, nor will they necessarily use everything shown here.  The required volume maps and environment variables will vary by the docker image being used.</p> <pre>\ndocker run -d \\\n    --name APPNAME \\\n    --restart=unless-stopped \\\n    -e PGID=1000 -e PUID=1000 \\\n    --network=saltbox \\\n    --network-alias=APPNAME \\\n    -p host_port1:container_misc_port1 \\\n    -p host_port2:container_misc_port2 \\\n    -v /opt/APPNAME/:/config \\\n    -v /mnt/:/mnt/ \\\n    --label com.github.saltbox.saltbox_managed=true \\\n    --label traefik.enable=true \\\n    --label traefik.http.routers.APPNAME.entrypoints=websecure \\\n    --label traefik.http.routers.APPNAME.middlewares=secureHeaders@file \\\n    --label traefik.http.routers.APPNAME.rule=Host\\(\\`APPNAME.yourdomain.com\\`\\) \\\n    --label traefik.http.routers.APPNAME.service=APPNAME \\\n    --label traefik.http.routers.APPNAME.tls.certresolver=cfdns \\\n    --label traefik.http.routers.APPNAME.tls.options=securetls@file \\\n    --label traefik.http.services.APPNAME.loadbalancer.server.port=80 \\\n    docker-hub-user/repo-name\n</pre>","title":"Format (detailed)"},{"location":"advanced/your-own-containers/#examples","text":"<p>TBD</p>","title":"Examples"},{"location":"advanced/your-own-containers/#details","text":"","title":"Details"},{"location":"advanced/your-own-containers/#notes","text":"<ul> <li> <p>Replace all <code>&lt;tags&gt;</code> with your info.</p> </li> <li> <p>All <code>&lt;container_*&gt;</code> items are specified by the Docker container.</p> </li> <li> <p>Ideally, you want all <code>&lt;name&gt;</code> items to have the same name.</p> </li> <li> <p>Pick docker images that allow you to specify the PUID/PGID.</p> </li> <li> <p>You can break a command into multiple lines with a backslash (<code>\\</code>) at the end of all the lines except the last one.</p> </li> </ul>","title":"Notes"},{"location":"advanced/your-own-containers/#basics","text":"<ul> <li> <p><code>--name=&lt;name&gt;</code></p> </li> <li> <p><code>--restart=unless-stopped</code></p> </li> <li> <p>To have it startup automatically, unless the container was previously stopped.</p> </li> <li> <p><code>-v /etc/localtime:/etc/localtime:ro</code></p> </li> <li> <p>To set the docker container's timezone to your host timezone.</p> </li> <li> <p><code>-e PUID=&lt;your_user_ID&gt; -e PGID=&lt;your_group_ID&gt;</code></p> </li> <li> <p>Replace <code>&lt;user&gt;</code> and <code>&lt;group&gt;</code> to match yours (see here).</p> </li> <li> <p><code>--label com.github.saltbox.saltbox_managed=true</code></p> </li> <li> <p>Is used to determine whether the container is shut down or not during Saltbox backup and other tasks. If you want this container to not be shut down, leave the label out or set it to <code>false</code>.</p> </li> <li> <p>If you do decide leave this out or set this to <code>false</code>, it will probably be a good idea to store the config files at another location other than <code>/opt</code> as a running container could cause issues during Saltbox Backup. </p> </li> </ul>","title":"Basics"},{"location":"advanced/your-own-containers/#mount-paths","text":"<p>Mount paths are in the format of <code>path/on/host:path/within/container</code>. You may change the path on host (left side), but not the path set for the container, internally (right side).</p> <ul> <li> <p><code>-v /opt/&lt;name&gt;:&lt;container_config_path&gt;</code></p> <ul> <li> <p>This is where your config files will go</p> </li> <li> <p>You will need to:</p> </li> <li> <p>Create the folder: <code>mkdir /opt/&lt;name&gt;</code></p> </li> <li> <p>Set ownership: <code>sudo chown -R &lt;user&gt;:&lt;group&gt; /opt/&lt;name&gt;</code></p> <ul> <li>Replace <code>&lt;user&gt;</code> and <code>&lt;group&gt;</code> to match yours' (see here)</li> </ul> </li> <li> <p>Set permissions: <code>sudo chmod -R ugo+X /opt&lt;name&gt;</code></p> </li> </ul> </li> <li> <p><code>-v /mnt/local/downloads/&lt;name&gt;:/downloads/&lt;name&gt;</code></p> <ul> <li> <p>Only required if your Docker app needs a path for downloads.</p> </li> <li> <p>You will need to set <code>/downloads/&lt;name&gt;</code> as the downloads path in your app.</p> </li> <li> <p>This path will be accessible to Sonarr and Radarr.</p> </li> <li> <p>You will need to:</p> </li> <li> <p>Create the folder: <code>mkdir /mnt/local/downloads/&lt;name&gt;</code></p> </li> <li> <p>Set ownership: <code>sudo chown -R &lt;user&gt;:&lt;group&gt; /mnt/local/downloads/&lt;name&gt;</code></p> <ul> <li>Replace <code>&lt;user&gt;</code> and <code>&lt;group&gt;</code> to match yours' (see here)</li> </ul> </li> <li> <p>Set permissions: <code>sudo chmod -R ugo+X /mnt/local/downloads/&lt;name&gt;</code></p> </li> </ul> </li> </ul>","title":"Mount Paths"},{"location":"advanced/your-own-containers/#network","text":"<p>Note: These are important, but leave them out if your docker run command requires <code>--net=host</code>.</p> <ul> <li> <p><code>--network=saltbox</code></p> </li> <li> <p><code>--network-alias=&lt;name&gt;</code>   (aliases are shortcuts to communicate across dockers)</p> </li> </ul>","title":"Network"},{"location":"advanced/your-own-containers/#ports","text":"<p>Ports are in the format of <code>host_port:container_port</code>.</p> <ul> <li> <p>For the main, web admin/page port (e.g. 32400 in Plex):</p> <ul> <li> <p>You do not need to specify this port with <code>-p</code>. Since this port will not be accessible over the net or from the host. Instead, Nginx-Proxy will redirect the subdomain to it.</p> </li> <li> <p>If you do want the port accessible from the host (but not from the net), simply add <code>127.0.0.1:</code> to it and specify it via:</p> </li> </ul> <p><code>-p 127.0.0.1:&lt;host_port&gt;:&lt;container_webadmin_port&gt;</code></p> <p>If you expose ports to the host like this, make sure they don't conflict with another one on that host.</p> </li> <li> <p>For all other ports:</p> <ul> <li> <p><code>-p &lt;host_port&gt;:&lt;container_other_ports&gt;</code></p> </li> <li> <p>These are accessible from the net.</p> </li> </ul> </li> <li> <p>If this is a home install, you will probably need to forward the port to the cloudbox machine.</p> </li> </ul>","title":"Ports"},{"location":"advanced/your-own-containers/#traefik-proxy","text":"<pre><code>  --label traefik.enable=true\n  --label traefik.http.routers.&lt;name&gt;.entrypoints=websecure\n  --label traefik.http.routers.&lt;name&gt;.middlewares=secureHeaders@file\n  --label traefik.http.routers.&lt;name&gt;.rule=Host\\(\\`&lt;name&gt;.&lt;yourdomain&gt;\\`\\)\n  --label traefik.http.routers.&lt;name&gt;.service=&lt;name&gt;\n  --label traefik.http.routers.&lt;name&gt;.tls.certresolver=cfdns\n  --label traefik.http.routers.&lt;name&gt;.tls.options=securetls@file\n  --label traefik.http.services.&lt;name&gt;.loadbalancer.server.port=&lt;container_webpage_port&gt; # (1)\n</code></pre> <ol> <li>The port for the web admin page for the container.</li> </ol> <p>You'll need to add the subdomain manually at your DNS provider if you're not using wild-card DNS.</p>","title":"Traefik Proxy"},{"location":"apps/cloudplow/","text":"<p>Cloudplow (CP) is a script created by l3uddz that has one main component as relates to Saltbox: it's an uploader to Rclone remote. Files are moved off local storage. With support for multiple uploaders (i.e. remote/folder pairings).</p>","title":"cloudplow"},{"location":"apps/cloudplow/#remote-uploader-function","text":"<p>As setup for Saltbox, Cloudplow uploads all the content in <code>/mnt/local/Media/</code> (see Paths) to your cloud storage provider (e.g. Google Drive), after the folder reaches a <code>200</code> GB size threshold, when checked every <code>30</code> minutes.</p> <p>Note: The size threshold and the check interval can be changed via steps mentioned on this page.</p>  Google Drive Daily Upload Limit (click to expand)  Google Drive has a max upload limit of about 750GB per day. When this limit is reached, Google Drive will put you in a 24 hour soft ban. When Cloudplow detects this (with the phrase `Failed to copy: googleapi: Error 403: User rate limit exceeded`), uploading will be suspended for 25 hours (i.e. a 25 hour ban sleep), and upon waking up, it will resume its checking and uploading tasks. This feature is enabled by default. This method is better than running Rclone task with a bwlimit, becasuse you can just upload in bursts when the uploading resumes.  _Note: The keywords or phrases that are used to monitor the ban, and the duration of the sleep time, can be changed at any time by editing the `config.json` file._  Cloudplow can also use service accounts to upload and work around this limitation.","title":"Remote Uploader Function"},{"location":"apps/cloudplow/#config","text":"","title":"Config"},{"location":"apps/cloudplow/#default-configjson-file","text":"<p>See Example Cloudplow configs.</p>","title":"Default config.json file"},{"location":"apps/cloudplow/#location","text":"<pre><code>/opt/cloudplow/config.json\n</code></pre> <p>Note: Config changes require a restart: <code>sudo systemctl restart cloudplow</code>.</p>","title":"Location"},{"location":"apps/cloudplow/#editing","text":"<p>Edit in your favorite code editor  (with json highlighting) or even a unix editor like nano. </p> <pre><code>nano /opt/cloudplow/config.json\n</code></pre> <p>Note: The cloudplow config file is a JSON file.  JSON files have a particular format and syntax.  If you are unfamiliar with JSON formatting and syntax, don't edit this file until you have gained that familiarity.  Here's a random YouTube video that will give you a ten-minute overview.</p>","title":"Editing"},{"location":"apps/cloudplow/#modify-upload-threshold-and-interval","text":"<pre><code>    \"uploader\": {\n        \"google\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": false,\n            \"max_size_gb\": 200,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": [\n                \"downloads/*\"\n            ]\n        }\n</code></pre> <p><code>\"check_interval\":</code> How often (in minutes) Cloudplow checks the size of <code>/mnt/local/Media</code>.</p> <p><code>\"max_size_gb\":</code> Max size (in GB) Cloudplow allows <code>/mnt/local/Media</code> to get before starting an upload task.</p> <ul> <li> <p>Note: <code>max_size_gb</code> is rounded up, so it is advised to have it minimum <code>2GB</code> or else it would attempt upload at each interval. Explanation below. </p> <ul> <li> <p><code>1GB</code> is basically anything in there.</p> </li> <li> <p><code>2GB</code> is at least 1GB of data.</p> </li> </ul> </li> </ul>","title":"Modify Upload Threshold and Interval"},{"location":"apps/cloudplow/#plex-integration","text":"<p>Cloudplow can throttle Rclone uploads during active, playing Plex streams (paused streams are ignored).</p> <pre><code>  \"plex\": {\n      \"enabled\": false,\n      \"url\": \"https://plex.domain.com\",\n      \"token\": \"YOUR_TOKEN_HERE\",\n      \"poll_interval\": 60,\n      \"max_streams_before_throttle\": 1,\n      \"rclone\": {\n          \"throttle_speeds\": {\n              \"0\": \"1000M\",\n              \"1\": \"50M\",\n              \"2\": \"40M\",\n              \"3\": \"30M\",\n              \"4\": \"20M\",\n              \"5\": \"10M\"\n          },\n          \"url\": \"http://localhost:7949\"\n      }\n  }\n</code></pre> <p><code>enabled</code> - Change <code>false</code> to <code>true</code> to enable.</p> <p><code>url</code> - Your Plex URL.</p> <p><code>token</code> - Your Plex Access Token.</p> <p><code>poll_interval</code> - How often (in seconds) Plex is checked for active streams.</p> <p><code>max_streams_before_throttle</code> - How many playing streams are allowed before enabling throttling.</p> <p><code>rclone</code></p> <ul> <li> <p><code>url</code> - Leave as default.</p> </li> <li> <p><code>throttle_speeds</code> - Categorized option to configure upload speeds for various stream counts (where <code>5</code> represents 5 or more streams). <code>M</code> is MB/s.</p> <ul> <li>Format: </li> </ul> <pre><code>\"STREAM COUNT\": \"THROTTLED UPLOAD SPEED\",\n</code></pre> </li> </ul>","title":"Plex Integration"},{"location":"apps/cloudplow/#pushover-notifications","text":"<p>See here.</p>","title":"Pushover Notifications"},{"location":"apps/cloudplow/#restart","text":"<p>Restart Cloudplow to apply the changes to the config. </p> <pre><code>sudo systemctl restart cloudplow\n</code></pre>","title":"Restart"},{"location":"apps/cloudplow/#cli","text":"<p>You can run a manual Cloudplow task from anywhere by just using the <code>cloudplow</code> command. </p>","title":"CLI"},{"location":"apps/cloudplow/#manual-upload","text":"<p>To start uploading right away, regardless of what the folder size is: </p> <pre><code>cloudplow upload\n</code></pre>","title":"Manual Upload"},{"location":"apps/emby/","text":"<p>Emby is a media server designed to organize, play, and stream audio and video to a variety of devices</p> <p></p>","title":"1. Introduction"},{"location":"apps/emby/#2-url","text":"<ul> <li>To access Emby, visit https://emby.yourdomain.com</li> </ul>","title":"2. URL"},{"location":"apps/emby/#3-initial-setup","text":"","title":"3. Initial Setup"},{"location":"apps/emby/#i-domain","text":"<ul> <li> <p>See Adding a Subdomain on how to add the subdomain <code>emby</code> to your DNS provider.</p> </li> <li> <p>Note: You can skip this step if you are using Cloudflare with Saltbox.</p> </li> </ul>","title":"i. Domain"},{"location":"apps/emby/#ii-install","text":"<ul> <li> <p>Run the following command:</p> <pre><code>sb install emby  \n</code></pre> </li> </ul>","title":"ii. Install"},{"location":"apps/emby/#4-setup-wizard","text":"<ol> <li> <p>Visit https://emby.yourdomain.com.</p> </li> <li> <p>Select your preferred display language. Click Next.</p> </li> </ol> <p>)</p> <ol> <li> <p>Type the following and click Next:</p> <ul> <li> <p>Username: The username you wwant to use to log into Emby </p> </li> <li> <p>New Password: A strong password you'll use to log into Emby </p> </li> <li> <p>New Password Confirm: That same password again </p> </li> <li> <p>Emby connect username or email address: your Emby Connect username (important)</p> </li> </ul> </li> </ol> <p></p> <ol> <li>Confirm the message by clicking Got It.</li> </ol> <p></p> <ol> <li>Confirm the link in your email. </li> </ol> <p></p> <p></p> <ol> <li>Skip the adding of the libraries. Click Next.</li> </ol> <p></p> <ol> <li>Select your Preferred Metadata Language and Country (<code>English</code> and <code>United States</code> are recommended) and click Next.</li> </ol> <p></p> <ol> <li>Uncheck Enable automatic port mapping. Click Next.</li> </ol> <p></p> <ol> <li>Check to accept the terms. Click Next.</li> </ol> <p></p> <ol> <li>Click Finish.</li> </ol> <p></p> <ol> <li>You will now be taken to the Dashboard view.</li> </ol>","title":"4. Setup Wizard"},{"location":"apps/emby/#5-settings","text":"","title":"5. Settings"},{"location":"apps/emby/#i-transcoding","text":"<ol> <li> <p>Go to Settings.</p> </li> <li> <p>Go to Transcoding.</p> </li> </ol> <p></p> <ol> <li>Under Enable hardware acceleration when available, select Advanced.</li> </ol> <p></p> <ol> <li>Under Transcoding temporary path, type in or choose <code>/transcode</code>.</li> </ol> <p></p> <ol> <li>Click Save.</li> </ol>","title":"i. Transcoding"},{"location":"apps/emby/#iii-libraries","text":"<p>In this section, we will add two libraries: one for Movies and one for TV Shows.</p>","title":"iii. Libraries"},{"location":"apps/emby/#add-movie-library","text":"<ol> <li> <p>Go to Settings.</p> </li> <li> <p>Go to Library.</p> </li> </ol> <p></p> <ol> <li> <p>Click + New Library.</p> </li> <li> <p>Under Content type, select Movies. </p> </li> </ol> <p></p> <p></p> <ol> <li> <p>Click + next to Folders.</p> </li> <li> <p>Type in or choose <code>/mnt/unionfs/Media/Movies</code>. Click OK.</p> </li> </ol> <p>Note: These paths are for the standard library setup. If you have customized it, use those paths instead.</p> <p></p> <ol> <li>Click OK once more.</li> </ol>","title":"Add Movie Library"},{"location":"apps/emby/#add-tv-shows-library","text":"<ol> <li> <p>Go to Settings.</p> </li> <li> <p>Go to Library.</p> </li> </ol> <p></p> <ol> <li> <p>Click + New Library.</p> </li> <li> <p>Under Content type, select TV shows. </p> </li> </ol> <p></p> <p></p> <ol> <li> <p>Click + next to Folders.</p> </li> <li> <p>Type in or choose <code>/mnt/unionfs/Media/TV</code>. Click OK.</p> </li> </ol> <p>Note: These paths are for the standard library setup. If you have customized it, use those paths instead.</p> <p></p> <ol> <li>Click OK once more.</li> </ol>","title":"Add TV Shows Library"},{"location":"apps/emby/#6-api-key","text":"<p>Instructions below will guide you through creating an API Key for a specific app.</p> <ol> <li> <p>Click the Settings icon.</p> </li> <li> <p>Under Advanced, click API Keys.</p> </li> </ol> <p></p> <ol> <li>Click + New API Key. </li> </ol> <p></p> <ol> <li> <p>Fill in an App name (e.g. Ombi) and click OK.</p> </li> <li> <p>You have now have created an Api Key for your app.</p> </li> </ol> <p></p>","title":"6. API Key"},{"location":"apps/jackett/","text":"<p>Jackett (based on the original work of Matthew Little aka zone117x) is a web-based app that acts like a proxy server, directing search queries from download clients (e.g. Sonarr) to torrent tracker sites and sending the results back. Download clients can also use Jackett to fetch RSS feeds from tracker sites. Finally, it can be used as a meta search tool to find torrents, right from within the app.</p> <p></p> <p>Note: If you don't use torrents, you may just skip this page.</p>","title":"jackett"},{"location":"apps/jackett/#1-url","text":"<ul> <li>To access Jackett, visit http://jackett.yourdomain.com</li> </ul>","title":"1. URL"},{"location":"apps/jackett/#2-settings","text":"<p></p>","title":"2. Settings"},{"location":"apps/jackett/#disabling-auto-update","text":"<p>Under \"Jackett Configuration\": </p> <ol> <li> <p>Check \"Disable auto update\".</p> </li> <li> <p>Check \"External access\".</p> </li> <li> <p>Click \"Apply server settings\". </p> </li> <li> <p>The page will now reload.  </p> </li> </ol>","title":"Disabling Auto Update"},{"location":"apps/jackett/#3-adding-indexers-to-sonarrradarr","text":"<p>Under \"Configured Indexers\":</p> <ol> <li> <p>Click \"Add Indexer\" to add your favorite indexers (i.e. torrent trackers). </p> </li> <li> <p>When adding indexers into Sonarr/Radarr, you will need: </p> <ol> <li> <p>Indexer's Torznab Feed </p> <ul> <li> <p>Copy this by clicking on \"Copy Torznab Feed\" button next to the Indexer. </p> </li> <li> <p>You will need to replace...</p> </li> <li> <p><code>https</code> with <code>http</code></p> </li> <li> <p><code>jackett.yourdomain.com</code> with <code>jackett:9117</code></p> </li> </ul> </li> <li> <p>Jacket API Key</p> </li> </ol> </li> </ol>","title":"3. Adding Indexers to Sonarr/Radarr"},{"location":"apps/lidarr/","text":"<p>Lidarr is basically Sonarr for music. It functions as a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds from Bittorrent trackers and Usenet Indexers, looking for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.</p> <p></p>","title":"1. Intro"},{"location":"apps/lidarr/#2-url","text":"<ul> <li>To access Lidarr, visit https://lidarr.yourdomain.com</li> </ul>","title":"2. URL"},{"location":"apps/lidarr/#3-settings","text":"","title":"3. Settings"},{"location":"apps/lidarr/#i-general","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"General\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> </ol>","title":"i. General"},{"location":"apps/lidarr/#host","text":"<ul> <li> <p>\"Bind Address: <code>*</code></p> </li> <li> <p>\"Port Number\": <code>8686</code></p> </li> <li> <p>\"URL Base\": blank</p> </li> <li> <p>\"Enable SSL\": <code>No</code> (SSL is handled by Traefik)</p> </li> <li> <p>\"Open browser on start\": <code>No</code></p> </li> </ul>","title":"Host"},{"location":"apps/lidarr/#proxy-settings","text":"<ul> <li>\"Use Proxy\": <code>No</code></li> </ul>","title":"Proxy Settings"},{"location":"apps/lidarr/#logging","text":"<ul> <li>\"Log Level\": <code>Debug</code></li> </ul>","title":"Logging"},{"location":"apps/lidarr/#analytics","text":"<ul> <li>\"Send Anonymous Usage Data\": <code>No</code> (your preference)</li> </ul>","title":"Analytics"},{"location":"apps/lidarr/#updates","text":"<ul> <li> <p>\"Branch\": <code>develop</code></p> </li> <li> <p>\"Automatic\": <code>Off</code></p> </li> </ul>","title":"Updates"},{"location":"apps/lidarr/#save","text":"<ul> <li>Click \"Save\".</li> </ul>","title":"Save"},{"location":"apps/lidarr/#ii-media-management","text":"<ol> <li> <p>Click \"Settings\" -&gt; \"Media Management\".</p> </li> <li> <p>Enable \"Rename Tracks\".</p> </li> <li> <p>Enable \"Replace Illegal Characters\".</p> </li> <li> <p>Set your preferred naming format (you can use the ones mentioned below).</p> </li> </ol>  Plex's Naming Preference         Example:        `01 - Shine On You Crazy Diamond (Parts I-V).m4a`        Standard Track Format:        `{track:00} - {Track Title}`        Artist Folder Format:        `{Artist Name}`        Album Folder Format:        `{Artist Name} - {Album Title}`        Ref: https://support.plex.tv/articles/categories/media-preparation/naming-and-organizing-music-media/    <ol> <li> <p>Disable \"Analyse audio files\".</p> </li> <li> <p>Click \"Save\".</p> </li> </ol>","title":"ii. Media Management"},{"location":"apps/lidarr/#iii-download-client","text":"<ol> <li> <p>Click \"Settings\" -&gt; \"Download Client\".</p> </li> <li> <p>\"Completed Download Handling\": <code>Enabled</code> Selected (your preference)</p> </li> <li> <p>\"Failed Download Handling\": <code>Redownload</code> Selected.</p> </li> </ol>","title":"iii. Download Client"},{"location":"apps/lidarr/#nzbget","text":"<ol> <li> <p>Add a new \"NZBGet\" download client.</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: NZBGet</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Host: <code>nzbget</code></p> </li> <li> <p>Port: <code>6789</code></p> </li> <li> <p>Username:  [[Your NZBGet Username|Install: NZBGet#security]]</p> </li> <li> <p>Password:  [[Your NZBGet Password|Install: NZBGet#security]]</p> </li> <li> <p>Category: <code>lidarr</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>Add Paused: <code>No</code></p> </li> <li> <p>Your settings will now look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add NZBGet.</p> </li> </ol>","title":"NZBGet"},{"location":"apps/lidarr/#rutorrent","text":"<ol> <li> <p>Add a new \"rTorrent\" download client.</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: ruTorrent</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Host: <code>rutorrent</code></p> </li> <li> <p>Port: <code>80</code></p> </li> <li> <p>URL Path: <code>RPC2</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>Username: [[Your ruTorrent Username|Install: ruTorrent#login]]</p> </li> <li> <p>Password: [[Your ruTorrent Password|Install: ruTorrent#login]]</p> </li> <li> <p>Category: <code>lidarr</code></p> </li> <li> <p>Directory: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> </li> </ol> <p></p> <ol> <li>Click \"Save\" to add ruTorrent.</li> </ol>","title":"ruTorrent"},{"location":"apps/lidarr/#iv-indexers","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> <li> <p>Add in your your favorite [[indexers|Prerequisites: Usenet vs BitTorrent]].</p> </li> </ol>","title":"iv. Indexers"},{"location":"apps/lidarr/#nzbhydra2","text":"<ol> <li> <p>Click \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Click Add Indexer (<code>+</code>).</p> </li> <li> <p>Select \"Newznab\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: NZBHydra2</p> </li> <li> <p>Enable RSS Sync: Your Preference</p> </li> <li> <p>Enable Search: Your Preference</p> </li> <li> <p>URL: <code>http://nzbhydra2:5076</code></p> </li> <li> <p>API Path: <code>/api</code></p> </li> <li> <p>API Key: [[Your NZBHydra2 API Key|Install: NZBHydra2#7-api-key]]</p> </li> <li> <p>Additional Parameters: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add NZBHydra2.</p> </li> </ol> <p>Note: The \"Test\" will keep failing until you add an indexer in [[NZBHydra2|Install: NZBHydra2]].</p>","title":"NZBHydra2"},{"location":"apps/lidarr/#jackett","text":"<p>Note: Each Indexer will need to be added separately.</p> <ol> <li> <p>Click \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Click Add Indexer (<code>+</code>)</p> </li> <li> <p>Select \"Torznab\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Indexer's Name</p> </li> <li> <p>Enable RSS Sync: Your Preference</p> </li> <li> <p>Enable Search: Your Preference</p> </li> <li> <p>URL: [[Indexer's Torznab Feed|Install: Jackett#3-adding-indexers-to-sonarrradarr]]</p> </li> <li> <p>API Path: <code>/api</code></p> </li> <li> <p>API Key: [[Your Jackett API Key|Install: Jackett#3-adding-indexers-to-sonarrradarr]]</p> </li> <li> <p>Additional Parameters: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add the indexer.</p> </li> </ol>","title":"Jackett"},{"location":"apps/lidarr/#v-connect","text":"","title":"v. Connect"},{"location":"apps/lidarr/#torrent-cleanup","text":"<p>Torrent Cleanup Script is a custom script that will cleanup torrents from ruTorrent that were auto-extracted, but still being seeded. So if the script detects that <code>.rar</code> files are in the folder that Lidarr just imported from, it will delete the imported video file(s), leaving just the <code>.rar</code> files for seeding.</p> <ol> <li> <p>Click \"Settings\" -&gt; \"Connect\".</p> </li> <li> <p>Add a new \"Custom Script\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Torrent Cleanup</p> </li> <li> <p>On Grab: <code>No</code></p> </li> <li> <p>On Download: <code>Yes</code></p> </li> <li> <p>On Upgrade:  <code>Yes</code></p> </li> <li> <p>On Rename:<code>No</code></p> </li> <li> <p>Path: <code>/scripts/torrents/TorrentCleanup.py</code></p> </li> <li> <p>The settings will look like this:</p> </li> </ol> <p></p> <ol> <li>Click \"Save\" to add the Torrent Cleanup script.</li> </ol>","title":"Torrent Cleanup"},{"location":"apps/lidarr/#plex-autoscan","text":"<p>Plex Autoscan no longers work with music libraries as of version 1.18, so this feature will not work. 1. Click \"Settings\" -&gt; \"Connect\".</p> <ol> <li> <p>Add a new \"Webhook\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Plex Autoscan</p> </li> <li> <p>On Grab: <code>No</code></p> </li> <li> <p>On Download: <code>Yes</code></p> </li> <li> <p>On Upgrade:  <code>Yes</code></p> </li> <li> <p>On Rename: <code>Yes</code></p> </li> <li> <p>URL: [[Your Plex Autoscan URL|Install: Plex-Autoscan#4-obtaining-the-plex-autoscan-url]]</p> </li> <li> <p>Method:<code>POST</code></p> </li> <li> <p>Username: Leave Blank</p> </li> <li> <p>Password: Leave Blank</p> </li> <li> <p>The settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add Plex Autoscan.</p> </li> </ol>","title":"Plex Autoscan"},{"location":"apps/lidarr/#4-music-path","text":"<ol> <li> <p>When you are ready to add your first artist to Lidarr, click the \"Path\" drop-down and select \"Add a different path\".</p> </li> <li> <p>Click the blue \"Browse\" button, select the <code>music</code> folder, scroll to the bottom, and select \"OK\".</p> </li> <li> <p>Click the green \"check\" button to add the path.</p> </li> <li> <p>All artist added now will have that path set.</p> </li> </ol>","title":"4. Music Path"},{"location":"apps/lidarr/#5-api-key","text":"<p>This is used during the setup of [[Organizr|Install: Organizr]].</p> <ul> <li>Go to \"Settings\" -&gt; \"General\" -&gt; \"Security\" -&gt; \"API Key\".</li> </ul>","title":"5. API Key"},{"location":"apps/nzbget/","text":"<p>NZBGet (by Andrey Prygunkov aka hugbug) is a very efficient, cross-platform usenet downloader.</p> <p></p>","title":"nzbget"},{"location":"apps/nzbget/#1-accessing-nzbget","text":"<ul> <li>To access NZBGet, visit https://nzbget.yourdomain.com</li> </ul>","title":"1. Accessing NZBGet"},{"location":"apps/nzbget/#2-settings","text":"","title":"2. Settings"},{"location":"apps/nzbget/#paths","text":"<ul> <li>Download paths have already been specified, no need to change those.</li> </ul>","title":"Paths"},{"location":"apps/nzbget/#news-servers","text":"<ul> <li>Add your [[news servers|Prerequisites: Usenet vs BitTorrent#i-usenet]].</li> </ul>","title":"News-Servers"},{"location":"apps/nzbget/#security","text":"<ul> <li>Login settings are preset out of the box (<code>user</code> / <code>passwd</code> as set in [[accounts.yml|Install: accounts.yml]]).</li> </ul>","title":"Security"},{"location":"apps/nzbget/#download-queue","text":"<ul> <li> <p>Disk Space</p> </li> <li> <p>By default, minimum disk space is set at 100000 (i.e. 100GB). When space goes lower than this, NZBGet will pause the queue. If you have a smaller hard drive, you will need to lower this setting. </p> </li> </ul>","title":"Download Queue"},{"location":"apps/nzbget/#connection","text":"<ul> <li> <p>DailyQuota</p> </li> <li> <p>Recommend you set this to <code>750000</code> (i.e. 750GB), to coincide with the Google Drive daily upload limit.  </p> </li> </ul>","title":"Connection"},{"location":"apps/nzbget/#3-extensions","text":"<ul> <li> <p>Location on server: <code>/opt/scripts/nzb</code>. </p> </li> <li> <p>Location within NZBGet: <code>/scripts/nzb</code>.</p> </li> </ul>","title":"3. Extensions"},{"location":"apps/nzbhydra2/","text":"<ol> <li>Intro</li> <li>URL</li> <li>Setup</li> <li>API</li> </ol>","title":"nzbhydra2"},{"location":"apps/nzbhydra2/#1-intro","text":"<p>NZBHydra2, by TheOtherP, is a meta search tool for NZB indexers. It provides easy access to a number of NZB indexers. You can search all your indexers from one place and use it as indexer source for tools like Sonarr or CouchPotato.</p> <p></p>  <p>Three Ways to setup NZB indexers with Sonarr/Radarr/Lidarr: </p> <p>1) Skip this page and add all your NZB Indexers directly into Sonarr/Radarr/Lidarr. Benefit from the seeing indexer sources during manual lookups in Sonarr/Radarr/Lidarr. This method is also useful when diagnosing issues with indexers during failed searches;</p> <p>2) Add all your NZB Indexers directly into Sonarr/Radarr/Lidarr, but also add them in NZBHydra2, so it could be used a tool for manual downloads; or</p> <p>3) Add all your NZB indexers in NZBHydra2 and then just add the one NZBHydra2 \"indexer\" into Sonarr/Radarr/Lidarr. This is the most popular choice among users.</p>  <p>To Setup NZBHydra2, follow the steps below.</p>","title":"1. Intro"},{"location":"apps/nzbhydra2/#2-url","text":"<ul> <li>URL to access NZBHydra2, visit https://nzbhydra2.yourdomain.com.</li> </ul>","title":"2. URL"},{"location":"apps/nzbhydra2/#3-setup","text":"<p>Enter setup by clicking on \"Config\" at the top.</p>","title":"3. Setup"},{"location":"apps/nzbhydra2/#main","text":"<ul> <li>Under 'Security', click the icon next to the 'API key *' field to generate an API key. Click 'Save'.</li> </ul>","title":"Main"},{"location":"apps/nzbhydra2/#authorization","text":"<ul> <li>Login settings are preset out of the box (<code>user</code> / <code>passwd</code> as set in [[accounts.yml|Install: Settings]]).</li> </ul>","title":"Authorization"},{"location":"apps/nzbhydra2/#migration","text":"You can migrate your previous NZBHydra 1 config by entering in the following: (click to expand)","title":"Migration"},{"location":"apps/nzbhydra2/#indexers","text":"<ul> <li>Add your indexers. Click \"Save\".</li> </ul>","title":"Indexers"},{"location":"apps/nzbhydra2/#downloaders","text":"<ul> <li>NZBGet settings are preset out of the box. </li> </ul>","title":"Downloaders"},{"location":"apps/nzbhydra2/#4-api-key","text":"<p>To find the NZBHydra2 API Key, go to \"Config\" --&gt; \"Main\". This will be used later in [[Sonarr|Install: Sonarr#nzbhydra2]] and [[Radarr|Install: Radarr#nzbhydra2]].</p>","title":"4. API Key"},{"location":"apps/organizr/","text":"<ul> <li>1. Intro</li> <li>2. URL</li> <li>3. Initial Setup</li> <li>4. Settings</li> <li>Tabs</li> <li>Homepage (Make you have Homepage ACTIVE in Tabs section)</li> <li>Homepage Order</li> </ul>","title":"organizr"},{"location":"apps/organizr/#1-intro","text":"<p>Organizr (by CauseFX) is a web-based, HTPC server organizer, that allows you to manage various tools and programs within tabs. Also supports user management, allowing for non admin users or guests to access certain web-pages via Organizr, even if it is behind HTTP authentication. This guide is to help you get Organizr setup and running by no means is this a complete guide to Organizr as you'll see the depth of it is pretty vast and there are plenty of customizations available to you at every turn.</p> <p></p>","title":"1. Intro"},{"location":"apps/organizr/#2-url","text":"<ul> <li>To access Organizr, visit https://organizr.yourdomain.com</li> </ul>","title":"2. URL"},{"location":"apps/organizr/#3-initial-setup","text":"<ol> <li> <p>The first time you go to the Organizr page, you will be presented with <code>Install Type</code>, <code>Admin Info</code>, <code>Security</code>, <code>Database</code> and <code>Verify</code> sections. In the <code>Install Type</code> section select <code>Personal</code></p> <p></p> </li> <li> <p>In the <code>Admin Info</code> section enter your details such as the preferred password to log in and personal email.  Note: it is suggested to enter your <code>plex username and password</code></p> <p></p> </li> <li> <p>In the <code>Security</code> section enter your fill in the <code>Hash Key</code> and <code>Registration Password</code> any type of password will do but if you want a secure one then follow these steps; </p> </li> <li>First for the <code>Hash Key</code> you can head over to Base64 Encode and convert a string to Base64. Keep in mind the <code>Hash Key</code> can be anywhere between 3 to 30 which mean you can enter string up to 21 characters in Base64</li> <li>For the password just use any strong password you prefer, if you want a strong one then Password Generator, there is no limit on the password section go crazy ;) </li> <li>The API key should be auto-generated so no need to worry about this if the API key is throwing an error such as shorter than it suppose to be or longer it's most likely due to the web browser auto-fill, make sure it's disabled or just use another browser that doesn't have auto-fill or you don't use much e.g Internet Explorer \ud83d\udc40.  You should have something like this:</li> </ol> <p></p> <ol> <li>In the <code>Database</code> section enter your preferred database name (there is 30 character limit), then after that for the \"Database Location\" set it as <code>/config/www</code> then click test path it should be a success.   You should have something like this:</li> </ol> <p></p> <ol> <li>In the <code>Verify</code> section you will just need to confirm everything but feel free to take note of your API key and save it somewhere safe. After clicking finish you will be taken to a log in the page just enter the <code>username</code> and <code>password</code> you have inserted in the <code>Admin info</code> section.  You should have something like this:</li> </ol> <p></p>","title":"3. Initial Setup"},{"location":"apps/organizr/#4-settings","text":"<ol> <li> <p>You will now be taken to the main Organizr Page and asked to login with the credentials you created in the previous steps.</p> <p></p> </li> </ol>","title":"4. Settings"},{"location":"apps/organizr/#tabs","text":"<ol> <li> <p>Click \"Settings\" on the left menu, to be taken to the \"Organizr Settings\" page.</p> <p> </p> </li> <li> <p>Things to note on this page, the Homepage is disabled by default and note the \"Type\" is set to \"Internal\".  Your normal Apps with Cloudbox will all need to have a Type: \"iFrame\" unless you have a particular app you wish to open in another window which is also a Type option.  Go ahead and click \"+ on the right\". You will be prompted for information regarding the tab.</p> <p></p> </li> <li> <p>Before hitting the Edit Tab button in the bottom right, please hit the \"Test Tab\" button, sometimes the Tab will check for you if iFrame is possible.  This will test if the information you inputted can be open in an iFrame.  Which is the secret sauce in Organizr's tabbed browsing.</p> <p></p> </li> <li> <p>You will need to create multiple tabs with the information below. These are merely a suggestion and examples to get you up and going.  Any changes made, won't be reflected until Organizr is reloaded. You can also drag and drop to change the order of the apps (don't forget to reload)</p>    Tab Name Tab URL Icon URL Category Group Type Active     Portainer https://portainer.yourdomain.ltd images/organizr.png (default) Unsorted Admin iFrame Y   Sonarr https://sonarr.yourdomain.ltd images/sonarr.png Unsorted Admin iFrame Y   Radarr https://radarr.yourdomain.ltd images/radarr.png Unsorted Admin iFrame Y   NZBGet https://nzbget.yourdomain.ltd images/nzbget.png Unsorted Admin iFrame Y   Rutorrent https://rutorrent.yourdomain.ltd images/rutorrent.png Unsorted Admin iFrame Y   NZBHydra2 https://nzbhydra2.yourdomain.ltd images/hydra.png Unsorted Admin iFrame Y   Jackett https://jackett.yourdomain.ltd images/jackett.png Unsorted Admin iFrame Y   Plex https://plex.yourdomain.ltd images/plex.png Unsorted User iFrame Y   Tautulli https://tautulli.yourdomain.ltd images/tautulli.png Unsorted User iFrame Y   Ombi https://ombi.yourdomain.ltd images/ombi.png Unsorted User iFrame Y    <p></p> </li> <li> <p>Note: If Sonarr or Radarr are lagging a lot, you may set it to a specific page in each. (e.g. Sonarr: https://sonarr.yourdomain.com/calendar ; Radarr: https://radarr.yourdomain.com/activity/history)</p> </li> </ol>","title":"Tabs"},{"location":"apps/organizr/#homepage-make-you-have-homepage-active-in-tabs-section","text":"<ol> <li> <p>Click \"Homepage Items\" under the Tab Editor section, to be taken to the \"Homepage Items\" page.</p> <p></p> </li> <li> <p>Click the Plex icon at the top.</p> <ul> <li> <p>You'll have to Enable it and verify the Minimum Authentication </p> </li> <li> <p>Click on the Connection Tab and set \"Plex URL\": <code>http://plex:32400</code></p> </li> <li> <p>Currently there is no \"GET PLEX TOKEN\" button like there was in v1 of Organizr so you will need to follow <code>https://github.com/Cloudbox/Cloudbox/wiki/Plex-Access-Token</code> in order to get your Plex access Token.</p> </li> <li> <p>Set your preferred options on the remaining tabs.</p> </li> <li> <p>Click \"SAVE\".</p> </li> </ul> <p></p> </li> <li> <p>Click the Sonarr icon at the top.</p> <ul> <li> <p>Enable it.</p> </li> <li> <p>On the Connections Tab, Set \"Sonarr URL\": <code>http://sonarr:8989</code></p> </li> <li> <p>Set \"Sonarr API Key\": [[Your Sonarr API Key|Install: Sonarr#9-retrieving-the-api-key]]</p> </li> <li> <p>Go over any other Miscellaneous Options on the next Tab and set your preferences. </p> </li> <li> <p>Click \"SAVE\".</p> </li> </ul> <p></p> </li> <li> <p>Click the Radarr icon at the top.</p> <ul> <li> <p>Enable it.</p> </li> <li> <p>Set \"Radarr URL\": <code>http://radarr:7878</code></p> </li> <li> <p>Set \"Radarr API Key\": [[Your Radarr API Key|Install: Radarr#9-retrieving-the-api-key]]</p> </li> <li> <p>Go over any other Miscellaneous Options on the next Tab and set your preferences. </p> </li> <li> <p>Click \"SAVE\".</p> </li> </ul> <p></p> </li> <li> <p>Click the NZBGet icon at the top.</p> <ul> <li> <p>Enable it.</p> </li> <li> <p>Set \"NZBGet URL\": <code>http://nzbget:6789</code></p> </li> <li> <p>For \"Username\" / \"Password\": fill in your NZBGet login (see [[NZBGet|Install: NZBGet#2-setup]])</p> </li> <li> <p>Click \"SAVE\".</p> </li> </ul> <p></p> </li> </ol>","title":"Homepage (Make you have Homepage ACTIVE in Tabs section)"},{"location":"apps/organizr/#homepage-order","text":"<ol> <li> <p>This is where you organize the apps and other items and how they will appear on your Homepage.  There's no right or wrong order so simply move things around and find out what works for you.</p> <p></p> </li> </ol> <p>Any additional question please reach out to the Organizr team, either via their Discord Server or their subreddit </p>","title":"Homepage Order"},{"location":"apps/overseerr/","text":"<p>Overseerr is a request management and media discovery tool built to work with your existing Plex ecosystem.</p>","title":"overseerr"},{"location":"apps/overseerr/#1-url","text":"<ul> <li>To access Overseerr, visit https://overseerr.yourdomain.com</li> </ul>","title":"1. URL"},{"location":"apps/overseerr/#2-settings","text":"<p>This setup needs to take place AFTER you've set up Plex, Radarr, and Sonarr, since it involves connections to all three of those.</p> <p>You will need your API Keys from both Radarr and Sonarr.</p> <ol> <li>Click \"Sign In\" and sign into your Plex account.</li> </ol> <p></p> <ol> <li>Click the \"refresh\" icon, then select your Plex server from the dropdown.  Click \"Save Changes\" to retrieve the libraries from Plex.</li> </ol> <p></p> <ol> <li>Scroll down and flip the switch on the libraries you want to expose for requests and discovery.  Click \"Continue\".</li> </ol> <p></p> <ol> <li>Click \"Add Radarr Server\". </li> </ol> <p></p> <ol> <li>On this screen:<ol> <li>Check \"Default server\"</li> <li>Enter a name</li> <li>Enter <code>radarr</code> as the hostname</li> <li>Enter your Radarr API Key</li> <li>Click \"Test\" to connect to Radarr and retrieve Quality Profiles, etc.</li> </ol> </li> </ol> <p></p> <ol> <li>Select a Quality, Root Folder, and Minimum Availability, then click \"Add Server\".  This will return you to the screen from the previous step. Click \"Add Sonarr Server\"</li> </ol> <p></p> <ol> <li>On this screen:<ol> <li>Check \"Default server\"</li> <li>Enter a name</li> <li>Enter <code>sonarr</code> as the hostname</li> <li>Enter your Sonarr API Key</li> <li>Scroll down and click \"Test\" to connect to Sonarr and retrieve Quality Profiles, etc.</li> </ol> </li> </ol> <p></p> <ol> <li>Select a Quality, Root Folder, and Minimum Availability for standard and Anime series.  Click  \"Add Server\".</li> </ol> <p></p> <ol> <li>Click \"Finish Setup\"</li> </ol> <p></p> <ol> <li>Click \"Settings\" over on the left.</li> </ol> <p></p> <ol> <li>Click \"Users\" on the left, then \"Import Users From Plex\"</li> </ol> <p></p> <ol> <li>Setup is complete.</li> </ol> <p></p>","title":"2. Settings"},{"location":"apps/plex/","text":"<ul> <li>1. URL</li> <li>2. Setup Wizard</li> <li>3. Settings</li> <li>Library</li> <li>Network</li> <li>Transcoder</li> <li>DLNA</li> <li>Scheduled Tasks</li> <li>4. Add Media Libraries</li> <li>Add the Movie Library</li> <li>Add the TV Library</li> <li>5. Scan Media libraries</li> <li>6. Webtools</li> </ul>","title":"plex"},{"location":"apps/plex/#1-url","text":"<ol> <li> <p>To access Plex, visit https://plex.yourdomain.com</p> </li> <li> <p>Login with your Plex account</p> <p></p> </li> </ol>","title":"1. URL"},{"location":"apps/plex/#2-setup-wizard","text":"<ol> <li> <p>First time you log in, you will be presented with a welcome screen. Click \"GOT IT!\" to continue.</p> <p></p> </li> <li> <p>Next screen will show you a list of servers, with a randomly generated name. Give it a friendly name and click \"NEXT\".</p> <p></p> </li> <li> <p>On the next screen, click \"NEXT\" (we will add Libraries later).</p> <p></p> </li> <li> <p>Click \"DONE\".</p> <p></p> </li> </ol>","title":"2. Setup Wizard"},{"location":"apps/plex/#3-settings","text":"","title":"3. Settings"},{"location":"apps/plex/#library","text":"<ol> <li> <p>Click the Settings icon (top right) \u2192 \"Server\" (top) \u2192 \"Library\" (left).</p> </li> <li> <p>Set the following:</p> </li> <li> <p>\"Empty trash automatically after every scan\": <code>disabled</code></p> <ul> <li>Plex Autoscan will take care of this.</li> </ul> </li> <li> <p>\"Allow media deletion\": <code>enabled</code></p> </li> <li> <p>\"Generate video preview thumbnails\": <code>never</code></p> </li> <li> <p>\"Generate chapter thumbnails\": <code>never</code></p> </li> </ol>  <p>The reasoning behind disabling these thumbnails is related to Google Drive API usage, data transfer, and disk space.  Accessing large portions of a given video file to generate thumbnails may generate large numbers of Google Drive API calls, and large amounts of data transfer.  Either of these things may result in your account suffering one of the various types of 24-hour bans Google hands out, which may prevent your server from playing media at all.  Also, storing these images will greatly inflate the size of <code>/opt/plex</code>, which can affect the speed of backups, your ability to download, and anything else related to disk space usage.  These are generally considered Bad Things, so the recommendation is to avoid the possibility by turning these options off.</p>  <ol> <li> <p>Click \"SAVE CHANGES\".</p> <p></p> </li> </ol>","title":"Library"},{"location":"apps/plex/#network","text":"<ol> <li> <p>Click the Settings icon (top right) \u2192 \"Server\" (top) \u2192 \"Network\" (left).</p> </li> <li> <p>Set the following:</p> </li> <li> <p>\"Secure Connections\": <code>Preferred</code>.</p> </li> <li> <p>\"Enable local network discovery (GDM)\": <code>disabled</code>.</p> </li> <li> <p>\"Remote streams allowed per user\": your preference.</p> </li> <li> <p>\"Custom server access URLs\": <code>http://plex.yourdomain.com:80/,https://plex.yourdomain.com:443/</code> (pre-filled)</p> <ul> <li>NOTE: Enter your domain as you have it configured in accounts.yml, not literally \"yourdomain.com\".</li> </ul> </li> <li> <p>Click \"SAVE CHANGES\".</p> <p></p> </li> </ol>","title":"Network"},{"location":"apps/plex/#transcoder","text":"<ol> <li> <p>Click the Settings icon (top right) \u2192 \"Server\" (top) \u2192 \"Transcoder\" (left).</p> </li> <li> <p>Set the following:</p> </li> <li> <p>\"Transcoder temporary directory\": <code>/transcode</code></p> </li> <li> <p>\"Transcoder default throttle buffer\": <code>150</code></p> </li> <li> <p>\"Use hardware acceleration when available\": <code>enabled</code></p> </li> <li> <p>\"Maximum simultaneous video transcode\": <code>unlimited</code></p> </li> <li> <p>Click \"SAVE CHANGES\".</p> <p></p> </li> </ol>","title":"Transcoder"},{"location":"apps/plex/#dlna","text":"<ol> <li> <p>Click the Settings icon (top right) \u2192 \"Server\" (top) \u2192 \"DLNA\" (left).</p> </li> <li> <p>Set the following:</p> <ul> <li> <p>\"Enable the DLNA server\": <code>disabled</code></p> </li> <li> <p>\"DLNA server timeline reporting\": <code>disabled</code></p> </li> </ul> </li> <li> <p>Click \"SAVE CHANGES\".</p> <p></p> </li> </ol>","title":"DLNA"},{"location":"apps/plex/#scheduled-tasks","text":"<ol> <li> <p>Click the Settings icon (top right) \u2192 \"Server\" (top) \u2192 \"Scheduled Tasks\" (left).</p> </li> <li> <p>Set the following:</p> <ul> <li> <p>\"Update all libraries during maintenance\": <code>disabled</code></p> </li> <li> <p>\"Upgrade media analysis during maintenance\": <code>disabled</code></p> </li> <li> <p>\"Perform extensive media analysis during maintenance\": <code>disabled</code></p> </li> </ul> </li> <li> <p>Click \"SAVE CHANGES\".</p> <p></p> </li> </ol>","title":"Scheduled Tasks"},{"location":"apps/plex/#4-add-media-libraries","text":"<p>In this section, we will add two libraries: one for Movies and one for TV.</p> <p>Note: If you would like to have custom Plex libraries (more than just a Movies and TV one), see [[Customizing Plex Libraries]].</p>","title":"4. Add Media Libraries"},{"location":"apps/plex/#add-the-movie-library","text":"<ol> <li> <p>In the main Plex screen (Home icon on the top left), click \"+\" next to \"LIBRARIES\".</p> <p></p> </li> <li> <p>In the \"Add Library\" window, select \"Movies\" and click \"NEXT\".</p> <p></p> </li> <li> <p>Click \"BROWSE FOR MEDIA FOLDER\".</p> <p></p> </li> <li> <p>In second column of the \"Add Folder\" window, select <code>data</code>, then <code>Movies</code>, and then click the \"ADD\" button.</p> <p></p> </li> <li> <p>You will now see <code>/data/Movies</code> in the text box (don't click \"ADD LIBRARY\" yet).</p> <p></p> </li> <li> <p>Click \"Advanced\" on the left.</p> </li> <li> <p>Set the following:</p> </li> <li> <p>\"Enable Cinema Trailers\": <code>disabled</code> (optional)</p> </li> <li> <p>\"Enable video preview thumbnails\": <code>disabled</code></p> </li> <li> <p>\"Find trailers and extras automatically (Plex Pass required)\": <code>disabled</code> (optional) </p> </li> <li> <p>Click \"ADD LIBRARY\".</p> <p></p> </li> </ol>","title":"Add the Movie Library"},{"location":"apps/plex/#add-the-tv-library","text":"<ol> <li> <p>In the main Plex screen (Home icon on the top left), click \"+\" next to \"LIBRARIES\".</p> <p></p> </li> <li> <p>In the \"Add Library\" window, select \"TV Shows\" and click \"NEXT\".</p> <p></p> </li> <li> <p>Click \"BROWSE FOR MEDIA FOLDER\".</p> <p></p> </li> <li> <p>In second column of the \"Add Folder\" window, select <code>data</code>, then <code>TV</code>, and then click the \"ADD\" button.</p> <p></p> </li> <li> <p>You will now see <code>/data/TV</code> in the text box (don't click \"ADD LIBRARY\" yet).</p> <p></p> </li> <li> <p>Click \"Advanced\" on the left.</p> </li> <li> <p>Set the following:</p> </li> <li> <p>\"Enable video preview thumbnails\": <code>disabled</code></p> </li> <li> <p>\"Find trailers and extras automatically (Plex Pass required)\": <code>disabled</code> (optional)</p> </li> <li> <p>Click \"ADD LIBRARY\".</p> <p></p> </li> </ol>","title":"Add the TV Library"},{"location":"apps/plex/#5-scan-media-libraries","text":"<p>As mentioned in the [[Introduction|Basics: Introduction#how-does-cloudbox-function-]] page, [[Plex Autoscan| Install: Plex Autoscan]] will automatically scan the media files into Plex as they are downloaded, but this will require the Plex database to not be completely empty. So for every new library that is added, a one-time, manual scan is required. </p> <p>To do so:</p> <ol> <li> <p>Click the 3 dots next to a Plex library.</p> </li> <li> <p>Select \"Scan Library Files\". </p> </li> </ol> <p></p> <ol> <li>Repeat steps 1-2 for each library. </li> </ol>","title":"5. Scan Media libraries"},{"location":"apps/plex/#6-webtools","text":"<p>Webtools for Plex comes preinstalled. If you wish to setup Webtools and install 3rd party add-ons, you can go to https://plex-webtools.yourdomain.com and log in with your Plex account.</p>","title":"6. Webtools"},{"location":"apps/portainer/","text":"","title":"portainer"},{"location":"apps/portainer/#1-intro","text":"<p>Portainer is an open-source lightweight management UI which allows you to easily manage your Docker containers, images, networks and volumes.</p> <p></p>","title":"1. Intro"},{"location":"apps/portainer/#2-url","text":"<p>To access Portainer, visit  https://portainer.yourdomain.com</p>","title":"2. URL"},{"location":"apps/portainer/#3-initial-setup","text":"<ol> <li> <p>The first time you go to the Portainer page, you will be presented with the message \"Please create the initial administrator user.\". Fill in your preferred admin username and password. Click <code>Create User</code>.</p> <p></p> </li> <li> <p>On this first visit when you set up the admin user, you will be logged in automagically. On future visits, you will be asked to log in with your username and password.</p> <p></p> </li> <li> <p>On the \"Connect Portainer to the Docker environment you want to manage.\" screen, select <code>Local: Manage the local Docker environment</code> and click <code>Connect</code>.  </p> <p>Note: Don't be confused by \"local\" in this context.  It is referring to the relationship between the Docker instance you're managing [on your Cloudbox] and this instance of Portainer [also on your Cloudbox].  These things are local to each other on your Cloudbox server, wherever that is.  They may be remote from you, but they are local to each other.  Pay no mind to what looks like a warning at the bottom.  Cloudbox has already taken care of that.</p> <p></p> </li> <li> <p>Portainer is now setup.</p> </li> </ol>","title":"3. Initial Setup"},{"location":"apps/radarr/","text":"<ul> <li>1. URL</li> <li>2. Settings</li> <li>i. General<ul> <li>Start-Up</li> <li>Proxy Settings</li> <li>Logging</li> <li>Analytics</li> <li>Updates</li> <li>Save</li> </ul> </li> <li>ii. Media Management<ul> <li>Movie Naming</li> <li>Folders</li> <li>Importing</li> <li>File Management</li> <li>Permissions</li> <li>Save</li> </ul> </li> <li>iii. Download Client<ul> <li>NZBGet</li> <li>ruTorrent</li> </ul> </li> <li>iv. Indexers<ul> <li>NZBHydra2</li> <li>Jackett</li> </ul> </li> <li>v. Connect<ul> <li>Torrent Cleanup</li> <li>Plex Autoscan</li> </ul> </li> <li>3. Movies Path</li> <li>4. API Key</li> </ul>","title":"radarr"},{"location":"apps/radarr/#1-url","text":"<ul> <li>To access Radarr, visit https://radarr.yourdomain.com</li> </ul>","title":"1. URL"},{"location":"apps/radarr/#2-settings","text":"","title":"2. Settings"},{"location":"apps/radarr/#i-general","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"General\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> </ol>","title":"i. General"},{"location":"apps/radarr/#start-up","text":"<ul> <li> <p>\"Bind Address: <code>*</code></p> </li> <li> <p>\"Port Number\": <code>7878</code></p> </li> <li> <p>\"URL Base\": blank</p> </li> <li> <p>\"Enable SSL\": <code>No</code> (SSL is handled by Nginx-Proxy)</p> </li> <li> <p>\"Open browser on start\": <code>No</code></p> </li> </ul>","title":"Start-Up"},{"location":"apps/radarr/#proxy-settings","text":"<ul> <li>\"Use Proxy\": <code>No</code></li> </ul>","title":"Proxy Settings"},{"location":"apps/radarr/#logging","text":"<ul> <li>\"Log Level\": <code>Debug</code></li> </ul>","title":"Logging"},{"location":"apps/radarr/#analytics","text":"<ul> <li>\"Enable\": <code>No</code> (your preference)</li> </ul>","title":"Analytics"},{"location":"apps/radarr/#updates","text":"<ul> <li> <p>\"Branch\": <code>nightly</code> or <code>develop</code></p> </li> <li> <p>\"Automatic\": <code>Off</code></p> </li> </ul>","title":"Updates"},{"location":"apps/radarr/#save","text":"<ul> <li>Click \"Save\".</li> </ul>","title":"Save"},{"location":"apps/radarr/#ii-media-management","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Media Management\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> </ol>","title":"ii. Media Management"},{"location":"apps/radarr/#movie-naming","text":"<ul> <li> <p>\"Rename Movies\": <code>Yes</code></p> </li> <li> <p>\"Replace Illegal Characters\": <code>Yes</code></p> </li> <li> <p>Colon Replacement Format: <code>Delete</code></p> </li> </ul> <p>Note: You could use <code>Replace with Space Dash</code> but only if your file naming format is not using spaces (e.g. using dots) to separate words. </p> <ul> <li>Set your preferred naming format (you can use the ones mentioned below - CLICK to expand).</li> </ul>  Plex's Naming Preference       Example:  <pre><code>/Guardians of the Galaxy (2014)/Guardians of the Galaxy (2014).mkv\n</code></pre>      Standard Movie Format:  <pre><code>{Movie Title} ({Release Year})\n</code></pre>      Movie Folder Format:  <pre><code>{Movie Title} ({Release Year})\n</code></pre>      Reference: https://support.plex.tv/articles/200381023-naming-movie-files/    <p> Radarr's Wiki Example       Example:   <pre><code>The Movie Title (2010) - [ULTIMATE EXTENDED EDITION][BLURAY-1080P PROPER][DTS 5.1][X264]-EVOLVE.mkv\n</code></pre>      Standard Movie Format:  <pre><code>{Movie Title} ({Release Year}) - {[EDITION TAGS]}{[QUALITY FULL]}{[MEDIAINFO AUDIOCODEC}{ MEDIAINFO AUDIOCHANNELS]}{[MEDIAINFO VIDEOCODEC]}{-RELEASE GROUP}\n</code></pre>      Reference: https://github.com/Radarr/Radarr/wiki/Sorting-and-Renaming    </p> <p> TRaSH' naming guide       Example:   <pre><code>The Movie Title (2010) Ultimate Extended Edition [imdb-tt0066921][Surround Sound x264][Bluray-1080p Proper][3D][HDR][10bit][x264][DTS 5.1]-EVOLVE.mkv\n</code></pre>      Standard Movie Format:  <pre><code>{Movie CleanTitle} {(Release Year)} {Edition Tags} [imdb-{ImdbId}]{[Custom Formats]}{[Quality Full]}{[MediaInfo 3D]}{[MediaInfo VideoDynamicRange]}[{Mediainfo VideoBitDepth}bit][{Mediainfo VideoCodec}]{[Mediainfo AudioCodec}{ Mediainfo AudioChannels}]{-Release Group}\n</code></pre>      Reference: https://trash-guides.info/Radarr/Radarr-recommended-naming-scheme/    </p>","title":"Movie Naming"},{"location":"apps/radarr/#folders","text":"<ul> <li> <p>\"Create empty movie folders\": <code>No</code></p> </li> <li> <p>\"Automatically Rename Folders\": <code>No</code></p> </li> <li> <p>\"Movie Paths Default to Static\": <code>No</code></p> </li> </ul>","title":"Folders"},{"location":"apps/radarr/#importing","text":"<ul> <li> <p>\"Skip Free Space Check\": <code>No</code></p> </li> <li> <p>\"Use Hardlinks instead of Copy\": <code>No</code></p> </li> <li> <p>\"Import Extra Files\": <code>Yes</code> (can your preference)</p> </li> <li> <p>\"Extra File Extensions\": <code>srt, sub, idx</code></p> </li> </ul>","title":"Importing"},{"location":"apps/radarr/#file-management","text":"<ul> <li> <p>\"Ignore Deleted Movies\": <code>No</code> (can be your preference)</p> </li> <li> <p>\"Download Propers\": <code>No</code> (can be your preference)</p> </li> <li> <p>\"Analyse video files\": <code>No</code></p> </li> <li> <p>\"Change File Date\": <code>None</code></p> </li> <li> <p>\"Recycle Bin\": blank (Rclone deletes are sent to Gdrive trash folder, anyway)</p> </li> </ul>","title":"File Management"},{"location":"apps/radarr/#permissions","text":"<ul> <li>Set Permissions: <code>No</code></li> </ul>","title":"Permissions"},{"location":"apps/radarr/#save_1","text":"<ul> <li>Click \"Save\".</li> </ul>","title":"Save"},{"location":"apps/radarr/#iii-download-client","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Download Client\".</p> </li> <li> <p>Completed Download Handling</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Remove: <code>Yes</code> (your preference)</p> </li> <li> <p>Failed Download Handling</p> </li> <li> <p>Redownload: <code>Yes</code></p> </li> <li> <p>Remove: <code>Yes</code></p> </li> </ol>","title":"iii. Download Client"},{"location":"apps/radarr/#nzbget","text":"<ol> <li> <p>Add a new \"NZBGet\" download client.</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: NZBGet</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Host: <code>nzbget</code></p> </li> <li> <p>Port: <code>6789</code></p> </li> <li> <p>Username:  [[Your NZBGet Username|Install: NZBGet#security]]</p> </li> <li> <p>Password:  [[Your NZBGet Password|Install: NZBGet#security]]</p> </li> <li> <p>Category: <code>radarr</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>Add Paused: <code>No</code></p> </li> <li> <p>Your settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add NZBGet.</p> </li> </ol>","title":"NZBGet"},{"location":"apps/radarr/#rutorrent","text":"<ol> <li> <p>Add a new \"rTorrent\" download client.</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: ruTorrent</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Host: <code>rutorrent</code></p> </li> <li> <p>Port: <code>80</code></p> </li> <li> <p>URL Path: <code>RPC2</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>Username: [[Your ruTorrent Username|Install: ruTorrent#login]]</p> </li> <li> <p>Password: [[Your ruTorrent Password|Install: ruTorrent#login]]</p> </li> <li> <p>Category: <code>radarr</code></p> </li> <li> <p>Directory: Leave Blank</p> </li> <li> <p>Your settings will now look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add ruTorrent.</p> </li> </ol>","title":"ruTorrent"},{"location":"apps/radarr/#iv-indexers","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> <li> <p>Add in your your favorite [[indexers|Prerequisites: Usenet vs BitTorrent]].</p> </li> </ol>","title":"iv. Indexers"},{"location":"apps/radarr/#nzbhydra2","text":"<ol> <li> <p>Click \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Click Add Indexer (<code>+</code>).</p> </li> <li> <p>Select \"Newznab\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: NZBHydra2</p> </li> <li> <p>Enable RSS Sync: Your Preference</p> </li> <li> <p>Enable Search: Your Preference</p> </li> <li> <p>URL: <code>http://nzbhydra2:5076</code></p> </li> <li> <p>API Key: [[Your NZBHydra2 API Key|Install: NZBHydra2#4-api-key]]</p> </li> <li> <p>Additional Parameters: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add NZBHydra2.</p> </li> </ol> <p>Note: The \"Test\" will keep failing until you add an indexer in [[NZBHydra2|Install: NZBHydra2]].</p>","title":"NZBHydra2"},{"location":"apps/radarr/#jackett","text":"<p>Note: Each Indexer will need to be added separately.</p> <ol> <li> <p>Click \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Click Add Indexer (<code>+</code>)</p> </li> <li> <p>Select \"Torznab\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Indexer Name</p> </li> <li> <p>Enable RSS Sync: Your Preference</p> </li> <li> <p>Enable Search: Your Preference</p> </li> <li> <p>URL: [[Indexer's Torznab Feed|Install: Jackett#3-adding-indexers-to-sonarrradarr]]</p> </li> <li> <p>API Key: [[Your Jackett API Key|Install: Jackett#3-adding-indexers-to-sonarrradarr]]</p> </li> <li> <p>Additional Parameters: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add the indexer.</p> </li> </ol>","title":"Jackett"},{"location":"apps/radarr/#v-connect","text":"","title":"v. Connect"},{"location":"apps/radarr/#torrent-cleanup","text":"<p>Torrent Cleanup Script is a custom script that will cleanup torrents from ruTorrent that were auto-extracted, but still being seeded. So if the script detects that <code>.rar</code> files are in the folder that Radarr just imported from, it will delete the imported video file(s), leaving just the <code>.rar</code> files for seeding.</p>  <ol> <li> <p>Click \"Settings\" -&gt; \"Connect\".</p> </li> <li> <p>Add a new \"Custom Script\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Torrent Cleanup</p> </li> <li> <p>On Grab: <code>No</code></p> </li> <li> <p>On Download: <code>Yes</code></p> </li> <li> <p>On Upgrade:  <code>Yes</code></p> </li> <li> <p>On Rename:<code>No</code></p> </li> <li> <p>Path: <code>/scripts/torrents/TorrentCleanup.py</code></p> </li> <li> <p>The settings will look like this:</p> <p></p> </li> </ol>  <ol> <li>Click \"Save\" to add the Torrent Cleanup script.</li> </ol>","title":"Torrent Cleanup"},{"location":"apps/radarr/#plex-autoscan","text":"<ol> <li> <p>Click \"Settings\" -&gt; \"Connect\".</p> </li> <li> <p>Add a new \"Webhook\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Plex Autoscan</p> </li> <li> <p>On Grab: <code>No</code></p> </li> <li> <p>On Download: <code>Yes</code></p> </li> <li> <p>On Upgrade:  <code>Yes</code></p> </li> <li> <p>On Rename: <code>Yes</code></p> </li> <li> <p>Filter Movie Tags: Leave Blank</p> </li> <li> <p>URL: [[Your Plex Autoscan URL|Install: Plex-Autoscan#4-obtaining-the-plex-autoscan-url]]</p> </li> <li> <p>Method:<code>POST</code></p> </li> <li> <p>Username: Leave Blank</p> </li> <li> <p>Password: Leave Blank</p> </li> <li> <p>The settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add Plex Autoscan.</p> </li> </ol>","title":"Plex Autoscan"},{"location":"apps/radarr/#3-movies-path","text":"<ol> <li> <p>When you are ready to add your first movie to Radarr, click the \"Path\" drop-down and select \"Add a different path\".</p> </li> <li> <p>Click the blue \"Browse\" button, select the <code>movies</code> folder, scroll to the bottom, and select \"OK\".</p> </li> <li> <p>Click the green \"check\" button to add the path.</p> </li> <li> <p>All movies added now will have that path set.</p> </li> </ol>","title":"3. Movies Path"},{"location":"apps/radarr/#4-api-key","text":"<p>This is used during the setup of [[Ombi|Install: Ombi]] and [[Organizr|Install: Organizr]].</p> <ul> <li>Go to \"Settings\" -&gt; \"General\" -&gt; \"Security\" -&gt; \"API Key\".</li> </ul> <p></p>","title":"4. API Key"},{"location":"apps/rutorrent/","text":"<p>ruTorrent (by Novik) is a front-end for the popular, lightweight, and extensible BitTorrent client rtorrent (by Jari Sundell aka rakshasa).</p> <p>Note: public trackers are disabled by default in the standard install.  Refer to the FAQ for instructions on re-enabling them.</p> <p></p>","title":"rutorrent"},{"location":"apps/rutorrent/#1-url","text":"<ul> <li>To access ruTorrent, visit https://rutorrent.yourdomain.com</li> </ul>","title":"1. URL"},{"location":"apps/rutorrent/#2-basics","text":"","title":"2. Basics"},{"location":"apps/rutorrent/#setup","text":"<p>The setup for [[Sonarr|Install: Sonarr#rutorrent]], [[Radarr|Install: Radarr#rutorrent]], and [[Lidarr|Install: Lidarr#rutorrent]] are done on their respective wiki pages.</p>","title":"Setup"},{"location":"apps/rutorrent/#3-enable-autounpack","text":"<p>AutoUnpack is a plugin that will automatically unrar/unzip torrent data. </p> <p>This will allow Sonarr/Radarr/Lidarr to import the media files that would otherwise be ignored. After Sonarr and Radarr import the media files, [[Torrent Cleanup Script|Reference: Cloudbox-Tools#torrent-cleanup-script]] will then delete the extracted media files and ruTorrent will continue to seed the torrents (until they are either removed manually or automatically via ruTorrent's Ratio Group rules).</p> <p>To enable AutoUnpack:</p> <ol> <li> <p>Open \"Settings\" by clicking the gear icon  at the top</p> </li> <li> <p>Go to \"Unpack\" on the left. </p> </li> <li> <p>Check \"Enable autounpacking if torrents label matches filter\" and add the following:</p> </li> </ol> <pre><code>/.*(radarr|sonarr|lidarr).*/i\n</code></pre> <ol> <li> <p>Leave the other fields blank. </p> </li> <li> <p>Your settings will now look like this:</p> </li> </ol> <p></p> <ol> <li>Click \"OK\". </li> </ol>","title":"3. Enable AutoUnpack"},{"location":"apps/rutorrent/#3-custom-plugins-and-themes","text":"<p>You can have custom plugins and themes imported during Docker container rebuild. Just place them in the following paths:</p> <pre><code>/opt/rutorrent/plugins/\n</code></pre> <pre><code>/opt/rutorrent/themes/\n</code></pre> <p>And then restart the Docker container:</p> <pre><code>docker restart rutorrent\n</code></pre>","title":"3. Custom Plugins and Themes"},{"location":"apps/sabnzbd/","text":"<ul> <li>Install tag: <code>--tags sabnzbd</code></li> </ul>","title":"sabnzbd"},{"location":"apps/sabnzbd/#1-url","text":"<ul> <li>To access ruTorrent, visit https://rutorrent.yourdomain.com</li> </ul>","title":"1. URL"},{"location":"apps/sabnzbd/#2-basics","text":"<ul> <li>Go through the setup wizard.  YOu will need to enter server details:</li> </ul> <p></p> <ul> <li>When you get to the end of the wizard, click \"Go To SABnzbd\"</li> </ul> <p></p> <ul> <li>Go to SABnzbd Config</li> </ul> <p></p> <ul> <li>You will need to add in categories for <code>sonarr</code>, <code>radarr</code>, and <code>lidarr</code>. </li> </ul> <p>Set a relative directory name for each category.  </p> <p>You will need a category for each instance of <code>sonarr</code>/<code>radarr</code>/<code>lidarr</code> [for example, if you have a <code>radarr</code> and <code>radarr4k</code> you will need a category for each]</p> <p>SABnzbd requires the server to be filled in to set categories up.</p> <p>This needs to be done BEFORE adding sabnzbd as a downloader to any of those apps.</p> <p></p> <ul> <li> <p>Direct unpack is disabled by default. Configure this as you prefer.</p> </li> <li> <p>Make note of the API Key in the \"General\" section</p> </li> </ul> <p></p> <ul> <li>When creating the connection in the arrs, use API Key rather than user/pass.</li> </ul> <p></p> <p>Note that the category matches between Radarr and Sab.  The specific category doesn't matter; just that they match.</p>","title":"2. Basics"},{"location":"apps/sonarr/","text":"<ul> <li>1. URL</li> <li>2. Settings</li> <li>i. General<ul> <li>Start-Up</li> <li>Proxy Settings</li> <li>Logging</li> <li>Analytics</li> <li>Updates</li> <li>Save</li> </ul> </li> <li>ii. Media Management<ul> <li>Episode Naming</li> <li>Folders</li> <li>Importing</li> <li>File Management</li> <li>Permissions</li> <li>Save</li> </ul> </li> <li>iii. Download Client<ul> <li>NZBGet</li> <li>ruTorrent</li> </ul> </li> <li>iv. Indexers<ul> <li>NZBHydra2</li> <li>Jackett</li> </ul> </li> <li>v. Connect<ul> <li>Torrent Cleanup</li> <li>Plex Autoscan</li> </ul> </li> <li>3. TV Path</li> <li>4. API Key</li> </ul>","title":"sonarr"},{"location":"apps/sonarr/#1-url","text":"<ul> <li>To access Sonarr, visit https://sonarr.yourdomain.com</li> </ul>","title":"1. URL"},{"location":"apps/sonarr/#2-settings","text":"","title":"2. Settings"},{"location":"apps/sonarr/#i-general","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"General\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> </ol>","title":"i. General"},{"location":"apps/sonarr/#start-up","text":"<ul> <li> <p>\"Bind Address: <code>*</code></p> </li> <li> <p>\"Port Number\": <code>8989</code></p> </li> <li> <p>\"URL Base\": blank</p> </li> <li> <p>\"Enable SSL\": <code>No</code> (SSL is handled by Nginx-Proxy)</p> </li> <li> <p>\"Open browser on start\": <code>No</code> [This setting does not appear in Sonarr v3]</p> </li> </ul>","title":"Start-Up"},{"location":"apps/sonarr/#proxy-settings","text":"<ul> <li>\"Use Proxy\": <code>No</code></li> </ul>","title":"Proxy Settings"},{"location":"apps/sonarr/#logging","text":"<ul> <li>\"Log Level\": <code>Debug</code></li> </ul>","title":"Logging"},{"location":"apps/sonarr/#analytics","text":"<ul> <li>\"Enable\": <code>No</code> (your preference)</li> </ul>","title":"Analytics"},{"location":"apps/sonarr/#updates","text":"<ul> <li> <p>\"Branch\": <code>phantom-develop</code></p> </li> <li> <p>\"Automatic\": <code>Off</code></p> </li> </ul>","title":"Updates"},{"location":"apps/sonarr/#save","text":"<ul> <li>Click \"Save\".</li> </ul>","title":"Save"},{"location":"apps/sonarr/#ii-media-management","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Media Management\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> </ol>","title":"ii. Media Management"},{"location":"apps/sonarr/#episode-naming","text":"<ul> <li> <p>\"Rename Episodes\": <code>Yes</code></p> </li> <li> <p>\"Replace Illegal Characters\": <code>Yes</code></p> </li> <li> <p>Set your preferred naming format (you can use the ones mentioned below - CLICK to expand).</p> </li> </ul>  Plex's Naming Preference       Example:  <pre><code>/Gotham/Season 01/Gotham - s01e01 - Pilot.mkv\n</code></pre>      Standard Episode Format:  <pre><code>{Series Title} - s{season:00}e{episode:00} - {Episode Title}\n</code></pre>      Anime Episode Format:  <pre><code>{Series Title} - s{season:00}e{episode:00} - {Episode Title}\n</code></pre>      Daily Episode Format:  <pre><code>{Series Title} - {Air-Date} - {Episode Title}\n</code></pre>      Season Folder Format:  <pre><code>Season {season:00}\n</code></pre>      Multi-Episode Style:  <pre><code>Prefixed Range\n</code></pre>      Reference: https://support.plex.tv/articles/200220687-naming-series-season-based-tv-shows/    <p> TRaSH' naming guide       Example:   <pre><code>Single Episode:\n\nThe Series Title! (2010) - S01E01 - Episode Title 1 [AMZN WEBDL-1080p Proper][HDR][10bit][x264][DTS 5.1]-RlsGrp\n\nMulti Episode:\n\nThe Series Title! (2010) - S01E01-E02-E03 - Episode Title [AMZN WEBDL-1080p Proper][HDR][10bit][x264][DTS 5.1]-RlsGrp\n</code></pre>      Standard Episode Format:  <pre><code>{Series TitleYear} - S{season:00}E{episode:00} - {Episode CleanTitle} [{Preferred Words }{Quality Full}]{[MediaInfo VideoDynamicRange]}[{MediaInfo VideoBitDepth}bit]{[MediaInfo VideoCodec]}{[Mediainfo AudioCodec}{ Mediainfo AudioChannels]}{MediaInfo AudioLanguages}{-Release Group}\n</code></pre>      for more examples and discussion see the reference: https://trash-guides.info/Sonarr/Sonarr-recommended-naming-scheme/    </p>","title":"Episode Naming"},{"location":"apps/sonarr/#folders","text":"<ul> <li> <p>\"Create empty series folders\": <code>No</code></p> </li> <li> <p>\"Delete empty folders\": <code>No</code></p> </li> </ul>","title":"Folders"},{"location":"apps/sonarr/#importing","text":"<ul> <li> <p>\"Skip Free Space Check\": <code>No</code></p> </li> <li> <p>\"Use Hardlinks instead of Copy\": <code>No</code></p> </li> <li> <p>\"Import Extra Files\": <code>Yes</code> (can be your preference)</p> </li> <li> <p>\"Extra File Extensions\": <code>srt, sub, idx</code></p> </li> </ul>","title":"Importing"},{"location":"apps/sonarr/#file-management","text":"<ul> <li> <p>\"Ignore Deleted Episodes\": <code>No</code> (can be your preference)</p> </li> <li> <p>\"Download Propers\": <code>Yes</code> (can be your preference)</p> </li> <li> <p>\"Analyse video files\": <code>No</code></p> </li> <li> <p>\"Change File Date\": <code>None</code></p> </li> <li> <p>\"Recycle Bin\": blank (Rclone deletes are sent to Gdrive trash folder, anyway)</p> </li> </ul>","title":"File Management"},{"location":"apps/sonarr/#permissions","text":"<ul> <li>Set Permissions: <code>No</code></li> </ul>","title":"Permissions"},{"location":"apps/sonarr/#save_1","text":"<ul> <li>Click \"Save\".</li> </ul>","title":"Save"},{"location":"apps/sonarr/#iii-download-client","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Download Client\".</p> </li> <li> <p>Completed Download Handling</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Remove: <code>Yes</code> (your preference)</p> </li> <li> <p>Failed Download Handling</p> </li> <li> <p>Redownload: <code>Yes</code></p> </li> <li> <p>Remove: <code>Yes</code></p> </li> </ol>","title":"iii. Download Client"},{"location":"apps/sonarr/#nzbget","text":"<ol> <li> <p>Add a new \"NZBGet\" download client.</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: NZBGet</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Host: <code>nzbget</code></p> </li> <li> <p>Port: <code>6789</code></p> </li> <li> <p>Username:  [[Your NZBGet Username|Install: NZBGet#security]]</p> </li> <li> <p>Password:  [[Your NZBGet Password|Install: NZBGet#security]]</p> </li> <li> <p>Category: <code>sonarr</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>Add Paused: <code>No</code></p> </li> <li> <p>Your settings will now look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add NZBGet.</p> </li> </ol>","title":"NZBGet"},{"location":"apps/sonarr/#rutorrent","text":"<ol> <li> <p>Add a new \"rTorrent\" download client.</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: ruTorrent</p> </li> <li> <p>Enable: <code>Yes</code></p> </li> <li> <p>Host: <code>rutorrent</code></p> </li> <li> <p>Port: <code>80</code></p> </li> <li> <p>URL Path: <code>RPC2</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>Username: [[Your ruTorrent Username|Install: ruTorrent#login]]</p> </li> <li> <p>Password: [[Your ruTorrent Password|Install: ruTorrent#login]]</p> </li> <li> <p>Category: <code>sonarr</code></p> </li> <li> <p>Directory: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> </li> </ol> <p></p> <ol> <li>Click \"Save\" to add ruTorrent.</li> </ol>","title":"ruTorrent"},{"location":"apps/sonarr/#iv-indexers","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Indexers\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> <li> <p>Add in your your favorite [[indexers|Prerequisites: Usenet vs BitTorrent]].</p> </li> </ol>","title":"iv. Indexers"},{"location":"apps/sonarr/#nzbhydra2","text":"<ol> <li> <p>Click Add Indexer (<code>+</code>).</p> </li> <li> <p>Select \"Newznab\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: NZBHydra2</p> </li> <li> <p>Enable RSS Sync: Your Preference</p> </li> <li> <p>Enable Search: Your Preference</p> </li> <li> <p>URL: <code>http://nzbhydra2:5076</code></p> </li> <li> <p>API Path: <code>/api</code></p> </li> <li> <p>API Key: [[Your NZBHydra2 API Key|Install: NZBHydra2#4-api-key]]</p> </li> <li> <p>Additional Parameters: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add NZBHydra2.</p> </li> </ol> <p>Note: The \"Test\" will keep failing until you add an indexer in [[NZBHydra2|Install: NZBHydra2]].</p>","title":"NZBHydra2"},{"location":"apps/sonarr/#jackett","text":"<p>Note: Each Indexer will need to be added separately.</p> <ol> <li> <p>Click Add Indexer (<code>+</code>)</p> </li> <li> <p>Select \"Torznab\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Indexer's Name</p> </li> <li> <p>Enable RSS Sync: Your Preference</p> </li> <li> <p>Enable Search: Your Preference</p> </li> <li> <p>URL: [[Indexer's Torznab Feed|Install: Jackett#3-adding-indexers-to-sonarrradarr]]</p> </li> <li> <p>API Path: <code>/api</code></p> </li> <li> <p>API Key: [[Your Jackett API Key|Install: Jackett#3-adding-indexers-to-sonarrradarr]]</p> </li> <li> <p>Additional Parameters: Leave Blank</p> </li> <li> <p>Your settings will look like this:</p> <p>(Note that the screenshot shows an <code>https</code> URL; this is incorrect.  It should be <code>http</code> as described above)</p> <p></p> </li> <li> <p>Click \"Save\" to add the indexer.</p> </li> </ol>","title":"Jackett"},{"location":"apps/sonarr/#v-connect","text":"<ol> <li> <p>Go to \"Settings\" -&gt; \"Connect\".</p> </li> <li> <p>Set \"Advanced Settings\": <code>Shown</code></p> </li> </ol>","title":"v. Connect"},{"location":"apps/sonarr/#torrent-cleanup","text":"<p>Torrent Cleanup Script is a custom script that will cleanup torrents from ruTorrent that were auto-extracted, but still being seeded. So if the script detects that <code>.rar</code> files are in the folder that Sonarr just imported from, it will delete the imported video file(s), leaving just the <code>.rar</code> files for seeding.</p>  <ol> <li> <p>Add a new \"Custom Script\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Torrent Cleanup</p> </li> <li> <p>On Grab: <code>No</code></p> </li> <li> <p>On Download: <code>Yes</code></p> </li> <li> <p>On Upgrade:  <code>Yes</code></p> </li> <li> <p>On Rename:<code>No</code></p> </li> <li> <p>Path: <code>/scripts/torrents/TorrentCleanup.py</code></p> </li> <li> <p>The settings will look like this:</p> </li> </ol> <p></p> <ol> <li>Click \"Save\" to add the Torrent Cleanup script.</li> </ol>","title":"Torrent Cleanup"},{"location":"apps/sonarr/#plex-autoscan","text":"<ol> <li> <p>Add a new \"Webhook\".</p> </li> <li> <p>Add the following:</p> </li> <li> <p>Name: Plex Autoscan</p> </li> <li> <p>On Grab: <code>No</code></p> </li> <li> <p>On Download: <code>Yes</code></p> </li> <li> <p>On Upgrade:  <code>Yes</code></p> </li> <li> <p>On Rename: <code>Yes</code></p> </li> <li> <p>Filter Series Tags: Leave Blank</p> </li> <li> <p>URL: [[Your Plex Autoscan URL|Install: Plex-Autoscan#4-obtaining-the-plex-autoscan-url]]</p> </li> <li> <p>Method:<code>POST</code></p> </li> <li> <p>Username: Leave Blank</p> </li> <li> <p>Password: Leave Blank</p> </li> <li> <p>The settings will look like this:</p> <p></p> </li> <li> <p>Click \"Save\" to add Plex Autoscan.</p> </li> </ol>","title":"Plex Autoscan"},{"location":"apps/sonarr/#3-tv-path","text":"<ol> <li> <p>When you are ready to add your first show to Sonarr, click the \"Path\" drop-down and select \"Add a different path\".</p> </li> <li> <p>Click the blue \"Browse\" button, select the <code>tv</code> folder, scroll to the bottom, and select \"OK\".</p> </li> <li> <p>Click the green \"check\" button to add the path.</p> </li> <li> <p>All TV shows added now will have that path set.</p> </li> </ol>","title":"3. TV Path"},{"location":"apps/sonarr/#4-api-key","text":"<p>This is used during the setup of [[Ombi|Install: Ombi]] and [[Organizr|Install: Organizr]].</p> <ul> <li>Go to \"Settings\" -&gt; \"General\" -&gt; \"Security\" -&gt; \"API Key\".</li> </ul> <p></p>","title":"4. API Key"},{"location":"apps/tautulli/","text":"<ul> <li>1. Intro</li> <li>2. URL</li> <li>3. Setup Wizard</li> <li>4. Settings</li> </ul>","title":"tautulli"},{"location":"apps/tautulli/#1-intro","text":"<p>PlexPy (Tautulli), by JonnyWong16, is a web-based application runs alongside the Plex Media Server to monitor activity and track various statistics (eg most watched media). </p> <p></p>","title":"1. Intro"},{"location":"apps/tautulli/#2-url","text":"<p>To access PlexPy, visit https://plexpy.yourdomain.com</p>","title":"2. URL"},{"location":"apps/tautulli/#3-setup-wizard","text":"<ol> <li> <p>First time you go to the PlexPy site, you will be presented with the \"Tautulli Setup Wizard\". Click <code>Next</code>.</p> <p></p> </li> <li> <p>On the \"Plex Authentication\" page, sign in with your Plex username and password, and click <code>Authenticate</code>. When you see the \"Authentication successful.\" message, click <code>Next</code>.</p> <p></p> </li> <li> <p>On the \"Plex Media Server\" page, set the following:</p> </li> <li> <p>\"Plex IP or Hostname\": <code>plex</code></p> </li> <li>\"Port Number\": <code>32400</code></li> <li>\"Use SSL\": disabled</li> <li>\"Remote Server\": disabled </li> </ol> <p>Click <code>Verify</code>. When you see the \"Server found!\" message, click <code>Next</code>.</p> <pre><code>![](https://i.imgur.com/0vxUURW.png)\n</code></pre> <ol> <li> <p>On the \"Activity Logging\" page, select your preferences (default is OK) and click <code>Next</code>.</p> <p></p> </li> <li> <p>On the \"Notifications\" page, simply click <code>Next</code>.</p> <p></p> </li> <li> <p>On the \"Database Import\" page, click <code>Finish</code> to complete the setup.</p> <p></p> </li> </ol>","title":"3. Setup Wizard"},{"location":"apps/tautulli/#4-settings","text":"<ol> <li> <p>Once the PlexPy page comes up, go to \"Settings\".</p> <p></p> </li> <li> <p>Click \"Web Interface\" on the left. Fill in \"HTTP Username\" and \"HTTP Password (this will be the login for your PlexPy site), but don't click <code>Save</code> yet.  </p> <p></p> </li> <li> <p>Click \"Plex Media Server\" on the left. Click \"Show Advanced\" at the top. Under \"Logs Folder\", type in <code>/logs</code>. Now you can click <code>Save</code>. Also verify 'Use SSL' and 'Remote Server` are unchecked. </p> <p></p> </li> <li> <p>On the \"Restart\" popup window, click <code>Restart</code>.</p> <p></p> </li> </ol>","title":"4. Settings"},{"location":"community/basics/","text":"<p>The Saltbox Community repository is installed with Saltbox as part of a standard install. The Saltbox Community application installers are provided and maintained by the community but subject to approval. The applications are not part of a standard Saltbox install, but they are tested and confirmed to be compatible with the Saltbox ecosystem.</p> <p>Community Guides are written by the community to help others make the most of their system.</p>","title":"Basics"},{"location":"community/basics/#update","text":"<p>To update Saltbox Community run a standard saltbox update and both community and Saltbox will be updated</p> <pre><code>sb update\n</code></pre> <p>To force update Saltbox Community settings.yml file run:</p> <pre><code>sb install cm-settings\n</code></pre>","title":"Update"},{"location":"community/basics/#how-to-install-community-apps","text":"<p>For most apps it is as simple as running the <code>sb install</code> command in a shell with a <code>cm-</code> prefix followed by the name of the role.</p> <pre><code>sb install cm-rolename\n</code></pre> <p>For example, to install a jellyfin server you would run the jellyfin role:-</p> <p><pre><code>sb install cm-jellyfin\n</code></pre> Before running any role you should first carefully read through the docs to see if there are any additional steps or pre configuration settings required.</p> <p>A list of all roles available to Saltbox can be called from the terminal via:-</p> <pre><code>sb list\n</code></pre>  <p>Tip</p> <p>Where possible the configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code> and used to create a default user an password for logging in.</p>","title":"How to Install Community Apps"},{"location":"community/basics/#contributing-to-community-apps","text":"<p>Note: If you just want to install a container into the Saltbox system without creating a role, see this article.</p> <p>That work will also help you determine what you will need to do in a Community role, so starting there would not be wasted effort.</p> <p>If you want to create a Community role to allow others to install your role, keep reading.</p>","title":"Contributing to Community Apps"},{"location":"community/basics/#editing-an-existing-role","text":"<p>If you want to make a change to an existing role [for example, changing the docker image it uses], you don't have [or want to] to create a new role. You make changes like this for either core or community roles using the inventory system</p>","title":"Editing an existing role:"},{"location":"community/basics/#preparatory-work","text":"<p>Start by making your own fork of the community repo by clicking on the \"Fork\" button up and to the right.</p> <p>This will take you to your own copy of the community repo.</p> <p>On your development machine [which should probably be a machine running saltbox, as it makes things easier with regard to testing]:</p> <p>clone your community fork:</p> <pre><code>git clone https://github.com/YOURNAMEHERE/Community.git community\n</code></pre> <p>go into that local community dir:</p> <pre><code>cd community\n</code></pre> <p>make sure your local repo is up-to-date:</p> <pre><code>git pull\n</code></pre> <p>create your feature branch:</p> <pre><code>git checkout -b my-cool-role\n</code></pre>","title":"Preparatory work:"},{"location":"community/basics/#creating-a-role","text":"<p>Now you're ready to start work on your new role.</p> <p>A good starting point is to find a role that is similar to the one you want to add and use it as a starting point. For example, if your container requires mariadb and you want to create a database during setup, bookstack does that.</p> <p>copy the \"starting point\" role to your role:</p> <pre><code>cp -R roles/bookstack roles/my-cool-role\n</code></pre> <p>[of course, substitute whatever role you're using as your prototype for \"bookstack\"]</p> <p>Next step is to create the role. At a minimum, you will need to modify:</p> <pre><code>roles\n\u2514\u2500\u2500 my-cool-role\n \u00a0\u00a0 \u251c\u2500\u2500 defaults\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.yml\n \u00a0\u00a0 \u2514\u2500\u2500 tasks\n \u00a0\u00a0     \u2514\u2500\u2500 main.yml\ncommunity.yml\n</code></pre> <p>There may be other things required; there may be templates or sub-tasks or what have you. Those three files are the absolute bare minimum that would need to be created to add a new role.</p> <p>What are those things?</p> <pre><code>roles/my-cool-role/defaults/main.yml\n</code></pre> <p>This file contains various details for your role; the docker image, the name, subdomain, that sort of thing. The stuff in there should be self-explanatory or understandable with comparisons to existing roles; if it's not, then with all respect you probably shouldn't be creating a role right now.</p> <pre><code>roles/my-cool-role/tasks/main.yml\n</code></pre> <p>This file drives the install of your role. The stuff in there should be self-explanatory or understandable with comparisons to existing roles; if it's not, then again, with all respect you probably shouldn't be creating a role right now.</p> <p>There is a wiki article on adding new containers here; this may be of some use.</p> <p>Don't forget the header in both these files:</p> <pre><code>#########################################################################\n# Title:            Community: my-cool-role                             #\n# Author(s):        some-guy, salty                                     #\n# URL:              https://github.com/saltyorg/Community               #\n# --                                                                    #\n#########################################################################\n#                   GNU General Public License v3.0                     #\n#########################################################################\n---\n</code></pre> <p>Be sure you edit this to reflect your role, name, and such depending on what's there in your prototype</p> <p><pre><code>community.yml\n</code></pre> This file drives the ansible install system by providing the valid tags that you can use with:</p> <pre><code>sb install cm-TAG\n</code></pre> <p>Again, it's a simple file, and it should be quite apparent what needs to be added for a new role.</p>","title":"Creating a role:"},{"location":"community/basics/#other-files-you-may-need-to-edit","text":"<pre><code>defaults\n\u2514\u2500\u2500 settings.yml.default\n</code></pre> <p>This file provides the prototype settings file; if your role requires some new settings, add them to this file.  When the community repo is updated, your new settings will be added to the user's current settings file and they will be prompted to review it. </p> <pre><code>templates\n\u2514\u2500\u2500 my-cool-role.j2\n</code></pre> <p>Perhaps you need to create a config file, or a service file, or the like.  Create templates for them here and fill them in at install time.  THere are lots of examples in the existing roles.</p>","title":"Other files you may need to edit:"},{"location":"community/basics/#testing","text":"<p>Warning</p> <p>BE SURE TO TEST YOUR ROLE.</p>  <p>You want to make sure that your role works, so be sure you run it several times. Run it on fresh installs, reinstalls, enlist someone else to run it for you. The point of doing this is to add something to community for others to use; if you don't verify that it works, why are you doing it?</p>","title":"Testing:"},{"location":"community/basics/#creating-the-pull-request","text":"<p>Now it's complete, and tested, and you want it to be added to community for other users to enjoy.</p> <p>First, commit your changes to your fork.</p>  <p>Warning</p> <p>BE SURE YOU DO NOT COMMIT FILES CONTAINING SECRETS LIKE API KEYS OR TOKENS.</p>  <p>This will involve adding the files you changed or added and doing a git commit and git push.</p> <p>This is standard git stuff, and again, with all respect, if you don't know these git basics you probably shouldn't be creating a role right now.</p> <p>Back at github.com, create a pull request against the \"master\" branch of the community repo.</p> <p>You do this by switching to your feature branch in your repo and clicking \"Pull request\" at the top where it says something like: \"This branch is 2 commits ahead of Community:master.\"</p> <p>This is a request for the Saltbox team to \"pull\" your changes into their repo.</p> <p>If there are special instructions or details that your role needs, add them to the pull request comments. If needed, create a doc page [which will be its own pull request] for the role.</p>  <p>Warning</p> <p>BE SURE YOU DO NOT COMMIT FILES CONTAINING SECRETS LIKE API KEYS OR TOKENS.</p>  <p>Your pull request will be reviewed eventually, and may generate comments or change requests.</p> <p>You can address those change requests by making further commits to your feature branch; they will automatically be added to this pull request.</p> <p>Eventually, if deemed a good or just reasonable fit, your pull request will be accepted and it will appear in the source community repo.</p>","title":"Creating the Pull Request:"},{"location":"community/settings/","text":"<p>The configuration file for Saltbox Community settings is called settings.yml and is located at <code>/opt/community/settings.yml</code></p> <p>settings.yml</p> <pre><code>---\nalternatrrx:  # (1)\n  roles:\n    - 1080webdl\n    - 1080remux\nbazarrx:  # (2)\n  roles:\n    - 1080webdl\n    - 1080remux\ndelugevpn:  # (3)\n  vpn_endpoint: netherlands.ovpn\n  vpn_pass: your_vpn_password\n  vpn_prov: pia\n  vpn_user: your_vpn_username\n  vpn_client: wireguard # 'wireguard' or 'openvpn'\ndelugex:  # (4)\n  roles:\n    - 1080webdl\n    - 1080remux\ngoplaxt:  # (5)\n  trakt_id: ~\n  trakt_secret: ~\nhandbrake:  # (6)\n  handbrake_pass: saltbox # must be less than eight characters\nlidarrx:  # (7)\n  roles:\n    - flac\n    - mp3\nmoviematch:  # (8)\n  libraries: Movies\n  plex_url: http://plex:32400\nombix:  # (9)\n  roles:\n    - 4k\nqbittorrentvpn:  # (10)\n  vpn_endpoint: netherlands.ovpn\n  vpn_user: your_vpn_username\n  vpn_pass: your_vpn_password\n  vpn_prov: pia\n  vpn_client: wireguard # 'wireguard' or 'openvpn'\nqbittorrentx:  # (11)\n  roles:\n    - 1080webdl\n    - 1080remux\nradarrx:  # (12)\n  roles:\n    - 1080webdl\n    - 1080remux\nreadarrx:  # (13)\n  roles:\n    - ebooks\n    - audiobooks\nrequestrrx:  # (14)\n  roles:\n    - 1080\n    - 4k\nrfloodx:  # (15)\n  roles:\n    - 1080webdl\n    - 1080remux\nsonarrx:  # (16)\n  roles:\n    - 1080webdl\n    - 1080remux\ntautullix:  # (17)\n  tautulli: plex\n  tautulli2: plex2\ntransmissionvpn:  # (18)\n  vpn_endpoint: netherlands.ovpn\n  vpn_pass: your_vpn_password\n  vpn_prov: NORDVPN\n  vpn_user: your_vpn_username\ntransmissionx:  # (19)\n  roles:\n    - 1080webdl\n    - 1080remux\nunifi:  # (20)\n  port: 8080\n</code></pre> <ol> <li> <p>AlternatrrX role, provide a list of \"X's\"     For each listed item an Alternatrr instance will be created and the item set to the subdomain.</p> </li> <li> <p>BazarrX role, provide a list of \"X's\"     For each listed item a Bazarr instance will be created and the item set to the subdomain.</p> </li> <li> <p>DelugeVPN settings block, replace the examples given with your own information.</p> </li> <li> <p>DelugeX role, provide a list of \"X's\"     For each listed item a Deluge instance will be created and the item set to the subdomain.</p> </li> <li> <p>Goplaxt    Trakt App ID and Secret</p> </li> <li> <p>Handbrake</p> </li> <li> <p>LidarrX role, provide a list of \"X's\"     For each listed item a Lidarr instance will be created and the item set to the subdomain.</p> </li> <li> <p>Moviematch</p> </li> <li> <p>Ombix role, provide a list of \"X's\"     For each listed item an Ombi instance will be created and the item set to the subdomain.</p> </li> <li> <p>QbittorrentVPN</p> </li> <li> <p>QbittorrentX role, provide a list of \"X's\"     For each listed item a QBitorrent instance will be created and the item set to the subdomain.</p> </li> <li> <p>RadarrX role, provide a list of \"X's\"     For each listed item a Radarr instance will be created and the item set to the subdomain.</p> </li> <li> <p>ReadarrX role, provide a list of \"X's\"     For each listed item a Readarr instance will be created and the item set to the subdomain.</p> </li> <li> <p>RequestrrX role, provide a list of \"X's\"     For each listed item a Requestrr instance will be created and the item set to the subdomain.</p> </li> <li> <p>RfloodX role, provide a list of \"X's\"     For each listed item an RFlood instance will be created and the item set to the subdomain.</p> </li> <li> <p>SonarrX role, provide a list of \"X's\"     For each listed item a Sonarr instance will be created and the item set to the subdomain.</p> </li> <li> <p>TautulliX role, provide a list of \"X's\"     For each listed item a Tautulli instance will be created and the item set to the subdomain.</p> </li> <li> <p>TransmissionVPN</p> </li> <li> <p>TransmissionX role, provide a list of \"X's\"     For each listed item a Transmission instance will be created and the item set to the subdomain.</p> </li> <li> <p>Unifi</p> </li> </ol>","title":"The Settings File"},{"location":"community/apps/airdcpp/","text":"","title":"AirDC++"},{"location":"community/apps/airdcpp/#what-is-it","text":"<p>AirDC++ is an easy to use client for Advanced Direct Connect and Direct Connect networks. You are able to join \"hubs\" with other users, and chat, perform searches and browse the share of each user. It allows you to share files with friends and other people.</p>","title":"What is it?"},{"location":"community/apps/airdcpp/#project-information","text":"<ul> <li> <p> AirDC++ </p> </li> <li> <p> Docs</p> </li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/airdcpp/#1-installation","text":"<pre><code>sb install cm-airdcpp\n</code></pre>","title":"1. Installation"},{"location":"community/apps/airdcpp/#2-url","text":"<ul> <li>To access AirDC++, visit <code>https://airdcpp._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/airdcpp/#3-setup","text":"<ul> <li> Documentation: AirDC++ Client Docs</li> </ul>","title":"3. Setup"},{"location":"community/apps/airsonic/","text":"","title":"Airsonic"},{"location":"community/apps/airsonic/#what-is-it","text":"<p>Airsonic is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.</p>","title":"What is it?"},{"location":"community/apps/airsonic/#project-information","text":"<ul> <li> <p> Airsonic </p> </li> <li> <p> Docs</p> </li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/airsonic/#1-installation","text":"<pre><code>sb install cm-airsonic\n</code></pre>","title":"1. Installation"},{"location":"community/apps/airsonic/#2-url","text":"<ul> <li>To access Airsonic, visit <code>https://airsonic._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/airsonic/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/alltube/","text":"","title":"AllTube"},{"location":"community/apps/alltube/#what-is-it","text":"<p>AllTube is an HTML GUI for youtube-dl supporting a wide range of websites.</p>","title":"What is it?"},{"location":"community/apps/alltube/#project-information","text":"<ul> <li> <p> AllTube </p> </li> <li> <p> Docs</p> </li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/alltube/#1-installation","text":"<pre><code>sb install cm-alltube\n</code></pre>","title":"1. Installation"},{"location":"community/apps/alltube/#2-url","text":"<ul> <li>To access AllTube, visit <code>https://alltube._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/alltube/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/alternatrr/","text":"","title":"alternatrr"},{"location":"community/apps/alternatrr/#what-is-it","text":"<p>alternatrr lets you add alternative titles to your sonarr instance by editing the sonarr.db file directly via a simple UI.</p>","title":"What is it?"},{"location":"community/apps/alternatrr/#project-information","text":"<ul> <li> alternatrr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/alternatrr/#1-installation","text":"<pre><code>sb install cm-alternatrr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/alternatrr/#2-url","text":"<ul> <li>To access alternatrr, visit <code>https://alternatrr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/alternatrr/#3-setup","text":"<ul> <li> Documentation </li> </ul>","title":"3. Setup"},{"location":"community/apps/alternatrrx/","text":"","title":"alternatrrX"},{"location":"community/apps/alternatrrx/#what-is-it","text":"<p>alternatrrX is an arrX role for alternatrr.</p>","title":"What is it?"},{"location":"community/apps/alternatrrx/#project-information","text":"<ul> <li> alternatrr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/alternatrrx/#1-installation","text":"<pre><code>sb install cm-alternatrrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/alternatrrx/#2-url","text":"<ul> <li>To access alternatrrX, visit <code>https://alternatrrX._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/alternatrrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the alternatrrX section in community <code>settings.yml</code>: using a list format as below.</p> </li> </ol> <pre><code> alternatrrx:\n   roles:\n     - 1080webdl\n     - 1080remux\n</code></pre> <ul> <li>For app specific instructions refer to the parent role,<ul> <li>alternatrr</li> <li>and the upstream documentation   Documentation </li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/apprise/","text":"","title":"Apprise"},{"location":"community/apps/apprise/#what-is-it","text":"<p>Apprise allows you to send a notification to almost all of the most popular notification services available to us today such as: Telegram, Discord, Slack, Amazon SNS, Gotify, etc.</p>","title":"What is it?"},{"location":"community/apps/apprise/#project-information","text":"<ul> <li> Apprise </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/apprise/#1-installation","text":"<pre><code>sb install cm-apprise\n</code></pre>","title":"1. Installation"},{"location":"community/apps/apprise/#2-setup","text":"<p>As configured, the instance runs on the Docker network accessible to other saltbox network containers at  <code>http://apprise:8000</code>  as well as via the reverse proxy at  <code>https://apprise.domain.tld</code>.</p> <p>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> <ul> <li> Documentation: Apprise Client Docs</li> </ul>","title":"2. Setup"},{"location":"community/apps/archivebox/","text":"","title":"ArchiveBox"},{"location":"community/apps/archivebox/#what-is-it","text":"<p>ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.</p>","title":"What is it?"},{"location":"community/apps/archivebox/#project-information","text":"<ul> <li> ArchiveBox </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/archivebox/#1-installation","text":"<pre><code>sb install cm-archivebox\n</code></pre>","title":"1. Installation"},{"location":"community/apps/archivebox/#2-url","text":"<ul> <li>To access ArchiveBox, visit <code>https://archivebox._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/archivebox/#3-setup","text":"<p>Initial setup guide thanks to <code>erisheaded</code> on CB discord.</p> <ol> <li>Run tag:     <pre><code>sb install cm-archivebox\n</code></pre></li> <li>Connect to container:    <pre><code>docker exec -it archivebox /bin/bash\n</code></pre></li> <li>NOTE: (This drops you in the /data folder. DO NOT switch to /data/archive directory)</li> <li>Switch to <code>archivebox</code> user for config:    <pre><code>su archivebox\n</code></pre></li> <li>Initialize with setup to create a web admin:    <pre><code>archivebox init \u2014setup\n</code></pre></li> <li>Enter username, email, and password</li> <li>Load URL and test login</li> </ol> <p>By default, your new installation has a publicly accessible web index, snapshots, and archive addition access. You may not want this for a host of security reasons, so it's recommended to review the ArchiveBox Security Overview and tailoring these settings to your preference when setting up.</p>","title":"3. Setup"},{"location":"community/apps/arrx/","text":"","title":"arrX"},{"location":"community/apps/arrx/#create-multiple-sonarr-radarr-bazarr-etc-containers","text":"<p>Read through this entire page, even if you are only installing one of the apps.</p>","title":"Create multiple (Sonarr / Radarr / Bazarr / etc.) containers"},{"location":"community/apps/arrx/#background","text":"<p>There are a number of roles in the saltbox community repo which can be used to create multiple instances of an application.  Some of these include:</p>    Role Description     alternatrrx Sonarr alternative title management   bazarrx Subtitle downloading   delugex Torrent client   lidarrx Music management   ombix Request management   qbittorrentx Torrent client   radarrx Movie management   readarrx Ebook management   requestrrx Discord request bot   rfloodx Torrent client   sonarrx TV management   tautullix Plex stats, data, actions   transmissionx Torrent client    <p>They're all named somethingX because they allow creation of X number of something.</p> <p>They are all configured in the same way.</p> <p>In general terms, you'll enter the instances you want into the community <code>settings.yml</code>:</p> <pre><code>appnamex:\n  roles:\n    - \"\"\n    - bing\n    - bang\n    - boing\n</code></pre> <p>That will create:</p> <ul> <li>appname</li> <li>appnamebing</li> <li>appnamebang</li> <li>appnameboing</li> </ul> <p>as docker containers, subdomain, and data directories in <code>/opt</code>.</p> <p>For example, with this configuration:</p> <pre><code>sonarrx:\n  roles:\n    - \"\"\n    - bing\n    - bang\n    - boing\n</code></pre> <p>Running the saltbox community <code>sonarrx</code> tag would produce:</p>    entry Container Config dir Subdomain Note     \"\" sonarr <code>/opt/sonarr</code> sonarr.YOURDOMAIN.TLD Replaces the stock container   bing sonarrbing <code>/opt/sonarrbing</code> sonarrbing.YOURDOMAIN.TLD    bang sonarrbang <code>/opt/sonarrbang</code> sonarrbang.YOURDOMAIN.TLD    boing sonarrboing <code>/opt/sonarrboing</code> sonarrboing.YOURDOMAIN.TLD     <p>NOTE: the names have to be compliant with both domain names and docker names, so no funny business. Do not use anything but a-z and 0-9, no spaces, no commas, no colons, no dash, no exclamation marks, no nothing!</p> <p>The names, within the constraints above, are completely arbitrary.  There is nothing magic about the example configs [1080webdl, 1080remux] given below.  They represent some common use cases, but you can use whatever names you wish, as in the \"bing, bang, boing\" examples above.</p> <p>You will need to configure these new containers just as you did the stock containers.  One change; be sure each one gets a unique download category, so that each instance imports only those downloads meant for it.</p> <p>Also, you probably want to put some thought into the directory and library structure you want to use.  See \"Customizing Plex Libraries\".</p>","title":"Background"},{"location":"community/apps/arrx/#overwriting-the-stock-container","text":"<p>The example above shows a <code>\"\"</code> config entry.  For those apps which are also found in the stock saltbox install, this will overwrite the existing container.  Then, when you rerun the saltbox tag, this container will get overwritten by the stock one again.  You probably don't want that.</p> <p>For one thing, these \"arrX\" roles may be based on different images than the stock images.  For example, for a while the <code>radarrx</code> role installed Radarr v3 while the stock role installed v2.  You should pick one: use this role to replace the stock one, or not.</p> <p>You probably want to overwrite your existing role with this one; that will ensure that all your instances of Sonarr are based on the same image and get updated in the same way.  It's up to you, though, how you want to manage them.</p>","title":"Overwriting the stock container"},{"location":"community/apps/arrx/#if-you-want-to-use-this-to-overwrite-your-existing-sonarrradarretc-container","text":"<ol> <li>Include a <code>\"\"</code> entry in the config:    <pre><code> sonarrx:\n   roles:\n     - \"\"\n     - bing\n     - bang\n     - boing\n</code></pre></li> <li>Run the role as described below.    <code>bash   sb install cm-sonarrx</code></li> <li>Add the stock tag to the <code>[skip]</code> section in <code>\"/srv/git/saltbox/ansible.cfg\"</code>:    <pre><code>[tags]\nskip = sonarr,whatever,whatever\n</code></pre></li> </ol> <p>That will ensure that the stock <code>sonarr</code> tag doesn't overwrite the container you are creating here.</p> <p>When you want to update Sonarr, you'll run the Saltbox Community <code>sonarrx</code> tag instead.</p> <p>The same thing holds for every <code>arrX</code> variant discussed here.</p>","title":"If you want to use this to overwrite your existing Sonarr/Radarr/etc container:"},{"location":"community/apps/arrx/#if-you-do-not-want-to-overwrite-your-existing-sonarrradarretc-container","text":"<ol> <li>Make sure there IS NOT a <code>\"\"</code> entry in the config:    <pre><code>sonarrx:\n  roles:\n    - bing\n    - bang\n    - boing\n</code></pre></li> </ol> <p>That's all.  Your existing <code>sonarr</code> container will not be touched.</p> <p>Again, the same thing holds for every <code>arrX</code> variant discussed here.</p>","title":"If you DO NOT want to overwrite your existing Sonarr/Radarr/etc container:"},{"location":"community/apps/arrx/#create-multiple-sonarr-v3-containers","text":"<ol> <li>Edit <code>settings.yml</code> and change the sonarrx roles to what you want:</li> </ol>  I want to add a 4K version and leave my existing container untouched.  <pre><code>sonarrx:\n  roles:\n    - 4k\n</code></pre>   I want to add webdl and remux versions and leave my existing container untouched.  <pre><code>sonarrx:\n  roles:\n    - 1080webdl\n    - 1080remux\n</code></pre>   I want to replace my existing version and add reality and kids versions.  <pre><code>sonarrx:\n  roles:\n    - \"\"\n    - reality\n    - kids\n</code></pre>    **Refer to the notes above about overwriting the default container.**      <ol> <li>Run the sonarrx role as a normal saltbox community role.</li> </ol> <pre><code>sb install cm-sonarrx\n</code></pre> <p>Remember that all those names are arbitrary and purely cosmetic for your own use.  There is nothing that ties <code>sonarrreality.YOURDOMAIN.TLD</code> to reality TV aside from the configuration that you are going to give it.</p>","title":"Create multiple Sonarr v3 containers"},{"location":"community/apps/asshama/","text":"","title":"Absolute Series Scanner and HAMA role for anime."},{"location":"community/apps/asshama/#what-is-it","text":"<p>asshama will install the Absolute Series Scanner (ASS) and the HTTP Anidb Metadata Agent (HAMA).</p> <p>HAMA is a plex agent specifically for anime and its various challenges. It is recommended to use the HAMA agent with the Absolute Series Scanner (ASS). Hama agent features include: -</p> <ul> <li>Both Movies and Series Agent</li> <li>AniDB ID to TVDB/TMDB ID matching (with studio and episode mapping list) with ScudLee's xml mapping file</li> <li>Posters from TVDB (assign a poster to each anidb id in anidb to tvdb mapping file to avoid poster duplicates)</li> <li>TVDB episode screenshots</li> <li>Episode summary (in English only) courtesy of TVDB through ScudLee's XML episode mappings</li> <li>Uses studio from mapping file then AniDB (as often missing from AniDB)</li> <li>Search part entirely local through AniDB HTML API database file anime-titles.xml</li> <li>Separate language order selection for the series name and episode titles in Agent Settings (Supports Kanji characters in folders, filenames, titles)</li> <li>Warnings in html report files (no poster available, episode summary empty, TVDB id not in mapping file) to allow the community to update more easily the mapping XML or TVDB, list of missing episodes</li> <li>Collection mapping from ScudLee's movie collection ammended with AniDB RelatedAnime field</li> <li>Unique posters by using the anidbid rank in the mapping to rotate the posters</li> <li>when a serie is not found in AniDB, search TVDB and TMDB automatically</li> <li>Trakt scrobbling supports Hama guids</li> </ul>","title":"What is it?"},{"location":"community/apps/asshama/#project-information","text":"<ul> <li> Absolute Series Scanner (A.S.S.)</li> <li> HTTP Anidb Metadata Agent (HAMA)</li> </ul>","title":"Project Information"},{"location":"community/apps/asshama/#1-installation","text":"<pre><code>sb install cm-asshama\n</code></pre>","title":"1. Installation"},{"location":"community/apps/asshama/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/autoscan/","text":"","title":"Autoscan"},{"location":"community/apps/autoscan/#what-is-it","text":"<p>Autoscan replaces the default Plex, Emby, and Jellyfin behaviour for picking up file changes on the file system. Autoscan integrates with Sonarr, Radarr, Lidarr and Google Share Drives to fetch changes in near real-time without relying on the file system.</p> <p>Autoscan is a rewrite of the original Plex Autoscan written in the Go language. In addition, this rewrite introduces a more modular approach and should be easy to extend in the future.</p>","title":"What is it?"},{"location":"community/apps/autoscan/#project-information","text":"<ul> <li> Autoscan </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/autoscan/#1-installation","text":"<pre><code>sb install cm-autoscan\n</code></pre>","title":"1. Installation"},{"location":"community/apps/autoscan/#2-setup","text":"<p>The Saltbox Community Autoscan role will attempt to partially configure your autoscan config file located at <code>/opt/autoscan/config.yml</code>. You should refer to the documentation and adjust this file as suits your own needs. The config generated is very minimal. If you wish to monitor sharedrive activity you should probably consider using a-train rather than soon to be shelved bernard trigger.</p> <ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/bazarr/","text":"","title":"Bazarr"},{"location":"community/apps/bazarr/#what-is-it","text":"<p>Bazarr is a companion application to Sonarr and Radarr that manages and downloads subtitles based on your requirements.</p>","title":"What is it?"},{"location":"community/apps/bazarr/#project-information","text":"<ul> <li> Bazarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/bazarr/#1-installation","text":"<pre><code>sb install cm-bazarr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/bazarr/#2-url","text":"<ul> <li>To access Bazarr, visit <code>https://bazarr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/bazarr/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/bazarrx/","text":"","title":"BazarrX"},{"location":"community/apps/bazarrx/#what-is-it","text":"<p>bazarrX is an arrX role for bazarr.</p>","title":"What is it?"},{"location":"community/apps/bazarrx/#project-information","text":"<ul> <li> Bazarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/bazarrx/#1-installation","text":"<pre><code>sb install cm-bazarrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/bazarrx/#2-url","text":"<ul> <li>To access bazarrX, visit <code>https://bazarrx._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/bazarrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the bazarrX section in community <code>settings.yml</code>: using a list format as below.</p> </li> </ol> <pre><code> bazarrx:\n   roles:\n     - 1080webdl\n     - 1080remux\n</code></pre> <ul> <li>For app specific instructions refer to the parent role,<ul> <li>bazarr</li> <li>and the upstream documentation   Documentation </li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/beets/","text":"","title":"Beets"},{"location":"community/apps/beets/#what-is-it","text":"<p>Beets catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.</p> <p>Beets is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.</p>","title":"What is it?"},{"location":"community/apps/beets/#project-information","text":"<ul> <li> Beets </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/beets/#1-installation","text":"<pre><code>sb install cm-beets\n</code></pre>","title":"1. Installation"},{"location":"community/apps/beets/#2-url","text":"<ul> <li>To access Beets, visit <code>https://beets._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/beets/#3-setup","text":"<ul> <li>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></li> <li>When the role is run, a cron job is set to automatically import any music found at <code>/mnt/local/downloads/music</code> every hour.     If a match is under 95% beets will skip the file and it will need manual importing.</li> <li>To run a manual import (which will help correct any matches under 95%) run the following command:  <pre><code>rm /opt/beets/state.pickle &amp;&amp; docker exec -it beets /bin/bash -c 'beet import /downloads'\n</code></pre></li> <li> <p>If you want to change the folder structure you should do so in the config file located at   <code>/opt/beets/config.yaml</code>  This link details the allowed options</p> <p>If you already have imported music you will need to run an import using the following command: <pre><code>docker exec -it beets /bin/bash -c 'beet import /music'\n</code></pre></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/booksonic/","text":"","title":"Booksonic Air"},{"location":"community/apps/booksonic/#what-is-it","text":"<p>Booksonic Air is a platform for accessing the audibooks you own wherever you are. At the moment the platform consists of Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.</p>","title":"What is it?"},{"location":"community/apps/booksonic/#project-information","text":"<ul> <li> Booksonic Air </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/booksonic/#1-installation","text":"<pre><code>sb install cm-booksonic\n</code></pre>","title":"1. Installation"},{"location":"community/apps/booksonic/#2-url","text":"<ul> <li>To access Booksonic Air, visit <code>https://booksonic._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/booksonic/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/bookstack/","text":"","title":"BookStack"},{"location":"community/apps/bookstack/#what-is-it","text":"<p>BookStack is a simple, self-hosted, easy-to-use platform for organising and storing information.</p>","title":"What is it?"},{"location":"community/apps/bookstack/#project-information","text":"<ul> <li> BookStack </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/bookstack/#1-installation","text":"<pre><code>sb install cm-bookstack\n</code></pre>","title":"1. Installation"},{"location":"community/apps/bookstack/#2-url","text":"<ul> <li>To access BookStack, visit <code>https://bookstack._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/bookstack/#3-setup","text":"<ul> <li> <p>Log in using the default admin details <code>admin@admin.com</code> with a password of <code>password</code>. You should change these details immediately after logging in for the first time.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/btrfsmaintenance/","text":"","title":"BTRFS Maintenance"},{"location":"community/apps/btrfsmaintenance/#what-is-it","text":"<p>BTRFS Maintenance is a set of scripts supplementing the btrfs filesystem and aims to automate a few maintenance tasks. This means the scrub, balance, trim or defragmentation.</p> <p>Each of the tasks can be turned on/off and configured independently. The default config values were selected to fit the default installation profile with btrfs on the root filesystem.</p>","title":"What is it?"},{"location":"community/apps/btrfsmaintenance/#project-information","text":"<ul> <li> BTRFS Maintenance </li> <li> Docs</li> <li> Github:</li> </ul>","title":"Project Information"},{"location":"community/apps/btrfsmaintenance/#1-installation","text":"<pre><code>sb install cm-btrfsmaintenance\n</code></pre>","title":"1. Installation"},{"location":"community/apps/btrfsmaintenance/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/calibre/","text":"","title":"Calibre"},{"location":"community/apps/calibre/#what-is-it","text":"<p>Calibre is a powerful and easy to use e-book manager. Users say it\u2019s outstanding and a must-have. It\u2019ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It\u2019s also completely free and open source and great for both casual users and computer experts.</p>","title":"What is it?"},{"location":"community/apps/calibre/#project-information","text":"<ul> <li> Calibre </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/calibre/#1-installation","text":"<pre><code>sb install cm-calibre\n</code></pre>","title":"1. Installation"},{"location":"community/apps/calibre/#2-url","text":"<ul> <li>To access Calibre, visit <code>https://calibre._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/calibre/#3-setup","text":"<ul> <li> <p>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p>Calibre is ready for use. If you added your pre-existing Calibre library to /mnt/local/Media/Books then you should see your library is ready to go. If not, then you have a blank library ready for you to fill.</p> </li> </ul>  <p>Info</p> <p>Running Calibre on a headless server is not very fun. If at all possible, run Calibre on your local, home computer. Use rclone to sync the files from home to google drive, and then another sync from google drive to your server so that Calibre-Web can use it.</p> <p>A local database file is required. This means you cannot run either Calibre or Calibre-Web from a mounted teamdrive, and this is the biggest pain for many of us. The easiest solution is to simply have your database and book files all located in /mnt/local/Media/Books.</p> <p>Both Calibre and Calibre-Web expect to find your library in <code>/mnt/unionfs/Media/Books</code>. Note that per standard Saltbox setup, <code>/mnt/local</code> is included inside <code>/mnt/unionfs</code>. However, both dockers also include access to anything in your <code>/mnt</code> directory.</p>","title":"3. Setup"},{"location":"community/apps/calibre/#4-handy-commands-for-managing-your-calibre-docker","text":"<p>You can access advanced features of the Guacamole remote desktop using ctrl+alt+shift enabling you to use remote copy/paste and different languages.</p> <ul> <li> <p>Shell access whilst the container is running:  <code>docker exec -it calibre /bin/bash</code></p> </li> <li> <p>To monitor the logs of the container in realtime:  <code>docker logs -f calibre</code></p> </li> <li> <p>Container version number:  <code>docker inspect -f '{{ index .Config.Labels \"build_version\" }}' calibre</code></p> </li> <li> <p>Image version number:  <code>docker inspect -f '{{ index .Config.Labels \"build_version\" }}' linuxserver/calibre</code></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"4. Handy commands for managing your calibre docker:"},{"location":"community/apps/calibre_web/","text":"","title":"Calibre-Web"},{"location":"community/apps/calibre_web/#what-is-it","text":"<p>Calibre-Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.</p> <p>Calibre-Web allows you to add users, and each user can set up a Kindle email address to have ebooks automatically sent to their Kindle reader or Kindle app. Users can also simply download epub, pdf, or whatever files you have. Requires an existing Calibre library database.</p>  <p>Info</p> <p>Calibre and Calibre-web do NOT need to be on the same server. But you do need to have a local copy of the Calibre <code>metadata.db</code> and a path to the books for calibre-web to operate.</p>","title":"What is it?"},{"location":"community/apps/calibre_web/#project-information","text":"<ul> <li> Calibre-Web </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/calibre_web/#1-installation","text":"<pre><code>sb install cm-calibre-web\n</code></pre>","title":"1. Installation"},{"location":"community/apps/calibre_web/#2-url","text":"<ul> <li>To access Calibre-Web, visit <code>https://calibre-web._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/calibre_web/#3-setup","text":"<ul> <li> <p>Default admin login:   <pre><code>Username: admin\nPassword: admin123\n</code></pre>   Change the default log in details immediately.</p> </li> <li> <p>Unrar is included by default and needs to be set in the Calibre-Web admin page (Basic Configuration:External Binaries) with a path of <code>/usr/bin/unrar</code>.</p> </li> <li> <p>Automatic ebook conversion via Calibre converter is included.  Enable it in the Calibre-Web admin page (Basic Configuration:External Binaries) by setting the Path to Calibre E-Book Converter to <code>/usr/bin/ebook-convert</code>.</p> </li> <li> <p>The kepubify ebook conversion tool (MIT License) to convert epub to kepub is included. In the Calibre-Web admin page (Basic Configuration:External Binaries) set the Path to Kepubify E-Book Converter to <code>/usr/bin/kepubify</code>.</p> </li> </ul> <p>You can access advanced features of the Guacamole remote desktop using ctrl+alt+shift enabling you to use remote copy/paste and different languages.</p> <ul> <li> <p>Shell access whilst the container is running:  <code>docker exec -it calibre-web /bin/bash</code></p> </li> <li> <p>To monitor the logs of the container in realtime:  <code>docker logs -f calibre-web</code></p> </li> <li> <p>Container version number:  <code>docker inspect -f '{{ index .Config.Labels \"build_version\" }}' calibre-web</code></p> </li> <li> <p>Image version number:  <code>docker inspect -f '{{ index .Config.Labels \"build_version\" }}' linuxserver/calibre-web</code></p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/calibre_web/#4-sks-calibre-web-usage-tips","text":"","title":"4. SK's Calibre-Web Usage Tips"},{"location":"community/apps/calibre_web/#smtp-email-server-setup","text":"<p>A useful function of Calibre-Web is sending ebooks by email.  Therefore, you need to set up SMTP e-mail server settings.</p> <p>I am using Google to host the email for mydomain.com.  In my case, after trial and error, I found it most reliable to go into my Google control panel, go to the SMTP settings, and whitelist my server\u2019s IP address without authentication.  Now, I can send email from any Saltbox app that supports it (Ombi, Tautelli, Organizr, and Calibre-Web) with no troubles.</p> <pre><code>Hostname: smtp-relay.gmail.com, Port:  25,  SSL: No\n</code></pre>","title":"SMTP Email Server Setup"},{"location":"community/apps/calibre_web/#kindle-setup","text":"<p>There is a nice benefit to using a Kindle.  When you send a \u201cpersonal document\u201d (book) to your Kindle account, it will automatically download to the specific device tied to the email address you use. Even though it\u2019s called a document, it goes into your regular library and looks just like any book you may have purchased, including the cover.  In addition, that book is available on any other device or app tied to your account, so you can read the same book on your phone, a Kindle Paperwhite, and an iPad.  Amazon\u2019s WhisperSync feature will bookmark your most recent page in the background, so if you switch devices it will ask if you want to update to the most recent page read.</p> <p>If you (or your users) want to have books sent directly to a Kindle from Calibre-Web email, then there are additional one-time setup steps for each user.</p> <ul> <li> <p>Tell Amazon to accept books sent from your website</p> <ul> <li>Go to www.amazon.com</li> <li>On the top navigation bar, go to <code>Account &amp; Lists</code>.  In the dropdown, click on <code>Your Content and Devices</code>.</li> <li>Towards the top of the white section, in the middle, click on <code>Preferences</code></li> <li>Scroll down to Personal Document Settings. Click the title to open up that section of the page.</li> <li>Under <code>Approved Personal Document E-mail List</code>, click the link for <code>\"Add a new approved e-mail address\"</code></li> <li>In the popup, add <code>@yourdomain.com</code> and save.  Done!</li> </ul> <p>Before closing the website, you might want to grab your device email address for the next step.  Under the Send-to-Kindle E-Mail Settings, copy the email address where you want the books sent by default. </p> </li> <li> <p>Add your Kindle email address to your profile on books.yourdomain.com</p> <ul> <li>Once logged in, on the top ride side, click your name to open your profile</li> <li>Add your kindle email address and save</li> <li>Your Kindle email address will be something like name_79@kindle.com.  Every Kindle device and mobile app has its own unique address, however, you can send to any of your devices and it will still be available on all of them.  You can find this email address either in the Settings of the device/app, or copy it from the Devices page</li> </ul> </li> </ul>  <p>Info</p> <p>Kindle has started sending verification emails on every document sent if your Kindle's email is the one they generated for you.  While you are on your settings page, go ahead and make up a new Kindle email address.</p>  <p>Enjoy!</p>","title":"Kindle Setup"},{"location":"community/apps/calibre_web/#5-advanced-method-of-library-storage","text":"<p>Since only the <code>metadata.db</code> file has to be local, you can keep the metadata.db file in <code>/mnt/local/Media/Books</code> as RW and the actual book files in <code>teamdrive:Books</code> as RO and mergerfs them together. Use the latest rclone <code>--vfs-cache-mode=full</code> and related cloud-seeding settings for your teamdrive mount so that it does not get laggy. Have a script that copies the metadata.db file regularly to the local disk, and leave the books in the cloud.</p> <p>If this paragraph does not make sense to you, then please do not try it.</p>","title":"5. Advanced Method of Library Storage"},{"location":"community/apps/coder/","text":"","title":"code-server"},{"location":"community/apps/coder/#what-is-it","text":"<p>code-server . Run VS Code on any machine anywhere and access it in the browser.</p>","title":"What is it?"},{"location":"community/apps/coder/#project-information","text":"<ul> <li> code-server </li> <li> VS Code Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/coder/#1-installation","text":"<pre><code>sb install cm-coder\n</code></pre>","title":"1. Installation"},{"location":"community/apps/coder/#2-url","text":"<ul> <li>To access code-server, visit <code>https://coder._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/coder/#3-setup","text":"<ul> <li> VS Code Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/comicstreamer/","text":"","title":"ComicStreamer"},{"location":"community/apps/comicstreamer/#what-is-it","text":"<p>ComicStreamer is a media server app for sharing a library of comic files with client applications. It allows for searching for comics based on a rich set of metadata including fields like series name, title, publisher, story arcs, characters, and creator credits.</p>","title":"What is it?"},{"location":"community/apps/comicstreamer/#project-information","text":"<ul> <li> ComicStreamer </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/comicstreamer/#1-installation","text":"<pre><code>sb install cm-comicstreamer\n</code></pre>","title":"1. Installation"},{"location":"community/apps/comicstreamer/#2-url","text":"<ul> <li>To access ComicStreamer, visit <code>https://comicstreamer._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/comicstreamer/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/comixed/","text":"","title":"ComiXed"},{"location":"community/apps/comixed/#what-is-it","text":"<p>ComiXed is anapplication for managing digital comics.</p>","title":"What is it?"},{"location":"community/apps/comixed/#project-information","text":"<ul> <li> ComiXed </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/comixed/#1-installation","text":"<pre><code>sb install cm-comixed\n</code></pre>","title":"1. Installation"},{"location":"community/apps/comixed/#2-url","text":"<ul> <li>To access ComiXed, visit <code>https://comixed._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/comixed/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/couchpotato/","text":"","title":"CouchPotato"},{"location":"community/apps/couchpotato/#what-is-it","text":"<p>CouchPotato is an automatic NZB and torrent downloader. You can keep a <code>movies I want</code> list and it will search for NZBs/torrents of these movies every X hours.</p>","title":"What is it?"},{"location":"community/apps/couchpotato/#project-information","text":"<ul> <li> CouchPotato </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/couchpotato/#1-installation","text":"<pre><code>sb install cm-couchpotato\n</code></pre>","title":"1. Installation"},{"location":"community/apps/couchpotato/#2-url","text":"<ul> <li>To access CouchPotato, visit <code>https://couchpotato._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/couchpotato/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/deemix/","text":"","title":"deemix"},{"location":"community/apps/deemix/#what-is-it","text":"<p>deemix is a barebone deezer downloader library built from the ashes of Deezloader Remix.</p>","title":"What is it?"},{"location":"community/apps/deemix/#project-information","text":"<ul> <li> deemix </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/deemix/#1-installation","text":"<pre><code>sb install cm-deemix\n</code></pre>","title":"1. Installation"},{"location":"community/apps/deemix/#2-url","text":"<ul> <li>To access deemix, visit <code>https://deemix._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/deemix/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/deluge/","text":"","title":"Deluge"},{"location":"community/apps/deluge/#what-is-it","text":"<p>Deluge is a torrent client that can be used as an alternative to rutorrent.</p>","title":"What is it?"},{"location":"community/apps/deluge/#project-information","text":"<ul> <li> Deluge </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/deluge/#1-installation","text":"<pre><code>sb install cm-deluge\n</code></pre>","title":"1. Installation"},{"location":"community/apps/deluge/#2-url","text":"<ul> <li>To access Deluge, visit <code>https://deluge._yourdomain.com_</code></li> </ul>  <p>Info</p> <p>default login  <pre><code>    user: admin\npassword: deluge\n</code></pre></p>","title":"2. URL"},{"location":"community/apps/deluge/#3-setup","text":"<ul> <li> <p>Change login password.</p> </li> <li> <p>Click Preferences in the top bar and on the Downloads section enter the following paths: </p> <ul> <li>Download to:  <code>/mnt/unionfs/downloads/torrents/deluge/incoming</code></li> <li>Move completed to:  <code>/mnt/unionfs/downloads/torrents/deluge/completed</code></li> <li>Autoadd <code>.torrent files</code> from:  <code>/mnt/unionfs/downloads/torrents/deluge/watched</code></li> </ul> </li> <li> <p>Select Network section, uncheck <code>Use Random Ports</code> under Incoming Ports and set both input fields to <code>58112</code>.</p> </li> <li> <p>Click the <code>Plugins</code> section</p> <ul> <li>enable the <code>labels</code> plugin.</li> <li>enable and the <code>Extractor</code> plugin.    In order for Sonarr or Radarr to import media packaged within .rar files, they will have to be extracted.</li> <li>After clicking <code>\"Apply\"</code>, select the <code>Extractor</code>  plugin on the left.    Make sure the directory points to the <code>completed</code> folder within your Deluge data directory.   <code>/mnt/unionfs/downloads/torrents/deluge/completed</code>    Also, make sure that the Create torrent name sub-folder setting is checked.</li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/deluge/#4-adding-to-sonarrradarr","text":"<p>To add Deluge as a download client in Sonarr/Radarr use the following settings. Both are able to remove completed torrents after they have finished seeding.</p> <p></p> <ul> <li> Documentation</li> </ul>","title":"4. Adding to Sonarr/Radarr"},{"location":"community/apps/delugevpn/","text":"","title":"DelugeVPN"},{"location":"community/apps/delugevpn/#what-is-it","text":"<p>DelugeVPN is a VPN version of Deluge with OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down.</p>","title":"What is it?"},{"location":"community/apps/delugevpn/#project-information","text":"<ul> <li> Deluge </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/delugevpn/#1-installation","text":"<pre><code>sb install cm-delugevpn\n</code></pre>","title":"1. Installation"},{"location":"community/apps/delugevpn/#2-url","text":"<ul> <li>To access DelugeVPN, visit <code>https://delugevpn._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/delugevpn/#3-setup","text":"<p>See the parentDeluge role for app setup.</p> <ul> <li>Edit the DelugeVPN settings in the delugevpn section in community <code>settings.yml</code>: as shown below.</li> </ul> <pre><code> delugevpn:\n   vpn_endpoint: netherlands.ovpn\n   vpn_pass: your_vpn_password\n   vpn_prov: pia\n   vpn_user: your_vpn_username\n   vpn_client: wireguard # 'wireguard' or 'openvpn'\n</code></pre> <p>For Private Internet Access </p> <ul> <li>Add your user name and password</li> <li>Change the vpn_endpoint to your chosen server.  Note that PIA occasionally changes which servers have port forwarding.  The Netherlands server no longer offers port forwarding.  See configuration section for more details.</li> </ul> <p>For other VPN providers </p> <ul> <li>Add your user name and password</li> <li>Change <code>vpn_prov</code> to <code>custom</code></li> <li>Leave <code>vpn_endpoint</code> as <code>netherlands.ovpn</code></li> <li>Follow step 2 below then immediately follow step 3</li> </ul>","title":"3. Setup"},{"location":"community/apps/delugevpn/#run-the-delugevpn-role","text":"<pre><code>sb install cm-delugevpn\n</code></pre>","title":"Run the DelugeVPN Role"},{"location":"community/apps/delugevpn/#configuring-server-for-custom-vpn-providers-only-for-non-pia","text":"<p>Why you need to do this</p> <p>For custom VPN providers, delugevpn needs an ovpn file to complete the install properly. It can check for a custom file in the <code>/opt/delugevpn/openvpn</code> folder, but this folder does not yet exist. Therefore, we will first use PIA's <code>netherlands.ovpn</code> file, which we will modify later to have our own VPN provider details.</p> <p>The steps above have created some files in <code>/opt/delugevpn/openvpn</code>.</p> <ul> <li><code>ca.rsa.2048.crt</code>  - Leave this</li> <li><code>crl.rsa.2048.pem</code> - Leave this</li> <li><code>credentials.conf</code>  - Leave this. Your VPN username and password are stored here.</li> <li><code>netherlands.ovpn</code>  - Your server details are stored here. We will change this.</li> </ul> <p><pre><code>docker stop delugevpn\ncd /opt/delugevpn/openvpn\nrm netherlands.ovpn\n</code></pre> Now you can upload your own .ovpn file from your VPN provider, renamed as <code>netherlands.ovpn</code>. If your VPN provider has also included a <code>ca.crt</code> file, upload that file as well. Upload one or both files into <code>/opt/delugevpn/openvpn</code>.</p>","title":"Configuring Server for Custom VPN providers (only for non-pia)**"},{"location":"community/apps/delugevpn/#note","text":"<p>Do not rename the original <code>netherlands.ovpn</code> file if you're using Filezilla. delugevpn will automatically use the renamed file instead of <code>netherlands.ovpn</code> and your newly uploaded .ovpn file will still be ignored.</p> <p>Now you can restart the docker <pre><code>docker start delugevpn\n</code></pre></p>","title":"Note"},{"location":"community/apps/delugevpn/#configuration","text":"<p>FOR PIA</p> <ul> <li> <p>vpn_user: Your PIA user name</p> </li> <li> <p>vpn_pass: Your PIA password</p> </li> <li> <p>vpn_prov: pia</p> </li> <li> <p>vpn_endpoint: netherlands.ovpn</p> </li> </ul> <p>Included PIA OpenVPN end point options are.</p>    Endpoint Endpoint Endpoint Endpoint     albania.ovpn egypt.ovpn monaco.ovpn uk_london.ovp   algeria.ovpn finland.ovpn mongolia.ovpn uk_manchester.ovpn   andorra.ovpn france.ovpn montenegro.ovpn uk_southampton.ovpn   argentina.ovpn georgia.ovpn morocco.ovpn ukraine.ovpn   armenia.ovpn greece.ovpn netherlands.ovpn united_arab_emirates.ovpn   au_melbourne.ovpn greenland.ovpn new_zealand.ovpn us_atlanta.ovpn   au_perth.ovpn hong_kong.ovpn nigeria.ovpn us_california.ovpn   au_sydney.ovpn hungary.ovpn norway.ovpn us_chicago.ovpn   austria.ovpn iceland.ovpn panama.ovpn us_denver.ovpn   bahamas.ovpn india.ovpn philippines.ovpn us_east.ovpn   bangladesh.ovpn ireland.ovpn poland.ovpn us_florida.ovpn   belgium.ovpn isle_of_man.ovpn portugal.ovpn us_houston.ovpn   brazil.ovpn israel.ovpn qatar.ovpn us_las_vegas.ovpn   bulgaria.ovpn italy.ovpn romania.ovpn us_new_york.ovpn   ca_montreal.ovpn japan.ovpn saudi_arabia.ovpn us_seattle.ovpn   ca_ontario.ovpn kazakhstan.ovpn serbia.ovpn us_silicon_valley.ovpn   ca_toronto.ovpn latvia.ovpn singapore.ovpn us_texas.ovpn   ca_vancouver.ovpn liechtenstein.ovpn slovakia.ovpn us_washington_dc.ovpn   cambodia.ovpn lithuania.ovpn south_africa.ovpn us_west.ovpn   china.ovpn luxembourg.ovpn spain.ovpn venezuela.ovpn   cyprus.ovpn macao.ovpn sri_lanka.ovpn vietnam.ovpn   czech_republic.ovpn macedonia.ovpn sweden.ovpn    de_berlin.ovpn malta.ovpn switzerland.ovpn    de_frankfurt.ovpn mexico.ovpn taiwan.ovpn    denmark.ovpn moldova.ovpn turkey.ovpn     <p>As of July 4, 2020, the PIA servers that allow port forwarding, and DelugeVPN to work properly, are: CA Toronto, CA Montreal, CA Vancouver, Czech Republic, DE Berlin, DE Frankfurt, France, Israel, Romania, Spain, Switzerland, Sweden.  Check the PIA website for changes if these servers do not work.</p>","title":"Configuration"},{"location":"community/apps/delugevpn/#tips","text":"<ul> <li>If you run into issues check <code>settings.yml</code> modified during pre install setup.</li> <li>If your endpoint has spaces you can use single quotes in the settings.yml ex.)   <code>vpn_endpoint: 'CA Toronto.ovpn'</code></li> <li>After checking/fixing <code>settings.yml</code> execute <code>sudo rm -rf /opt/delugevpn</code></li> <li>WARNING: this will delete all files and folder in /opt/delugevpn, backup first if you need anything)</li> <li>Follow installation steps above again</li> </ul>","title":"Tips"},{"location":"community/apps/delugevpn/#for-app-specific-instructions-refer-to-the-parent-role","text":"<ul> <li>deluge </li> <li>and the upstream documentation   Documentation </li> </ul>","title":"For app specific instructions refer to the parent role"},{"location":"community/apps/delugex/","text":"","title":"DelugeX"},{"location":"community/apps/delugex/#what-is-it","text":"<p>DelugeX is an arrX role for Deluge.</p>","title":"What is it?"},{"location":"community/apps/delugex/#project-information","text":"<ul> <li> Deluge </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/delugex/#1-installation","text":"<pre><code>sb install cm-delugex\n</code></pre>","title":"1. Installation"},{"location":"community/apps/delugex/#2-url","text":"<ul> <li>To access DelugeX, visit <code>https://delugex._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/delugex/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the DelugeX section in community <code>settings.yml</code>: using a list format as below.</p> </li> </ol> <pre><code> delugex:\n   roles:\n     - 1080webdl\n     - 1080remux\n</code></pre> <ul> <li>For app specific instructions refer to the parent role,<ul> <li>deluge </li> <li>and the upstream documentation   Documentation </li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/dozzle/","text":"","title":"Dozzle"},{"location":"community/apps/dozzle/#what-is-it","text":"<p>Dozzle is a small lightweight application with a web based interface to monitor Docker logs. It doesn\u2019t store any log files. It is for live monitoring of your container logs only.</p>","title":"What is it?"},{"location":"community/apps/dozzle/#project-information","text":"<ul> <li> Dozzle </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/dozzle/#1-installation","text":"<pre><code>sb install cm-dozzle\n</code></pre>","title":"1. Installation"},{"location":"community/apps/dozzle/#2-url","text":"<ul> <li>To access Dozzle, visit <code>https://dozzle._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/dozzle/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/embystat/","text":"","title":"EmbyStat"},{"location":"community/apps/embystat/#what-is-it","text":"<p>EmbyStat is a personal web server that can calculate all kinds of statistics from your (local) Emby or Jellyfin server. Just install this on your server and let him calculate all kinds of fun stuff.</p>","title":"What is it?"},{"location":"community/apps/embystat/#project-information","text":"<ul> <li> EmbyStat </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/embystat/#1-installation","text":"<pre><code>sb install cm-embystat\n</code></pre>","title":"1. Installation"},{"location":"community/apps/embystat/#2-url","text":"<ul> <li>To access EmbyStat, visit <code>https://embystat._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/embystat/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/epms/","text":"","title":"Extended Personal Media Shows Agent and Scanner"},{"location":"community/apps/epms/#what-is-it","text":"<p>EPMS is very useful for sports or things that do not have a DB to scrape against, creates episode numbers for date-based media and sorts correctly in Plex interface.</p> <p>The Extended Personal Media Shows Agent is a Metadata Agent for personal media files. It works in conjunction with the Extended Personal Media Scanner to scan personal media shows. The meta data agent sets the summary details on the episode. The agent expects the files to follow the naming conventions for personal media that are outlined in the Plex documentation.</p> <p>This scanner is not meant to be full replacement of the Plex Media Scanner. Requests for functionality will be considered but may be limited by what Plex currently allows in the TV Show sections.</p>","title":"What is it?"},{"location":"community/apps/epms/#project-information","text":"<ul> <li> EPMS </li> <li> Docs</li> <li> Github:</li> </ul>","title":"Project Information"},{"location":"community/apps/epms/#1-installation","text":"<pre><code>sb install cm-epms\n</code></pre>","title":"1. Installation"},{"location":"community/apps/epms/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/filebot/","text":"","title":"FileBot"},{"location":"community/apps/filebot/#what-is-it","text":"<p>FileBot is the ultimate tool for organizing and renaming your movies, tv shows or anime, and music well as downloading subtitles and artwork. It's smart and just works.</p> <p>This is a Docker container for FileBot.</p> <p>The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.</p>","title":"What is it?"},{"location":"community/apps/filebot/#project-information","text":"<ul> <li> FileBot </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/filebot/#1-installation","text":"<pre><code>sb install cm-filebot\n</code></pre>","title":"1. Installation"},{"location":"community/apps/filebot/#2-url","text":"<ul> <li>To access FileBot, visit <code>https://filebot._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/filebot/#3-setup","text":"<ul> <li>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></li> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/filebrowser/","text":"","title":"File Browser"},{"location":"community/apps/filebrowser/#what-is-it","text":"<p>File Browser is is a create-your-own-cloud-kind of software where you can install it on a server, direct it to a path and then access your files through a nice web interface. You have many available features!</p>","title":"What is it?"},{"location":"community/apps/filebrowser/#project-information","text":"<ul> <li> File Browser </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/filebrowser/#1-installation","text":"<pre><code>sb install cm-filebrowser\n</code></pre>","title":"1. Installation"},{"location":"community/apps/filebrowser/#2-url","text":"<ul> <li>To access File Browser, visit <code>https://filebrowser._yourdomain.com_</code></li> </ul>  <p>Info</p> <p>default login  <pre><code>    user: admin\npassword: admin\n</code></pre> Change the default user and password immediately.</p>","title":"2. URL"},{"location":"community/apps/filebrowser/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/filezilla/","text":"","title":"FileZilla"},{"location":"community/apps/filezilla/#what-is-it","text":"<p>FileZilla is a cross-platform graphical FTP, SFTP, and FTPS file management tool with a vast list of features.</p>","title":"What is it?"},{"location":"community/apps/filezilla/#project-information","text":"<ul> <li> FileZilla </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/filezilla/#1-installation","text":"<pre><code>sb install cm-filezilla\n</code></pre>","title":"1. Installation"},{"location":"community/apps/filezilla/#2-url","text":"<ul> <li>To access FileZilla, visit <code>https://filezilla._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/filezilla/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/flaresolverr/","text":"","title":"FlareSolverr"},{"location":"community/apps/flaresolverr/#what-is-it","text":"<p>FlareSolverr is a proxy server to bypass Cloudflare protection.</p>","title":"What is it?"},{"location":"community/apps/flaresolverr/#project-information","text":"<ul> <li> FlareSolverr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/flaresolverr/#1-installation","text":"<pre><code>sb install cm-flaresolverr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/flaresolverr/#2-setup","text":"","title":"2. Setup"},{"location":"community/apps/flaresolverr/#jackett","text":"<ul> <li>Locate the FlareSolverr API URL field in the main page.</li> <li>Input <code>http://flaresolverr:8191</code> and apply the settings.</li> </ul>","title":"Jackett"},{"location":"community/apps/flaresolverr/#prowlarr","text":"<ul> <li>In the settings, add an Indexer Proxy and select FlareSolverr.</li> <li> <p>Host should be <code>http://flaresolverr:8191</code>.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"Prowlarr"},{"location":"community/apps/funkwhale/","text":"","title":"Funkwhale"},{"location":"community/apps/funkwhale/#what-is-it","text":"<p>Funkwhale is a modern, self-hosted, free and open-source music server.</p>","title":"What is it?"},{"location":"community/apps/funkwhale/#project-information","text":"<ul> <li> Funkwhale </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/funkwhale/#1-installation","text":"<pre><code>sb install cm-funkwhale\n</code></pre>","title":"1. Installation"},{"location":"community/apps/funkwhale/#2-url","text":"<ul> <li>To access Funkwhale, visit <code>https://funkwhale._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/funkwhale/#3-setup","text":"<p>First create the superuser</p> <ul> <li><code>docker exec -it funkwhale manage createsuperuser</code>     (for ease of access, set it as your Saltbox user and password.)</li> <li>enter the <code>exit</code> command when finished to return to your server's shell.</li> </ul> <p>Now configure these settings via the web GUI</p> <ul> <li>Access Funkwhale, visit <code>https://funkwhale._yourdomain.com_</code> and log in with the user and password you just created.</li> <li>Enter <code>Music-&gt;Add Content-&gt;Create a new Library</code> and fill out the information.</li> <li>Enter your new Library and Details. There will be a sharing link such as:   <code>https://funkwhale.domain.com/federation/music/libraries/da8bd97b-3c3f-4e7b-92cb-6ba45721837b</code></li> <li>Copy out the last portion: <code>da8bd97b-3c3f-4e7b-92cb-6ba45721837b</code></li> </ul> <p>Return to the shell session to import music library</p> <ul> <li><code>docker exec -it funkwhale /usr/bin/python3 /app/api/manage.py import_files da8bd97b-3c3f-4e7b-92cb-6ba45721837b \"/music/Media/Audio/Music/**/**/*.flac\" --in-place --async --recursive</code></li> </ul> <p>The above line explained:</p> <ul> <li><code>docker exec -it funkwhale /usr/bin/python3 /app/api/manage.py import_files</code> tells funkwhale to import music.</li> <li><code>da8bd97b-3c3f-4e7b-92cb-6ba45721837b</code> is your library id</li> <li><code>\"/music/Media/Audio/Music/**/**/*.flac\"</code> is the path to your media.</li> <li><code>--in-place</code> means do not copy the media into Funkwhale and leave it where it is.</li> <li><code>--async</code> means it will import the music first and then pull the metadata`</li> <li><code>--recursive</code> will recursively scan the folders</li> </ul> <p>If everything goes as planned you'll get prompted like this:</p> <pre><code>&gt; Checking imported paths against settings.MUSIC_DIRECTORY_PATH\n&gt; Import summary:\n&gt; - 149828 files found matching this pattern: ['/music/Media/Audio/Music/**/**/*.flac']\n\n&gt; - 0 files already found in database\n&gt; - 149828 new files\n&gt; Selected options: in place\n&gt; Are you sure you want to do this?\n&gt; Type 'yes' to continue, or 'no' to cancel:\n</code></pre> <ul> <li>Answer yes at the prompt and the import will begin.</li> </ul>  <p>Info</p> <p>Useful URLs  Libraries URL: <code>https://funkwhale.domain.com/content/libraries/</code>  Admin Account Edit Page: <code>https://funkwhale.domain.com/api/admin/users/user/1/change/</code> </p>   <p>Info</p> <p>If you want to use subsonic clients then you'll need to set a password here:   <code>https://funkwhale.domain.com/settings</code> (subsonic protocol requires storing password in cleartext, so to avoid compromising your Funkwhale account, we use a different password).</p>  <p>Additional Information:</p> <ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/gitea/","text":"","title":"Gitea"},{"location":"community/apps/gitea/#what-is-it","text":"<p>Gitea is a community managed lightweight code hosting solution written in Go.</p> <p>Gitea is a painless self-hosted Git service. It is similar to GitHub, Bitbucket, and GitLab. Gitea is a fork of Gogs.</p>","title":"What is it?"},{"location":"community/apps/gitea/#project-information","text":"<ul> <li> Gitea </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/gitea/#1-installation","text":"<pre><code>sb install cm-gitea\n</code></pre>","title":"1. Installation"},{"location":"community/apps/gitea/#2-url","text":"<ul> <li>To access Gitea, visit <code>https://gitea._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/gitea/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/glances_web/","text":"","title":"Glances"},{"location":"community/apps/glances_web/#what-is-it","text":"<p>Glances is a cross-platform monitoring tool which aims to present a large amount of monitoring information through a curses or Web based interface. The information dynamically adapts depending on the size of the user interface.</p>","title":"What is it?"},{"location":"community/apps/glances_web/#project-information","text":"<ul> <li> Glances </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/glances_web/#1-installation","text":"<pre><code>sb install cm-glances-web\n</code></pre>","title":"1. Installation"},{"location":"community/apps/glances_web/#2-url","text":"<ul> <li>To access Glances, visit <code>https://glances._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/glances_web/#3-setup","text":"<ul> <li>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></li> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/goaccess/","text":"","title":"GoAccess"},{"location":"community/apps/goaccess/#what-is-it","text":"<p>GoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal in *nix systems or through your browser.</p> <p>It provides fast and valuable HTTP statistics for system administrators that require a visual server report on the fly.</p>","title":"What is it?"},{"location":"community/apps/goaccess/#project-information","text":"<ul> <li> GoAccess </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/goaccess/#1-installation","text":"<pre><code>sb install cm-goaccess\n</code></pre>","title":"1. Installation"},{"location":"community/apps/goaccess/#2-url","text":"<ul> <li>To access GoAccess, visit <code>https://goaccess._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/goaccess/#3-setup","text":"<ul> <li>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></li> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/goplaxt/","text":"","title":"Goplaxt"},{"location":"community/apps/goplaxt/#what-is-it","text":"<p>Goplaxt scrobbles Plex plays to Trakt with ease!</p>","title":"What is it?"},{"location":"community/apps/goplaxt/#project-information","text":"<ul> <li> Goplaxt </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/goplaxt/#1-installation","text":"<pre><code>sb install cm-goplaxt\n</code></pre>","title":"1. Installation"},{"location":"community/apps/goplaxt/#2-url","text":"<ul> <li>To access Goplaxt, visit <code>https://goplaxt._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/goplaxt/#3-setup","text":"<ol> <li> <p>Create an API application through Trakt here. The Redirect URI should be your goplaxt.domain + <code>/authorize</code>, so it reads as: <code>https://goplaxt.domain.com/authorize</code>.</p> </li> <li> <p>Edit the Goplaxt section in community <code>settings.yml</code>: substituting your own <code>ID</code> and <code>secret</code>.</p> <pre><code>goplaxt:\n  trakt_id: IDHERE\n  trakt_secret: SECRETHERE\n</code></pre> </li> <li> <p>Run the role install command</p> <pre><code>sb install cm-goplaxt\n</code></pre> </li> <li> <p>Visit the goplaxt site at <code>https://goplaxt.domain.com</code>.      Enter your <code>Plex Username</code> then <code>Authorize</code>, and add the Webhook in <code>Plex Settings</code>.      Make sure under your server <code>Settings &gt; Network</code> that Webhooks is <code>enabled</code>.</p> </li> <li> <p> Documentation</p> </li> </ol>","title":"3. Setup"},{"location":"community/apps/gotify/","text":"","title":"Gotify"},{"location":"community/apps/gotify/#what-is-it","text":"<p>Gotify a simple server for sending and receiving messages.</p>","title":"What is it?"},{"location":"community/apps/gotify/#project-information","text":"<ul> <li> Gotify </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/gotify/#1-installation","text":"<pre><code>sb install cm-gotify\n</code></pre>","title":"1. Installation"},{"location":"community/apps/gotify/#2-url","text":"<ul> <li>To access Gotify, visit <code>https://gotify._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/gotify/#3-setup","text":"<ul> <li> <p>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p> Documentation</p> </li> </ul>  <p>Info</p> <p>Android App  https://github.com/gotify/android  https://f-droid.org/de/packages/com.github.gotify/ </p>","title":"3. Setup"},{"location":"community/apps/grafana/","text":"","title":"Grafana"},{"location":"community/apps/grafana/#what-is-it","text":"<p>Grafana allows you to query, visualize, alert on, and understand your data no matter where it\u2019s stored. With Grafana you can create, explore and share all of your data through beautiful, flexible dashboards.</p>","title":"What is it?"},{"location":"community/apps/grafana/#project-information","text":"<ul> <li> Grafana </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/grafana/#1-installation","text":"<pre><code>sb install cm-grafana\n</code></pre>","title":"1. Installation"},{"location":"community/apps/grafana/#2-url","text":"<ul> <li>To access Grafana, visit <code>https://grafana._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/grafana/#3-setup","text":"<ul> <li> <p>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/guacamole/","text":"","title":"Guacamole"},{"location":"community/apps/guacamole/#what-is-it","text":"<p>Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH.</p> <p>We call it clientless because no plugins or client software are required.</p> <p>Thanks to HTML5, once Guacamole is installed on a server, all you need to access your desktops is a web browser.</p>","title":"What is it?"},{"location":"community/apps/guacamole/#project-information","text":"<ul> <li> Guacamole </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/guacamole/#1-installation","text":"<pre><code>sb install cm-guacamole\n</code></pre>","title":"1. Installation"},{"location":"community/apps/guacamole/#2-url","text":"<ul> <li>To access Guacamole, visit <code>https://guacamole._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/guacamole/#3-setup","text":"<ul> <li> <p>Log in with user and password <code>guacadmin</code>. Change the default user and password immediately.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/handbrake/","text":"","title":"HandBrake"},{"location":"community/apps/handbrake/#what-is-it","text":"<p>HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.</p>","title":"What is it?"},{"location":"community/apps/handbrake/#project-information","text":"<ul> <li> HandBrake </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/handbrake/#1-installation","text":"<pre><code>sb install cm-handbrake\n</code></pre>","title":"1. Installation"},{"location":"community/apps/handbrake/#2-url","text":"<ul> <li>To access HandBrake, visit <code>https://handbrake._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/handbrake/#3-setup","text":"<ol> <li> <p>Edit the HandBrake section in community <code>settings.yml</code>: and enter your desired password. Please note that it MUST be less than eight characters.</p> <pre><code>handbrake:\n  handbrake_pass: saltbox\n</code></pre> </li> <li> <p>Run the role install command</p> <pre><code>sb install cm-handbrake\n</code></pre> </li> <li> <p>Access HandBrake <code>https://handbrake._yourdomain.com_</code></p> </li> <li> <p>See the HandBrake documentation for usage:</p> <ul> <li> Documentation</li> </ul> </li> </ol>  <p>Tip</p> <p>This container has an automatic video converter built in, see the container documentation here.</p>","title":"3. Setup"},{"location":"community/apps/healthchecks/","text":"","title":"Healthchecks"},{"location":"community/apps/healthchecks/#what-is-it","text":"<p>Healthchecks is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.</p>","title":"What is it?"},{"location":"community/apps/healthchecks/#project-information","text":"<ul> <li> Healthchecks </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/healthchecks/#1-installation","text":"<pre><code>sb install cm-healthchecks\n</code></pre>","title":"1. Installation"},{"location":"community/apps/healthchecks/#2-url","text":"<ul> <li>To access Healthchecks, visit <code>https://healthchecks._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/healthchecks/#3-setup","text":"<ul> <li> <p>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/heimdall/","text":"","title":"Heimdall"},{"location":"community/apps/heimdall/#what-is-it","text":"<p>Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.</p>","title":"What is it?"},{"location":"community/apps/heimdall/#project-information","text":"<ul> <li> Heimdall </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/heimdall/#1-installation","text":"<pre><code>sb install cm-heimdall\n</code></pre>","title":"1. Installation"},{"location":"community/apps/heimdall/#2-url","text":"<ul> <li>To access Heimdall, visit <code>https://heimdall._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/heimdall/#3-setup","text":"<ul> <li> <p>The configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/hetzner_nfs/","text":"","title":"Hetzner NFS VLAN"},{"location":"community/apps/hetzner_nfs/#what-is-it","text":"<p>Connect 2+ servers hosted on Hetzner using NFS and VLAN.</p> <p>Note 1: This comes with no support other than the instructions provided here.</p> <p>Note 2: This setup has been tested to work with standard Unionfs/Rclone VFS setup. Using either MergerFS or any non-standard setup will require you to tweak the appropriate mounts. You can look at the roles to see what changes need to be done.</p>","title":"What is it?"},{"location":"community/apps/hetzner_nfs/#1-installation","text":"<p>In this example, we'll set our Feederbox as the NFS server and our Mediabox as the NFS client - this is so that the feeder data can be available to the media server.</p> <p>There are 3 phases to the setup. They are broken down below.</p>","title":"1. Installation"},{"location":"community/apps/hetzner_nfs/#hetzner-robot","text":"<ol> <li> <p>Log into Hetzner Robot.</p> </li> <li> <p>Create a VLAN (vSwitch) and add servers to it. Note the VLAN ID.</p> </li> </ol> <p></p> <ol> <li> <p>Setup Firewall.</p> <ul> <li>Mediabox:</li> </ul> <p></p> <ul> <li>Feederbox:</li> </ul> <p></p> </li> </ol>","title":"Hetzner Robot"},{"location":"community/apps/hetzner_nfs/#nfs-server-feederbox","text":"<ol> <li> <p>Setup the Ansible role config.</p> </li> <li> <p>Add <code>vlan_id</code>.</p> </li> <li> <p><code>mount_client</code> setting is ignored for the NFS server (i.e. it will just use <code>2</code>).</p> <pre><code>nano /opt/community/hetzner_nfs.yml\n</code></pre> <pre><code>hetzner_nfs:\n  vlan_id: 4001\n  mount_client: 3\n</code></pre> </li> <li> <p>Run Ansible role to configure the NFS server.</p> <pre><code>sb install cm-hetzner_nfs_server\n</code></pre> </li> </ol>","title":"NFS Server (Feederbox)"},{"location":"community/apps/hetzner_nfs/#nfs-client-mediabox","text":"<ol> <li> <p>Setup the Ansible role config.</p> </li> <li> <p>Add <code>vlan_id</code>.</p> </li> <li> <p>Add <code>mount_client</code>.</p> <p>Note: <code>mount_client</code> will need to be either <code>3</code> or a number &gt; <code>250</code>.</p> <pre><code>nano /opt/community/hetzner_nfs.yml\n</code></pre> <pre><code>hetzner_nfs:\n  vlan_id: 4001\n  mount_client: 3\n</code></pre> </li> <li> <p>Run Ansible role to configure the NFS client.</p> <pre><code>sb install cm-hetzner_nfs_server\n</code></pre> </li> </ol>","title":"NFS Client (Mediabox)"},{"location":"community/apps/hetzner_nfs/#uninstall","text":"<p>Simply run the following commands on their respective servers:</p>","title":"Uninstall"},{"location":"community/apps/hetzner_nfs/#nfs-server-feederbox_1","text":"<pre><code>sb install cm-hetzner_nfs_server_uninstall\n</code></pre>","title":"NFS Server (Feederbox)"},{"location":"community/apps/hetzner_nfs/#nfs-client-mediabox_1","text":"<pre><code>sb install cm-hetzner_nfs_client_unmount\n</code></pre>","title":"NFS Client (Mediabox)"},{"location":"community/apps/influxdb/","text":"","title":"InfluxDB"},{"location":"community/apps/influxdb/#what-is-it","text":"<p>InfluxDB is an open source time series database for recording metrics, events, and analytics.</p>","title":"What is it?"},{"location":"community/apps/influxdb/#project-information","text":"<ul> <li> InfluxDB </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/influxdb/#1-installation","text":"<pre><code>sb install cm-influxdb\n</code></pre>","title":"1. Installation"},{"location":"community/apps/influxdb/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/invoiceninja/","text":"","title":"Invoice Ninja"},{"location":"community/apps/invoiceninja/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/invoiceninja/#what-is-it","text":"<p>Invoice Ninja is an invoicing application which makes sending invoices and receiving payments simple and easy. Our latest version is a clean slate rewrite of our popular invoicing application which builds on the existing feature set and adds a wide range of features and enhancements the community has asked for.</p>","title":"What is it?"},{"location":"community/apps/invoiceninja/#project-information","text":"<ul> <li> Invoice Ninja </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/invoiceninja/#1-installation","text":"<pre><code>sb install cm-invoiceninja\n</code></pre>","title":"1. Installation"},{"location":"community/apps/invoiceninja/#2-url","text":"<ul> <li>To access Invoice Ninja, visit <code>https://invoiceninja._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/invoiceninja/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/jdownloader2/","text":"","title":"JDownloader"},{"location":"community/apps/jdownloader2/#what-is-it","text":"<p>JDownloader is a free download-manager that makes downloading as easy, fast and automated as it should be. It's like your personal internet robot that does all the work for you. He will download whole photo albums, playlists or just about anything else with just one click. Go ahead and try it!</p>","title":"What is it?"},{"location":"community/apps/jdownloader2/#project-information","text":"<ul> <li> JDownloader </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/jdownloader2/#1-installation","text":"<pre><code>sb install cm-jdownloader2\n</code></pre>","title":"1. Installation"},{"location":"community/apps/jdownloader2/#2-url","text":"<ul> <li>To access JDownloader, visit <code>https://jdownloader2._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/jdownloader2/#3-setup","text":"<ol> <li> <p>The configured password is taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p>Configure your myjdownloader account (Create at https://my.jdownloader.org/ if needed) and name your instance so you can connect via web or browser extensions. Use clipboard for two step copy and paste if needed. Note that some settings are only accessible via <code>jdownloader2.yourdomain.com</code>. Premium accounts such as mega.nz can be added via web interface.</p> </li> <li> <p>Use manual import from sonarr / radarr and navigate to <code>/mnt/local/downloads/myjdownloader/output/</code> to import your files, note they must be already added as wanted media for import to recognise and identify your downloaded media.</p> </li> <li> <p>See https://my.jdownloader.org/ for browser extensions and phone apps as desired.</p> </li> <li> <p> Documentation</p> </li> </ol>","title":"3. Setup"},{"location":"community/apps/jellyfin/","text":"","title":"Jellyfin"},{"location":"community/apps/jellyfin/#what-is-it","text":"<p>Jellyfin is the volunteer-built media solution that puts you in control of your media. Stream to any device from your own server, with no strings attached. Your media, your server, your way.</p>","title":"What is it?"},{"location":"community/apps/jellyfin/#project-information","text":"<ul> <li> Jellyfin </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/jellyfin/#1-installation","text":"<pre><code>sb install cm-jellyfin\n</code></pre>","title":"1. Installation"},{"location":"community/apps/jellyfin/#2-url","text":"<ul> <li>To access Jellyfin, visit <code>https://jellyfin._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/jellyfin/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/jirafeau/","text":"","title":"Jirafeau"},{"location":"community/apps/jirafeau/#what-is-it","text":"<p>Jirafeau  is a web site permitting to upload a file in a simple way and give an unique link to it. Jirafeau is a \"one-click-filesharing\": Select your file, upload, share a link. That's it.</p> <p>See jirafeau.net for a demo.</p>","title":"What is it?"},{"location":"community/apps/jirafeau/#project-information","text":"<ul> <li> Jirafeau </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/jirafeau/#1-installation","text":"<pre><code>sb install cm-jirafeau\n</code></pre>","title":"1. Installation"},{"location":"community/apps/jirafeau/#2-url","text":"<ul> <li>To access Jirafeau, visit <code>https://jirafeau._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/jirafeau/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/kavita/","text":"","title":"Kavita"},{"location":"community/apps/kavita/#what-is-it","text":"<p>Kavita is a fast, feature rich, cross platform reading server. Built with a focus for manga, and the goal of being a full solution for all your reading needs. Setup your own server and share your reading collection with your friends and family!</p>","title":"What is it?"},{"location":"community/apps/kavita/#project-information","text":"<ul> <li> Kavita </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/kavita/#1-installation","text":"<pre><code>sb install cm-kavita\n</code></pre>","title":"1. Installation"},{"location":"community/apps/kavita/#2-url","text":"<ul> <li>To access Kavita, visit <code>https://kavita._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/kavita/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/kcptun_client/","text":"","title":"kcptun client"},{"location":"community/apps/kcptun_client/#what-is-it","text":"<p>APPNAME is a Stable &amp; Secure Tunnel based on KCP with N:M multiplexing and FEC.</p>","title":"What is it?"},{"location":"community/apps/kcptun_client/#project-information","text":"<ul> <li> APPNAME </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/kcptun_client/#1-installation","text":"<pre><code>sb install cm-kcptun-client\n</code></pre>","title":"1. Installation"},{"location":"community/apps/kcptun_client/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/kcptun_server/","text":"","title":"kcptun server"},{"location":"community/apps/kcptun_server/#what-is-it","text":"<p>APPNAME is a Stable &amp; Secure Tunnel based on KCP with N:M multiplexing and FEC.</p>","title":"What is it?"},{"location":"community/apps/kcptun_server/#project-information","text":"<ul> <li> APPNAME </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/kcptun_server/#1-installation","text":"<pre><code>sb install cm-kcptun-server\n</code></pre>","title":"1. Installation"},{"location":"community/apps/kcptun_server/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/kitana/","text":"","title":"Kitana"},{"location":"community/apps/kitana/#what-is-it","text":"<p>Kitana is a responsive Plex plugin web frontend.</p> <p>Running one instance of Kitana can serve infinite amounts of servers and plugins - you can even expose your Kitana instance to your friends, so they can manage their plugins as well, so they don't have to run their own Kitana instance.</p> <p>Kitana was built for Sub-Zero originally, but handles other plugins just as well.</p>","title":"What is it?"},{"location":"community/apps/kitana/#project-information","text":"<ul> <li> Kitana </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/kitana/#1-installation","text":"<pre><code>sb install cm-kitana\n</code></pre>","title":"1. Installation"},{"location":"community/apps/kitana/#2-url","text":"<ul> <li>To access Kitana, visit <code>https://kitana._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/kitana/#3-setup","text":"<ul> <li> <p>pen your browser and visit your Kitana instance <code>https://kitana._yourdomain.com_</code></p> </li> <li> <p>authenticate against Plex.TV</p> </li> <li> <p>select your server (non-owned may not work; local connections are preferred)</p> </li> <li> <p>profit</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/komga/","text":"","title":"Komga"},{"location":"community/apps/komga/#what-is-it","text":"<p>Komga is a free and open source comics/mangas server.</p>","title":"What is it?"},{"location":"community/apps/komga/#project-information","text":"<ul> <li> Komga </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/komga/#1-installation","text":"<pre><code>sb install cm-komga\n</code></pre>","title":"1. Installation"},{"location":"community/apps/komga/#2-url","text":"<ul> <li>To access Komga, visit <code>https://komga._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/komga/#3-setup","text":"<ul> <li> <p>On first opening you will be asked to create a user account.    Choose an email and password, then click on Create User Account.</p> </li> <li> <p>Komga expects comics to be stored in <code>/mnt/unionfs/Media/Comics</code>.</p> </li> <li> <p><code>/mnt</code> is accessible to the container as well.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/lazylibrarian/","text":"","title":"LazyLibrarian"},{"location":"community/apps/lazylibrarian/#what-is-it","text":"<p>LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.</p>","title":"What is it?"},{"location":"community/apps/lazylibrarian/#project-information","text":"<ul> <li> LazyLibrarian </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/lazylibrarian/#1-installation","text":"<pre><code>sb install cm-lazylibrarian\n</code></pre>","title":"1. Installation"},{"location":"community/apps/lazylibrarian/#2-url","text":"<ul> <li>To access LazyLibrarian, visit <code>https://lazylibrarian._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/lazylibrarian/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/lidarrx/","text":"","title":"LidarrX"},{"location":"community/apps/lidarrx/#what-is-it","text":"<p>LidarrX is an arrX role for Lidarr.</p> <p>Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new albums from your favorite artists and will interface with clients and indexers to grab, sort, and rename them. It can also be configured to automatically upgrade the quality of existing files in the library when a better quality format becomes available.</p>","title":"What is it?"},{"location":"community/apps/lidarrx/#project-information","text":"<ul> <li> Lidarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/lidarrx/#1-installation","text":"<pre><code>sb install cm-lidarrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/lidarrx/#2-url","text":"<ul> <li>To access LidarrX, visit <code>https://lidarrX._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/lidarrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the LidarrX section in community <code>settings.yml</code>: using a list format as below.</p> </li> </ol> <pre><code> lidarrx:\n   roles:\n     - flac\n     - mp3\n</code></pre> <ul> <li>For app specific instructions refer to the parent role,<ul> <li>Lidarr</li> <li>and the upstream documentation   Documentation </li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/logarr/","text":"","title":"Logarr ALPHA"},{"location":"community/apps/logarr/#what-is-it","text":"<p>Logarr ALPHA is a Self-hosted, single-page, log consolidation tool written in PHP.</p>","title":"What is it?"},{"location":"community/apps/logarr/#project-information","text":"<ul> <li> Logarr ALPHA </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/logarr/#1-installation","text":"<pre><code>sb install cm-logarr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/logarr/#2-url","text":"<ul> <li>To access Logarr ALPHA, visit <code>https://logarr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/logarr/#3-setup","text":"<ul> <li> <p>See documentation for configuration and instructions for adding more logs to your instance.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/mediabutler/","text":"","title":"MediaButler API Server"},{"location":"community/apps/mediabutler/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/mediabutler/#what-is-it","text":"<p>MediaButler is aimed as your personal media companion, providing a unified experience for several applications that you may be using. Do you have a Plex Server in your network? Then MediaButler is precisely for you, featuring a full experience for you and your users. Security conscious so private information stays private. The API Server serves as the hub for everything. Open Sourced to allow you/others to implement features which can simplify and automate processes to help make life easier.</p>","title":"What is it?"},{"location":"community/apps/mediabutler/#project-information","text":"<ul> <li> MediaButler </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/mediabutler/#1-installation","text":"<pre><code>sb install cm-mediabutler\n</code></pre>","title":"1. Installation"},{"location":"community/apps/mediabutler/#3-setup","text":"<ol> <li> <p>Mediabutler settings file can be configured at <code>/opt/mediabutler/settings.json</code></p> </li> <li> <p>Invite bot to your server:     https://discord.com/api/oauth2/authorize?client_id=354733331717554179&amp;permissions=8&amp;scope=bot</p> </li> <li> <p>Enter <code>!login</code></p> </li> <li> <p>Then <code>!server</code>  (select your server by reacting)</p> </li> <li> <p>The list of permissions the bot requires are as follows:  <pre><code>Manage Roles, Manage Channels, Change Nickname, Manage Emojis, Read Messages, Send TTS Messages, Embed Links, Read Message History, Use External Emojis, Attach Files, Mention @everyone, Add Reactions, Voice View Channel, Voice Connect, Voice Speak, Use Voice Activity\n</code></pre></p> </li> <li> <p>For an overview of available discord commands see the discord documentation.</p> </li> <li> <p> Documentation</p> </li> </ol>","title":"3. Setup"},{"location":"community/apps/medusa/","text":"","title":"Medusa"},{"location":"community/apps/medusa/#what-is-it","text":"<p>Medusa is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.</p>","title":"What is it?"},{"location":"community/apps/medusa/#project-information","text":"<ul> <li> Medusa </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/medusa/#1-installation","text":"<pre><code>sb install cm-medusa\n</code></pre>","title":"1. Installation"},{"location":"community/apps/medusa/#2-url","text":"<ul> <li>To access Medusa, visit <code>https://medusa._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/medusa/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/monitorr/","text":"","title":"Monitorr"},{"location":"community/apps/monitorr/#what-is-it","text":"<p>Monitorr is a self-hosted PHP web app that monitors the status of local and remote network services, websites, and applications.</p>","title":"What is it?"},{"location":"community/apps/monitorr/#project-information","text":"<ul> <li> Monitorr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/monitorr/#1-installation","text":"<pre><code>sb install cm-monitorr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/monitorr/#2-url","text":"<ul> <li>To access Monitorr, visit <code>https://monitorr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/monitorr/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/moviematch/","text":"","title":"MovieMatch"},{"location":"community/apps/moviematch/#what-is-it","text":"<p>MovieMatch is an app that helps you and your friends pick a movie to watch from a Plex server.</p> <p>MovieMatch connects to your Plex server and gets a list of movies (from any libraries marked as a movie library).</p> <p>As many people as you want connect to your MovieMatch server and get a list of shuffled movies. Swipe right to +1, swipe left to -1.</p> <p>If two (or more) people swipe right on the same movie, it'll show up in everyone's matches. The movies that the most people swiped right on will show up first.</p>","title":"What is it?"},{"location":"community/apps/moviematch/#project-information","text":"<ul> <li> MovieMatch </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/moviematch/#1-installation","text":"<pre><code>sb install cm-moviematch\n</code></pre>","title":"1. Installation"},{"location":"community/apps/moviematch/#2-url","text":"<ul> <li>To access MovieMatch, visit <code>https://moviematch._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/moviematch/#3-setup","text":"","title":"3. Setup"},{"location":"community/apps/moviematch/#via-ui","text":"<ul> <li>If you prefer to set up MovieMatch using a web interface, just start MovieMatch and you will be presented with a configuration screen.    The configuration will be saved in the working directory.</li> </ul>","title":"Via UI"},{"location":"community/apps/moviematch/#via-yaml","text":"<ul> <li>MovieMatch can be configured with a simple YAML document, which allows connecting to multiple Plex servers.    Here's a simple example:</li> </ul> <pre><code>  host: 0.0.0.0\n  port: 8000\n  servers:\n    - url: https://plex.example.com\n      token: abcdef12346\n</code></pre> <p>MovieMatch will read the config from <code>/opt/moviematch/config.yaml</code> by default.</p> <ul> <li> Documentation</li> </ul>","title":"Via YAML"},{"location":"community/apps/mylar3/","text":"","title":"Mylar3"},{"location":"community/apps/mylar3/#what-is-it","text":"<p>Mylar3 is an automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents. Also provides an OPDS server distribution.</p> <p>Mylar allows you to create a watchlist of series that it monitors for various things (new issues, updated information, etc). It will grab, sort, and rename downloaded issues. It will also allow you to monitor weekly pull-lists for items belonging to said watchlisted series to download, as well as being able to monitor and maintain story-arcs.</p>","title":"What is it?"},{"location":"community/apps/mylar3/#project-information","text":"<ul> <li> Mylar3 </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/mylar3/#1-installation","text":"<pre><code>sb install cm-ROLENAME\n</code></pre>","title":"1. Installation"},{"location":"community/apps/mylar3/#2-url","text":"<ul> <li>To access Mylar3, visit <code>https://ROLENAME._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/mylar3/#3-setup","text":"<ol> <li> <p>It's highly unlikely your mylar install is up to date.    Press the Update link on the dialog in the bottom right hand corner. Mylar3 will update and then restart.</p> </li> <li> <p>Enable some authentication. Add a <code>username</code> and <code>password</code> and set your preferred <code>login method</code>.</p> </li> <li> <p>Make sure <code>Launch Browser on startup</code> is disabled.</p> </li> <li> <p>You'll need a ComicVine API Key for Mylar to be useful. Create an account, and your key will be at the top of this page.</p> </li> <li> <p>Set the Comic Location path to <code>/comics</code>. It will already be mounted.</p> </li> <li> <p>Uncheck <code>enforce permissions</code></p> </li> <li> <p>Optional: Enable <code>Series-Annual Integration</code></p> </li> <li> <p>Save and then restart the app</p> </li> </ol>  <p>Note</p> <p>If you enable to OPDS server, DO NOT ENABLE <code>OPDS Fetch MetaInfo</code>. It queries the file system.</p>","title":"3. Setup"},{"location":"community/apps/mylar3/#download-settings","text":"<p>(These instructions are for NZBGet. Adapt for other Download Apps)</p>","title":"Download settings"},{"location":"community/apps/mylar3/#configure-nzbget","text":"<ol> <li> <p>Log into <code>https://nzbget._youdomain_.com</code></p> </li> <li> <p>Go to <code>Settings &gt; Categories</code></p> </li> <li> <p>Scroll to bottom, click <code>Add Another Category</code></p> </li> <li> <p>Name it <code>mylar</code></p> </li> </ol>","title":"Configure NZBGet"},{"location":"community/apps/mylar3/#configure-mylar","text":"<ol> <li> <p>Set Usenet client to NZBGet</p> </li> <li> <p>Fill in the server stuff like it would be in sonarr / radarr / etc</p> </li> <li> <p>Set values:</p> </li> <li> <p>Host: <code>nzbget</code></p> </li> <li> <p>Port: <code>6789</code></p> </li> <li> <p>Username:  <code>Your NZBGet Username</code></p> </li> <li> <p>Password:  <code>Your NZBGet Password</code></p> </li> <li> <p>Category: <code>mylar</code></p> </li> <li> <p>Use SSL: <code>No</code></p> </li> <li> <p>NZBGet Download Directory: Leave Blank</p> </li> <li> <p>Enable Completed Download Handling: <code>X</code></p> </li> </ol>","title":"Configure Mylar"},{"location":"community/apps/mylar3/#search-providers","text":"<ol> <li> <p>Click Add Indexer (<code>+</code>).</p> </li> <li> <p>Select \"Newznab\".</p> </li> <li> <p>Add the following:</p> <ol> <li> <p>Use Newznab: <code>X</code></p> </li> <li> <p>NewzNab Name: <code>NZBHydra2</code></p> </li> <li> <p>NewzNab Host: <code>http://nzbhydra2:5076</code></p> </li> <li> <p>Verify SSL: <code>Disabled</code></p> </li> <li> <p>API Key: <code>Your NZBHydra2 API Key</code></p> </li> <li> <p>Enabled: <code>X</code></p> </li> </ol> </li> </ol>","title":"Search Providers"},{"location":"community/apps/mylar3/#quality-and-post-processing","text":"<ol> <li> <p>Enable Failed Download Handling: <code>X</code></p> </li> <li> <p>Enable Automatic-Retry for Failed Downloads: <code>X</code></p> </li> <li> <p>Enable Post-Processing: <code>X</code></p> </li> <li> <p>When Post-Processing <code>move</code> the files</p> </li> </ol>","title":"Quality and Post Processing"},{"location":"community/apps/mylar3/#advanced-settings","text":"<p>These settings are up to the user</p> <ol> <li> <p>Rename Files: <code>X</code></p> </li> <li> <p>Folder Format: <code>$Series ($Year)</code> (My recommendation)</p> </li> <li> <p>File Format: <code>$Series $Annual $Issue ($Year)</code> (My recommendation)</p> </li> </ol>","title":"Advanced Settings"},{"location":"community/apps/mylar3/#see-the-mylar-wiki-for-more-information","text":"<ul> <li> Documentation</li> </ul>","title":"See the Mylar Wiki for more information"},{"location":"community/apps/navidrome/","text":"","title":"Navidrome"},{"location":"community/apps/navidrome/#what-is-it","text":"<p>Navidrome allows you to enjoy your music collection from anywhere, by making it available through a modern Web UI and through a wide range of third-party compatible mobile apps, for both iOS and Android devices.</p>","title":"What is it?"},{"location":"community/apps/navidrome/#project-information","text":"<ul> <li> Navidrome </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/navidrome/#1-installation","text":"<pre><code>sb install cm-navidrome\n</code></pre>","title":"1. Installation"},{"location":"community/apps/navidrome/#2-url","text":"<ul> <li>To access Navidrome, visit <code>https://navidrome._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/navidrome/#3-setup","text":"<ul> <li> <p>After installing Navidrome in your platform, you need to create your first user. This will be your admin user, a super user that can manage all aspects of Navidrome, including the ability to manage other users. Just browse to Navidrome\u2019s homepage at<code>https://navidrome._yourdomain.com_</code> and you will be greeted with a screen like this: </p> <p></p> <p>Just fill out the username and password you want to use, confirm the password and click on the \u201cCreate Admin\u201d button.</p> <p>That\u2019s it! You should now be able to browse and listen to all your music.</p>  <p>Note<p>It usually take a couple of minutes for your music to start appearing in Navidrome\u2019s UI.   You can check the logs to see what is the scan progress. If you have a large library this may take some time.</p> </p>  </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/nextcloud/","text":"","title":"Nextcloud"},{"location":"community/apps/nextcloud/#what-is-it","text":"<p>Nextcloud is safe home for all your data. Access &amp; share your files, calendars, contacts, mail &amp; more from any device, on your terms.</p>","title":"What is it?"},{"location":"community/apps/nextcloud/#project-information","text":"<ul> <li> Nextcloud </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/nextcloud/#1-installation","text":"<pre><code>sb install cm-nextcloud\n</code></pre>","title":"1. Installation"},{"location":"community/apps/nextcloud/#2-url","text":"<ul> <li>To access Nextcloud, visit <code>https://nextcloud._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/nextcloud/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/ombi/","text":"","title":"Ombi"},{"location":"community/apps/ombi/#what-is-it","text":"<p>Ombi is a self-hosted web application that automatically gives your shared Plex or Emby users the ability to request content by themselves!</p> <p>Ombi can be linked to multiple TV Show and Movie DVR tools to create a seamless end-to-end experience for your users.</p>","title":"What is it?"},{"location":"community/apps/ombi/#project-information","text":"<ul> <li> Ombi </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/ombi/#1-installation","text":"<pre><code>sb install cm-ombi\n</code></pre>","title":"1. Installation"},{"location":"community/apps/ombi/#2-url","text":"<ul> <li>To access Ombi, visit <code>https://ombi._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/ombi/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/ombix/","text":"","title":"OmbiX"},{"location":"community/apps/ombix/#what-is-it","text":"<p>OmbiX is an arrX role for Ombi.</p> <p>Ombi is a self-hosted web application that automatically gives your shared Plex or Emby users the ability to request content by themselves!</p>","title":"What is it?"},{"location":"community/apps/ombix/#project-information","text":"<ul> <li> Ombi </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/ombix/#1-installation","text":"<pre><code>sb install cm-ombix\n</code></pre>","title":"1. Installation"},{"location":"community/apps/ombix/#2-url","text":"<ul> <li>To access OmbiX, visit <code>https://OmbiX._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/ombix/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the OmbiX section in community <code>settings.yml</code>: using a list format as below.</p> </li> </ol> <pre><code> ombix:\n   roles:\n     - 4k\n     - anime\n</code></pre> <ul> <li>For app specific instructions refer to the parent role,<ul> <li>Ombi</li> <li>and the upstream documentation   Documentation </li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/ouroboros/","text":"","title":"Ouroboros"},{"location":"community/apps/ouroboros/#what-is-it","text":"<p>Ouroboros will automatically update your running Docker containers to the latest available image.</p> <p>A python-based alternative to watchtower</p>","title":"What is it?"},{"location":"community/apps/ouroboros/#project-information","text":"<ul> <li> Ouroboros </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/ouroboros/#1-installation","text":"<pre><code>sb install cm-ouroboros\n</code></pre>","title":"1. Installation"},{"location":"community/apps/ouroboros/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/petio/","text":"","title":"Petio"},{"location":"community/apps/petio/#what-is-it","text":"<p>Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content. The app is built to appear instantly familiar and intuitive to even the most tech-agnostic users. Petio will help you manage requests from your users, connect to other third party apps such as Sonarr and Radarr, notify users when content is available and track request progress. Petio also allows users to discover media both on and off your server, quickly and easily find related content and review to leave their opinion for other users.</p> <p>Petio is an ongoing, forever free, always evolving project currently in alpha prototype stage and now available!</p>","title":"What is it?"},{"location":"community/apps/petio/#project-information","text":"<ul> <li> Petio </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/petio/#1-installation","text":"<pre><code>sb install cm-petio\n</code></pre>","title":"1. Installation"},{"location":"community/apps/petio/#2-url","text":"<ul> <li>To access Petio, visit <code>https://petio._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/petio/#3-setup","text":"<ul> <li> <p>Click Login With Plex and follow the steps to log in.</p> </li> <li> <p>After you log in with Plex you will need to specify your Petio specific admin credentials, by default it uses your Plex username and email but you still need to specify your own password.</p> </li> <li> <p>After setting up your credentials, you need to pick your Plex server.</p> </li> <li> <p>Leave MongoDB settings as default.</p> </li> <li> <p>Once the last step is finished, you will be presented with a login screen. Use your Plex username and the password you set up on Step 2. You can now get started with configuring Radarr, Sonarr and start requesting!</p> </li> <li> <p>See the Petio documentation for more information.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/prowlarr/","text":"","title":"Prowlarr"},{"location":"community/apps/prowlarr/#what-is-it","text":"<p>Prowlarr is an indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports management of both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Lidarr, Mylar3, Radarr, Readarr, and Sonarr offering complete management of your indexers with no per app Indexer setup required (we do it all).</p>","title":"What is it?"},{"location":"community/apps/prowlarr/#project-information","text":"<ul> <li> Prowlarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/prowlarr/#1-installation","text":"<pre><code>sb install cm-prowlarr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/prowlarr/#2-url","text":"<ul> <li>To access Prowlarr, visit <code>https://prowlarr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/prowlarr/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/qbittorrent/","text":"","title":"qBittorrent"},{"location":"community/apps/qbittorrent/#what-is-it","text":"<p>qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.</p> <p>It aims to be a good alternative to all other bittorrent clients out there. qBittorrent is fast, stable and provides unicode support as well as many features.</p>","title":"What is it?"},{"location":"community/apps/qbittorrent/#project-information","text":"<ul> <li> qBittorrent </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/qbittorrent/#1-installation","text":"<pre><code>sb install cm-qbittorrent\n</code></pre>","title":"1. Installation"},{"location":"community/apps/qbittorrent/#2-url","text":"<ul> <li>To access qBittorrent, visit <code>https://qbittorrent._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/qbittorrent/#3-setup","text":"<ul> <li> <p>Access qbittorrent at <code>https://qbittorrent._yourdomain.com_</code> <pre><code>  username: `admin`\n  password: `adminadmin`.\n</code></pre></p> </li> <li> <p>First go to <code>Options</code> -&gt; <code>Web UI</code> and set a new username and password.</p> <p></p> </li> <li> <p>Under <code>Options</code> -&gt; <code>Connection</code>, set the port to 56881.</p> <p></p> </li> <li> <p>Under <code>Options</code> -&gt; <code>Downloads</code>, set the following;</p> <ul> <li> <p>Save files to location: <code>/mnt/unionfs/downloads/torrents/qbittorrent/completed/</code></p> </li> <li> <p>Keep incomplete torrents in: <code>/mnt/unionfs/downloads/torrents/qbittorrent/incoming/</code></p> </li> <li> <p>Copy .torrent files to: <code>/mnt/unionfs/downloads/torrents/qbittorrent/torrents/</code></p> </li> <li> <p>Copy .torrent files for finished downloads to: <code>/mnt/unionfs/downloads/torrents/qbittorrent/torrents/</code></p> </li> <li> <p>Additionally you can set monitored folder to: <code>/mnt/unionfs/downloads/torrents/qbittorrent/watched/</code></p> </li> <li> <p>tick <code>Run external program on torrent completion</code> and paste this into the box: <code>/usr/bin/unrar x -r \"%F/.\" \"%F/\"</code></p> </li> </ul> <p></p> </li> </ul>  <p>Note</p> <p>if you're using private trackers be sure to go to <code>Options</code> -&gt; <code>BittTorrent</code> and uncheck everything in Privacy section.</p>  <ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/qbittorrentvpn/","text":"","title":"qBittorrentVPN"},{"location":"community/apps/qbittorrentvpn/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/qbittorrentvpn/#what-is-it","text":"<p>qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.</p> <p>It aims to be a good alternative to all other bittorrent clients out there. qBittorrent is fast, stable and provides unicode support as well as many features.</p> <p>qBittorrentVPN is a VPN version of qBittorrent with OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down.</p>","title":"What is it?"},{"location":"community/apps/qbittorrentvpn/#project-information","text":"<ul> <li> qBittorrent </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/qbittorrentvpn/#1-installation","text":"<pre><code>sb install cm-qbittorrentvpn\n</code></pre>","title":"1. Installation"},{"location":"community/apps/qbittorrentvpn/#2-url","text":"<ul> <li>To access qBittorrentVPN, visit <code>https://qbittorrentvpn._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/qbittorrentvpn/#3-setup","text":"<ul> <li>Edit the qBittorrentVPN settings in the qbittorrentvpn section in community <code>settings.yml</code>: as shown below.</li> </ul> <pre><code> qbittorrentvpn:\n   vpn_endpoint: netherlands.ovpn\n   vpn_user: your_vpn_username\n   vpn_pass: your_vpn_password\n   vpn_prov: pia\n   vpn_client: wireguard # 'wireguard' or 'openvpn'\n</code></pre> <ul> <li> <p>Follow instructions for parent role qBittorrent</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/qbittorrentx/","text":"","title":"qBittorrentX"},{"location":"community/apps/qbittorrentx/#what-is-it","text":"<p>qBittorrentX is an arrX role for qBittorrent.</p>","title":"What is it?"},{"location":"community/apps/qbittorrentx/#project-information","text":"<ul> <li> qBittorrent </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/qbittorrentx/#1-installation","text":"<pre><code>sb install cm-qBittorrentX\n</code></pre>","title":"1. Installation"},{"location":"community/apps/qbittorrentx/#2-url","text":"<ul> <li>To access qBittorrentX, visit <code>https://qbittorrentX._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/qbittorrentx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the qBittorrentX section in community <code>settings.yml</code>: using a list format as below.</p> </li> </ol> <pre><code> qbittorrentx:\n   roles:\n     - longtermseed\n     - educational\n</code></pre> <ul> <li>For app specific instructions refer to the parent role,<ul> <li>qBittorrent</li> <li>and the upstream documentation   Documentation </li> </ul> </li> </ul>","title":"3. Setup"},{"location":"community/apps/radarrx/","text":"","title":"RadarrX"},{"location":"community/apps/radarrx/#what-is-it","text":"<p>RadarrX is an arrX role for Radarr.</p>","title":"What is it?"},{"location":"community/apps/radarrx/#project-information","text":"<ul> <li> RadarrX </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/radarrx/#1-installation","text":"<pre><code>sb install cm-radarrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/radarrx/#2-url","text":"<ul> <li>To access RadarrX, visit <code>https://radarr_X._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/radarrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the RadarrX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    radarrx:\n      roles:\n        - 1080webdl\n        - 1080remux\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of radarr.</p> <pre><code>    sb install cm-radarrx\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>Radarr</li> <li>and the Radarr upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/readarr/","text":"","title":"Readarr"},{"location":"community/apps/readarr/#what-is-it","text":"<p>Readarr is an ebook and audiobook collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new books from your favourite authors and will grab, sort and rename them.</p> <p>Note that only one type of a given book is supported.  If you want both an audiobook and ebook of a given book you will need multiple instances.</p>  <p>Note</p> <p>Readarr is currently in beta testing and is generally still in a work in progress. Features may be broken, incomplete, or cause spontaneous combustion.</p>","title":"What is it?"},{"location":"community/apps/readarr/#project-information","text":"<ul> <li> Readarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/readarr/#1-installation","text":"<pre><code>sb install cm-readarr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/readarr/#2-url","text":"<ul> <li>To access Readarr, visit <code>https://readarr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/readarr/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/readarrx/","text":"","title":"ReadarrX"},{"location":"community/apps/readarrx/#what-is-it","text":"<p>ReadarrX is an arrX role for Readarr.</p>","title":"What is it?"},{"location":"community/apps/readarrx/#project-information","text":"<ul> <li> Readarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/readarrx/#1-installation","text":"<pre><code>sb install cm-readarrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/readarrx/#2-url","text":"<ul> <li>To access ReadarrX, visit <code>https://readarrx._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/readarrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the ReadarrX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    readarrx:\n      roles:\n        - ebooks\n        - audiobooks\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of readarr.</p> <pre><code>    sb install cm-readarrx\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>Readarr</li> <li>and the Readarr upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/requestrr/","text":"","title":"Requestrr"},{"location":"community/apps/requestrr/#what-is-it","text":"<p>Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat. Current platform is Discord only, but the bot was built around the ideology of quick adaptation for new features as well as new platforms.</p>","title":"What is it?"},{"location":"community/apps/requestrr/#project-information","text":"<ul> <li> Requestrr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/requestrr/#1-installation","text":"<pre><code>sb install cm-requestrr\n</code></pre>","title":"1. Installation"},{"location":"community/apps/requestrr/#2-url","text":"<ul> <li>To access Requestrr, visit <code>https://requestrr._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/requestrr/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/requestrrx/","text":"","title":"RequestrrX"},{"location":"community/apps/requestrrx/#what-is-it","text":"<p>RequestrrX is an arrX role for Requestrr.</p>","title":"What is it?"},{"location":"community/apps/requestrrx/#project-information","text":"<ul> <li> Requestrr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/requestrrx/#1-installation","text":"<pre><code>sb install cm-requestrrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/requestrrx/#2-url","text":"<ul> <li>To access RequestrrX, visit <code>https://requestrrx._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/requestrrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the RequestrrX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    requestrrx:\n      roles:\n        - 1080\n        - 4k\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of requestrr.</p> <pre><code>    sb install cm-requestrrx\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>requestrr</li> <li>and the requestrr upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/resilio_sync/","text":"","title":"Resilio Sync"},{"location":"community/apps/resilio_sync/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/resilio_sync/#what-is-it","text":"<p>Resilio Sync  uses peer-to-peer technology to provide fast, private file sharing for teams and individuals. By skipping the cloud, transfers can be significantly faster because files take the shortest path between devices. Sync does not store your information on servers in the cloud, avoiding cloud privacy concerns.</p>","title":"What is it?"},{"location":"community/apps/resilio_sync/#project-information","text":"<ul> <li> Resilio Sync </li> <li> Docs</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/resilio_sync/#1-installation","text":"<pre><code>sb install cm-resilio-sync\n</code></pre>","title":"1. Installation"},{"location":"community/apps/resilio_sync/#2-url","text":"<ul> <li>To access Resilio Sync, visit <code>https://resilio-sync._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/resilio_sync/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/rflood/","text":"","title":"rFlood"},{"location":"community/apps/rflood/#what-is-it","text":"<p>rFlood docker image with rTorrent and the Flood UI, also optional WireGuard VPN support.</p>","title":"What is it?"},{"location":"community/apps/rflood/#project-information","text":"<ul> <li> rFlood </li> <li> Docs</li> <li> Github rTorrent:</li> <li> Github Flood:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/rflood/#1-installation","text":"<pre><code>sb install cm-rflood\n</code></pre>","title":"1. Installation"},{"location":"community/apps/rflood/#2-url","text":"<ul> <li>To access rFlood, visit <code>https://rflood._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/rflood/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/rfloodx/","text":"","title":"rFloodX"},{"location":"community/apps/rfloodx/#what-is-it","text":"<p>rFloodX is an arrX role for rFlood.</p>","title":"What is it?"},{"location":"community/apps/rfloodx/#project-information","text":"<ul> <li> rFlood </li> <li> Docs</li> <li> Github rTorrent:</li> <li> Github Flood:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/rfloodx/#1-installation","text":"<pre><code>sb install cm-rfloodx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/rfloodx/#2-url","text":"<ul> <li>To access rFloodX, visit <code>https://rfloodx._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/rfloodx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the rFloodX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    rfloodx:\n      roles:\n        - linuxisos\n        - anime\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of rflood.</p> <pre><code>    sb install cm-rfloodx\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>rflood</li> <li>and the rflood upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/sickchill/","text":"","title":"SickChill"},{"location":"community/apps/sickchill/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/sickchill/#what-is-it","text":"<p>SickChill is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.</p>","title":"What is it?"},{"location":"community/apps/sickchill/#project-information","text":"<ul> <li> SickChill </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/sickchill/#1-installation","text":"<pre><code>sb install cm-sickchill\n</code></pre>","title":"1. Installation"},{"location":"community/apps/sickchill/#2-url","text":"<ul> <li>To access SickChill, visit <code>https://sickchill._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/sickchill/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/sonarrx/","text":"","title":"SonarrX"},{"location":"community/apps/sonarrx/#what-is-it","text":"<p>SonarrX is an arrX role for Sonarr.</p>","title":"What is it?"},{"location":"community/apps/sonarrx/#project-information","text":"<ul> <li> Sonarr </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/sonarrx/#1-installation","text":"<pre><code>sb install cm-sonarrx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/sonarrx/#2-url","text":"<ul> <li>To access SonarrX, visit <code>https://sonarrx._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/sonarrx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the SonarrX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    sonarrx:\n      roles:\n        - 1080webdl\n        - documentary\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of sonarr.</p> <pre><code>    sb install cm-sonarrx\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>sonarr</li> <li>and the sonarr upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/speedtest/","text":"","title":"Speedtest"},{"location":"community/apps/speedtest/#what-is-it","text":"<p>Speedtest  is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers.</p>","title":"What is it?"},{"location":"community/apps/speedtest/#project-information","text":"<ul> <li> Speedtest </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/speedtest/#1-installation","text":"<pre><code>sb install cm-speedtest\n</code></pre>","title":"1. Installation"},{"location":"community/apps/speedtest/#2-url","text":"<ul> <li>To access Speedtest, visit <code>https://speedtest._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/speedtest/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/sshwifty/","text":"","title":"Sshwifty"},{"location":"community/apps/sshwifty/#what-is-it","text":"<p>Sshwifty is an SSH and Telnet connector made for the Web. It can be deployed on your computer or server to provide SSH and Telnet access interface for any compatible (standard) web browser.</p>","title":"What is it?"},{"location":"community/apps/sshwifty/#project-information","text":"<ul> <li> Sshwifty </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/sshwifty/#1-installation","text":"<pre><code>sb install cm-sshwifty\n</code></pre>","title":"1. Installation"},{"location":"community/apps/sshwifty/#2-url","text":"<ul> <li>To access Sshwifty, visit <code>https://sshwifty._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/sshwifty/#3-setup","text":"<ul> <li> <p>The pre-configured password is taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/stash/","text":"","title":"Stash"},{"location":"community/apps/stash/#what-is-it","text":"<p>Stash is a locally hosted web-based app written in Go which organizes and serves your porn.</p>","title":"What is it?"},{"location":"community/apps/stash/#project-information","text":"<ul> <li> Stash </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/stash/#1-installation","text":"<pre><code>sb install cm-stash\n</code></pre>","title":"1. Installation"},{"location":"community/apps/stash/#2-url","text":"<ul> <li>To access Stash, visit <code>https://stash._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/stash/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/synclounge/","text":"","title":"SyncLounge"},{"location":"community/apps/synclounge/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/synclounge/#what-is-it","text":"<p>SyncLounge is a tool to sync Plex content across multiple players in multiple locations.</p> <p>SyncLounge aims to keep multiple viewing sessions in sync regardless of whether the clients are in the same room or across the globe. To do this SyncLounge utilizes a middle-man server to communicate between each of the SyncLounge clients. Users choose their Plex client, decide on a SyncLounge Server and Room name and join up. Your friends/family can do the same. Whoever joins the room first will become the host.</p> <p>The host has complete control over a room. Commands they send to their client will be sent through to other people in the room (Play, Pause, Seek etc). If the host starts playing something different, SyncLounge will search all of your available Plex Media Servers for an equiavalent copy, even if it is not from the same Plex Media Server as the Host.</p>","title":"What is it?"},{"location":"community/apps/synclounge/#project-information","text":"<ul> <li> SyncLounge </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/synclounge/#1-installation","text":"<pre><code>sb install cm-synclounge\n</code></pre>","title":"1. Installation"},{"location":"community/apps/synclounge/#2-url","text":"<ul> <li>To access SyncLounge, visit <code>https://synclounge._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/synclounge/#3-setup","text":"<ul> <li> <p>Please note that synclounge works directly out of the box without further configurations. SyncLounge does support server autojoin however that feature is currently broken upstream and does not work.</p> </li> <li> <p>Visit <code>https://synclounge._yourdomain.com_</code> and log in to your plex account on the screen. On the server selection screen you will be presented with 4 options (AU, EU, US and Custom) Select Custom and enter the following address <code>https://synclounge._yourdomain.com_/slserver</code></p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/tautullix/","text":"","title":"TautulliX"},{"location":"community/apps/tautullix/#what-is-it","text":"<p>TautulliX is an arrX role for Tautulli.</p> <p>Tautulli is a 3rd party application that you can run alongside your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. The only thing missing is \"why they watched it\", but who am I to question your 42 plays of Frozen. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.</p>","title":"What is it?"},{"location":"community/apps/tautullix/#project-information","text":"<ul> <li> Tautulli </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/tautullix/#1-installation","text":"<pre><code>sb install cm-tautullix\n</code></pre>","title":"1. Installation"},{"location":"community/apps/tautullix/#2-url","text":"<ul> <li>To access TautulliX, visit <code>https://tautulliX._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/tautullix/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the TautulliX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    tautullix:\n      roles:\n        tautulli: plex\n        tautulli2: plex2\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of tautulli.</p> <pre><code>    sb install cm-tautullix\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>tautulli</li> <li>and the tautulli upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/telegraf/","text":"","title":"Telegraf"},{"location":"community/apps/telegraf/#what-is-it","text":"<p>Telegraf is a plugin-driven server agent for collecting and sending metrics and events from databases, systems, and IoT sensors.</p>","title":"What is it?"},{"location":"community/apps/telegraf/#project-information","text":"<ul> <li> Telegraf </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/telegraf/#1-installation","text":"<pre><code>sb install cm-telegraf\n</code></pre>","title":"1. Installation"},{"location":"community/apps/telegraf/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/transfer/","text":"","title":"transfer.sh"},{"location":"community/apps/transfer/#what-is-it","text":"<p>transfer.sh is an easy and fast file sharing from the command-line or web gui app.</p>","title":"What is it?"},{"location":"community/apps/transfer/#project-information","text":"<ul> <li> transfer.sh </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/transfer/#1-installation","text":"<pre><code>sb install cm-transfer\n</code></pre>","title":"1. Installation"},{"location":"community/apps/transfer/#2-url","text":"<ul> <li>To access transfer.sh, visit <code>https://transfer._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/transfer/#3-setup","text":"<ul> <li> <p>The pre-configured username/password are taken from your Saltbox <code>accounts.yml</code> file located in <code>/srv/git/saltbox/accounts.yml</code>.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/transmission/","text":"","title":"Transmission"},{"location":"community/apps/transmission/#what-is-it","text":"<p>Transmission is a fast, easy, and free BitTorrent client.</p>","title":"What is it?"},{"location":"community/apps/transmission/#project-information","text":"<ul> <li> Transmission </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/transmission/#1-installation","text":"<pre><code>sb install cm-transmission\n</code></pre>","title":"1. Installation"},{"location":"community/apps/transmission/#2-url","text":"<ul> <li>To access Transmission, visit <code>https://transmission._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/transmission/#3-setup","text":"<ul> <li> <p>Suggested desktop client is Transmission Remote GUI. It is to be set up with ssl enabled on port 443</p> </li> <li> <p><code>/watch</code> is hard-coded in the software and not editable from the settings.json, see related issue. To get around this the folder is mounted to <code>/mnt/local/downloads/torrents/transmission{{ rolename }}/watch</code></p> </li> <li> <p>Do not change the published ports if you want to be connectable.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/transmissionvpn/","text":"","title":"TransmissionVPN"},{"location":"community/apps/transmissionvpn/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/transmissionvpn/#what-is-it","text":"<p>TransmissionVPN is a VPN version of Transmission with OpenVPN to ensure a secure and private connection to the Internet, including use of iptables to prevent IP leakage when the tunnel is down.</p> <p>Transmission is a fast, easy, and free BitTorrent client.</p>","title":"What is it?"},{"location":"community/apps/transmissionvpn/#project-information","text":"<ul> <li> Transmission </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/transmissionvpn/#1-installation","text":"<pre><code>sb install cm-transmissionvpn\n</code></pre>","title":"1. Installation"},{"location":"community/apps/transmissionvpn/#2-url","text":"<ul> <li>To access TransmissionVPN, visit <code>https://transmissionvpn._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/transmissionvpn/#3-setup","text":"<ul> <li>Edit the TransmissionVPN settings in the TransmissionVPN section in community <code>settings.yml</code>: as shown below.</li> </ul> <pre><code> transmissionvpn:\n   vpn_endpoint: netherlands.ovpn\n   vpn_user: your_vpn_username\n   vpn_pass: your_vpn_password\n   vpn_prov: pia\n</code></pre> <ul> <li> <p>Follow instructions for parent role Transmission</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/transmissionx/","text":"","title":"TransmissionX"},{"location":"community/apps/transmissionx/#what-is-it","text":"<p>TransmissionX is an arrX role for Transmission.</p> <p>Transmission is a fast, easy, and free BitTorrent client.</p>","title":"What is it?"},{"location":"community/apps/transmissionx/#project-information","text":"<ul> <li> Transmission </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/transmissionx/#1-installation","text":"<pre><code>sb install cm-transmissionx\n</code></pre>","title":"1. Installation"},{"location":"community/apps/transmissionx/#2-url","text":"<ul> <li>To access TransmissionX, visit <code>https://transmissionx._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/transmissionx/#3-setup","text":"<ol> <li> <p>Read through the general arrX role instructions.</p> </li> <li> <p>Add your X instance names to the TransmissionX section in community <code>settings.yml</code>: using a list format as below.</p> <pre><code>    transmissionx:\n      roles:\n        - reality\n        - games\n</code></pre> </li> <li> <p>Run the Saltbox installer to generate your X instances of transmission.</p> <pre><code>    sb install cm-transmissionx\n</code></pre> </li> <li> <p>For app specific instructions refer to the parent role,</p> <ul> <li>transmission</li> <li>and the transmission upstream documentation   Documentation </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/ubooquity/","text":"","title":"Ubooquity"},{"location":"community/apps/ubooquity/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/ubooquity/#what-is-it","text":"<p>Ubooquity is a small content server that runs in the background and makes all the comics and books you chose to share available through a web page. The idea behind Ubooquity is to be able to browse your personal digital library from your tablet (e.g an iPad), your e-reader or your smartphone, either at home or from anywhere else.</p>","title":"What is it?"},{"location":"community/apps/ubooquity/#project-information","text":"<ul> <li> Ubooquity </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/ubooquity/#1-installation","text":"<pre><code>sb install cm-ubooquity\n</code></pre>","title":"1. Installation"},{"location":"community/apps/ubooquity/#2-url","text":"<ul> <li>To access Ubooquity, visit <code>https://ubooquity._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/ubooquity/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/unifi/","text":"","title":"UniFi Network Controller"},{"location":"community/apps/unifi/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/unifi/#what-is-it","text":"<p>UniFi Network Controller  is a wireless network management software solution from Ubiquiti Networks\u2122. It allows you to manage multiple wireless networks using a web browser.</p>","title":"What is it?"},{"location":"community/apps/unifi/#project-information","text":"<ul> <li> UniFi Network Controller  </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/unifi/#1-installation","text":"<pre><code>sb install cm-unifi\n</code></pre>","title":"1. Installation"},{"location":"community/apps/unifi/#2-url","text":"<ul> <li>To access UniFi Network Controller , visit <code>https://unifi._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/unifi/#3-setup","text":"<ol> <li>If you do not wish to use port <code>8080</code> then edit your desired UniFi informer port into the UniFi section in community <code>settings.yml</code>: .</li> </ol> <pre><code> unifi:\n   port: 8080\n</code></pre> <ol> <li> <p>Run the installer role:</p> <pre><code>sb install cm-unifi\n</code></pre> </li> <li> <p>Work out how to do the setup then come back here and write the rest of the instructions to help other users.</p> </li> <li> <p>For now, I think...</p> <ol> <li> <p>The webui is at <code>https://unifi._yourdomain.com_</code>, setup with the first run wizard.</p> </li> <li> <p>For Unifi to adopt other devices, e.g. an Access Point, it is required to change the inform IP address. Because Unifi runs inside Docker by default it uses an IP address not accessible by other devices. To change this go to <code>Settings &gt; System Settings &gt; Controller Configuration</code> and set the <code>Controller Hostname/IP</code> to a hostname or IP address accessible by your devices, probably https://unifi.yourdomain.com. Additionally the checkbox <code>\"Override inform host with controller hostname/IP\"</code> has to be checked, so that devices can connect to the controller during adoption (devices use the inform-endpoint during adoption).</p> </li> <li> <p>In order to manually adopt a device take these steps:</p> <p><pre><code>  ssh ubnt@$AP-IP\n  set-inform https://$address:8080/inform\n</code></pre>   The default device password is <code>ubnt</code>. <code>$address</code> is the IP address of the host you are running this container on and <code>$AP-IP</code> is the Access Point IP address.</p> </li> </ol> </li> <li> <p> Documentation</p> </li> </ol>","title":"3. Setup"},{"location":"community/apps/unmanic/","text":"","title":"Unmanic"},{"location":"community/apps/unmanic/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/unmanic/#what-is-it","text":"<p>Unmanic is a simple tool for optimising your file library. You can use it to convert your files into a single, uniform format, manage file movements based on timestamps, or execute custom commands against a file based on its file size.</p>","title":"What is it?"},{"location":"community/apps/unmanic/#project-information","text":"<ul> <li> Unmanic </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/unmanic/#1-installation","text":"<pre><code>sb install cm-unmanic\n</code></pre>","title":"1. Installation"},{"location":"community/apps/unmanic/#2-url","text":"<ul> <li>To access Unmanic, visit <code>https://unmanic._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/unmanic/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/uptime_kuma/","text":"","title":"Uptime Kuma"},{"location":"community/apps/uptime_kuma/#what-is-it","text":"<p>Uptime Kuma is a self-hosted monitoring tool like \"Uptime Robot\".</p>","title":"What is it?"},{"location":"community/apps/uptime_kuma/#project-information","text":"<ul> <li> Uptime Kuma </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/uptime_kuma/#1-installation","text":"<pre><code>sb install cm-uptime-kuma\n</code></pre>","title":"1. Installation"},{"location":"community/apps/uptime_kuma/#2-url","text":"<ul> <li>To access Uptime Kuma, visit <code>https://uptime._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/uptime_kuma/#3-setup","text":"<ul> <li> Documentation</li> </ul>","title":"3. Setup"},{"location":"community/apps/varken/","text":"","title":"Varken"},{"location":"community/apps/varken/#what-is-it","text":"<p>Varken is Dutch for PIG. PIG is an Acronym for Plex/InfluxDB/Grafana</p> <p>Varken is a standalone application to aggregate data from the Plex ecosystem into InfluxDB using Grafana for a frontend</p>","title":"What is it?"},{"location":"community/apps/varken/#project-information","text":"<ul> <li> Varken </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/varken/#1-installation","text":"<pre><code>sb install cm-varken\n</code></pre>","title":"1. Installation"},{"location":"community/apps/varken/#2-url","text":"<ul> <li>To access the Varken dashboard, visit <code>https://grafana._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/varken/#3-setup","text":"<ol> <li> <p>Run the Saltbox varken role to install varken/influxdb/telegraf/grafana:</p> <pre><code>    sb install cm-varken\n</code></pre> </li> <li> <p>Add your Maxmind API key to varken.ini:</p> <pre><code>    nano /opt/varken/varken.ini\n</code></pre> </li> <li> <p>Restart Varken:</p> <pre><code>    docker restart varken\n</code></pre> </li> <li> <p>Visit grafana <code>https://grafana._yourdomain.com_</code> </p> <ul> <li>default login is <code>admin</code> and your default <code>SB password</code>.</li> </ul> </li> <li> <p>Add data source InfluxDB named InfluxDB:</p> <ol> <li> <p>HTTP: URL = http://influxdb:8086</p> </li> <li> <p>InfluxDB Details: Database = varken</p> </li> <li> <p>Save &amp; Test</p> </li> </ol> </li> <li> <p>Add data source InfluxDB named Telegraf:</p> <ol> <li> <p>HTTP: URL = http://influxdb:8086</p> </li> <li> <p>InfluxDB Details: Database = telegraf</p> </li> <li> <p>Save &amp; Test</p> </li> </ol> </li> <li> <p>Grafana Example from Organizrr Discord  (imported via <code>Dashboards &gt; Manage &gt; Import</code>) :</p> <p>from: GilbN -- Plex dashboard for Grafana   @Grafana-Group for anyone using Varken Thought I'd share the dashboard I made. (with the help of Rox and Tron)   You will need to add the piechart and worldmap plugins for the dashboard to work. Use the variables to set the   different data sources.</p> <p>To Install PieChart/WorldMap: </p> <pre><code>    cd /opt/grafana/plugins &amp;&amp; git clone https://github.com/grafana/piechart-panel.git &amp;&amp; git clone\n  https://github.com/grafana/worldmap-panel.git &amp;&amp; docker restart grafana\n</code></pre> <p></p> </li> <li> <p>Grafana Examples from Varken Discord:</p> <ul> <li> <p>Varken Official Supported Dashboards: </p> </li> <li> <p>Online Users Table Example (Tautulli):</p> </li> <li> <p>World Map w/ geoIP</p> </li> </ul> <p> </p> <ul> <li> <p>Device Type Pie Chart:</p> </li> <li> <p>Basic Panel Structure</p> </li> </ul> <p></p> </li> <li> <p>For app specific instructions refer to the grafana role,</p> <ul> <li> <p>grafana</p> </li> <li> <p>and the upstream documentation   Documentation</p> </li> </ul> </li> </ol>","title":"3. Setup"},{"location":"community/apps/vaultwarden/","text":"","title":"vaultwarden"},{"location":"community/apps/vaultwarden/#what-is-it","text":"<p>vaultwarden is an alternative implementation of the Bitwarden server API written in Rust and compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.</p>  <p>Note</p> <p>\ud83d\udce2 This project was known as Bitwarden_RS and has been renamed to separate itself from the official Bitwarden server in the hopes of avoiding confusion and trademark/branding issues.</p>","title":"What is it?"},{"location":"community/apps/vaultwarden/#project-information","text":"<ul> <li> vaultwarden </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/vaultwarden/#1-installation","text":"<pre><code>sb install cm-vaultwarden\n</code></pre>","title":"1. Installation"},{"location":"community/apps/vaultwarden/#2-url","text":"<ul> <li>To access vaultwarden, visit <code>https://vaultwarden._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/vaultwarden/#3-setup","text":"<ol> <li> <p>Visit the vaultwarden site at <code>https://vaultwarden._yourdomain.com_</code></p> </li> <li> <p>Sign up with any email address and password.</p> </li> <li> <p>To access the Admin Panel go to <code>https://vaultwarden._yourdomain.com_admin</code></p> </li> <li> <p>You will need to enter an authentication key which you can find in <code>/opt/vaultwarden/env</code>. Look for <code>ADMIN_TOKEN=</code>.</p> </li> <li> <p> Documentation</p> </li> </ol>","title":"3. Setup"},{"location":"community/apps/watchtower/","text":"","title":"Watchtower"},{"location":"community/apps/watchtower/#what-is-it","text":"<p>Watchtower is a process for automating Docker container base image updates.</p> <p>With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.</p>","title":"What is it?"},{"location":"community/apps/watchtower/#project-information","text":"<ul> <li> Watchtower </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/watchtower/#1-installation","text":"<pre><code>sb install cm-watchtower\n</code></pre>","title":"1. Installation"},{"location":"community/apps/watchtower/#2-setup","text":"<ul> <li> Documentation</li> </ul>","title":"2. Setup"},{"location":"community/apps/wordpress/","text":"","title":"WordPress"},{"location":"community/apps/wordpress/#what-is-it","text":"<p>WordPress  is open source software you can use to create a beautiful website, blog, or app.</p>","title":"What is it?"},{"location":"community/apps/wordpress/#project-information","text":"<ul> <li> WordPress  </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/wordpress/#1-installation","text":"<pre><code>sb install cm-wordpress\n</code></pre>","title":"1. Installation"},{"location":"community/apps/wordpress/#2-url","text":"<ul> <li>To access WordPress , visit <code>https://wordpress._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/wordpress/#3-setup","text":"<ul> <li> <p>Visit the wordpress site at <code>https://wordpress._yourdomain.com_</code> and the setup screen will appear.</p> </li> <li> <p>No default user is configured until you run through the setup screen, so you should ideally run through setup as soon as wordpress is deployed to secure the site.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/xteve/","text":"","title":"xTeVe"},{"location":"community/apps/xteve/#not-yet-integrated-soon","text":"","title":"NOT YET INTEGRATED - SOON"},{"location":"community/apps/xteve/#what-is-it","text":"<p>xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats.</p> <p>xTeVe emulates a SiliconDust HDHomeRun OTA tuner, which allows it to expose IPTV style channels to software, which would not normally support it. This Docker image includes the following packages and features:</p> <ul> <li> <p>xTeVe v2.1 (Linux) x86 64 bit</p> </li> <li> <p>Latest Guide2go (Linux) x86 64 bit (Schedules Direct XMLTV grabber)</p> </li> <li> <p>Zap2XML Support (Perl based zap2it / TVguide.com XMLTV grabber)</p> </li> <li> <p>Bash, Perl &amp; crond Support</p> </li> <li> <p>VLC &amp; ffmpeg Support</p> </li> <li> <p>Automated XMLTV Guide Lineups &amp; Cron\u2019s</p> </li> </ul>","title":"What is it?"},{"location":"community/apps/xteve/#project-information","text":"<ul> <li> xTeVe </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/xteve/#1-installation","text":"<pre><code>sb install cm-xteve\n</code></pre>","title":"1. Installation"},{"location":"community/apps/xteve/#2-url","text":"<ul> <li>To access xTeVe, visit <code>https://ROLENAME._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/xteve/#3-setup","text":"<ul> <li> <p>Access xTeVe web GUI, visit <code>https://ROLENAME._yourdomain.com_</code></p> </li> <li> <p>Run through the Configuration Wizard.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/apps/yacht/","text":"","title":"Yacht"},{"location":"community/apps/yacht/#what-is-it","text":"<p>Yacht is a web interface for managing docker containers with an emphasis on templating to provide one-click deployments of dockerized applications. Think of it like a decentralized app store for servers that anyone can make packages for.</p>","title":"What is it?"},{"location":"community/apps/yacht/#project-information","text":"<ul> <li> Yacht </li> <li> Docs</li> <li> Github:</li> <li> Docker: </li> </ul>","title":"Project Information"},{"location":"community/apps/yacht/#1-installation","text":"<pre><code>sb install cm-yacht\n</code></pre>","title":"1. Installation"},{"location":"community/apps/yacht/#2-url","text":"<ul> <li>To access Yacht, visit <code>https://yacht._yourdomain.com_</code></li> </ul>","title":"2. URL"},{"location":"community/apps/yacht/#3-setup","text":"<ul> <li> <p>Check out the getting started guide if this is the first time you've used Yacht.</p> </li> <li> <p> Documentation</p> </li> </ul>","title":"3. Setup"},{"location":"community/guides/aliases/","text":"<p>Handy guide to Saltbox Command line aliases.</p>","title":"Saltbox Aliases"},{"location":"community/guides/aliases/#sb-update","text":"<ul> <li> <p>Update Saltbox</p> </li> <li> <p>Usage:</p> <pre><code>    sb update\n</code></pre> </li> </ul>","title":"sb update"},{"location":"community/guides/aliases/#sb-list","text":"<ul> <li> <p>List Saltbox packages</p> </li> <li> <p>Usage:</p> <pre><code>    sb list\n</code></pre> </li> </ul>","title":"sb list"},{"location":"community/guides/aliases/#sb-install-package","text":"<ul> <li> <p>Install <code>&lt;package&gt;</code></p> </li> <li> <p>Usage:</p> <pre><code>    sb install plex\n</code></pre> </li> </ul>","title":"sb install <code>&lt;package&gt;</code>"},{"location":"community/guides/aliases/#sb-install-cm-package","text":"<ul> <li> <p>Install community <code>&lt;package&gt;</code></p> </li> <li> <p>Usage:</p> <pre><code>    sb install cm-jellyfin\n</code></pre> </li> </ul>","title":"sb install cm-<code>&lt;package&gt;</code>"},{"location":"community/guides/cloudbox/","text":"<p>Saltbox is a continuation of the Cloudbox project and is mostly compatible out of the box. Very little has to be done to bring your old Cloudbox data into Saltbox. Any customisations you have made or special roles are going to require extra work as Saltbox uses Traefik instead of nginx.</p>","title":"Migrating from Cloudbox to Saltbox"},{"location":"community/guides/cloudbox/#before-migration","text":"<p>Backup from Cloudbox as you normally would. You will need to make the backup drive available to your new saltbox install via rclone just as you would with a Cloudbox restore. We are really only interested in keeping the data stored in <code>/opt</code> and not the Cloudbox configuration files. We will be using the data from the configuration files so you may find it handy to download those locally to use as a reference. If you have community containers set up you should make a copy of those files as well. We are more interested in the data stored in these files so it is perfectly fine to just copy and paste the information into a text file for your reference as part of the installation process.</p> <ul> <li> <p>Cloudbox files to keep handy:  These files should be found in <code>~/cloudbox/</code></p> <pre><code>  accounts.yml\n</code></pre> <p>You may need to decrypt your <code>accounts.yml</code> file if you used the encryption option. Do this before you shut down or wipe your old server.</p> <pre><code>  adv_settings.yml\n  ansible.cfg\n  backup_config.yml\n</code></pre> </li> <li> <p>Community files to keep handy:  These files should be found in <code>/opt/community/</code></p> <pre><code>  ansible.cfg\n  hetzner_nfs.yml\n  settings.yml\n  telly.yml\n</code></pre> </li> <li> <p>Rclone configuration file     The rclone.conf file located in <code>~/.config/rclone/rclone.conf</code> if your configuration uses service accounts to authenticate the remotes you will need make sure the service accounts are accessible. </p> <pre><code>  rclone.conf\n</code></pre> </li> </ul>","title":"Before Migration"},{"location":"community/guides/cloudbox/#migration","text":"<ul> <li> <p>Install the saltbox dependencies </p> <pre><code>curl -sL https://install.saltbox.dev | sudo -H bash; cd /srv/git/saltbox\n</code></pre> </li> <li> <p>Copy <code>rclone.conf</code> to <code>/srv/git/saltbox</code>    and edit the configuration files as needed you can follow the saltbox install instructions for saltbox for this</p> </li> <li> <p>Run the preinstall command, this step will create the specified user account, add it to sudoers, update the kernel, edit GRUB configuration, install Rclone, and reboot the server if needed. </p> <pre><code>  sb install preinstall`\n</code></pre> </li> <li> <p>switch to the newly created user specified in your configuration. </p> <pre><code>  sb install restore\n</code></pre> <p>Then you should be able to install tags as you want.</p> </li> </ul>","title":"Migration"},{"location":"community/guides/hardlinking/","text":"<p>Hardlinking should more or less be in place if you have followed the saltbox setup guide.</p> <p>In short, if your container path mappings match your system mappings match your other container mappings then hardlinking should work fine within your arrs as long as your downloads path is on the same disk as your local media path.</p> <p>A more comprehensive guide will be added soon.</p>","title":"Hardlinking Guide"},{"location":"community/guides/links/","text":"","title":"Links"},{"location":"community/guides/links/#trakt-lists","text":"","title":"Trakt Lists"},{"location":"community/guides/links/#tv","text":"<ul> <li>TV Shows By Network</li> <li>More TV Shows By Network</li> <li>Animated/Anime Shows By Release Year</li> <li>4K TV Series (By a925sw)</li> </ul>","title":"TV"},{"location":"community/guides/links/#movies","text":"<ul> <li>4K Movies</li> <li>4k Movies (By Brian)</li> <li>Huge Movie Lists by year + Documentaries</li> <li>Rotten Tomatoes Best of 2018 - User also has Best of 2014/2015/2016/2017</li> <li>Latest Releases</li> <li>Lists by decades (By opposite_lock)</li> </ul>","title":"Movies"},{"location":"community/guides/links/#themed-lists","text":"<ul> <li>50 Best Christmas Movies</li> <li>50 Best Christmas Movies - Rotten Tomatoes</li> <li>Many Christmas Movies</li> <li>Halloween Movies</li> </ul>","title":"Themed Lists"},{"location":"community/guides/links/#miscusers-with-many-different-lists","text":"<ul> <li>Movies/TV By Genre</li> </ul>","title":"Misc/Users with many different lists"},{"location":"community/guides/suggested_reading/","text":"","title":"Suggested Reading"},{"location":"community/guides/suggested_reading/#trash-guides","text":"<ul> <li> <p> TRaSH Guides </p> </li> <li> <p> Discord</p> </li> </ul>","title":"TRaSH Guides"},{"location":"community/guides/suggested_reading/#servarr","text":"<p>The servarr wiki is home to information on Lidarr, Prowlarr, Radarr, Readarr, and Sonarr.</p> <ul> <li> Servarr </li> </ul> <p>Servarr Discussion</p> <ul> <li>Lidarr</li> <li> Official Lidarr Discord</li> <li> <p> Official Lidarr Reddit</p> </li> <li> <p>Prowlarr</p> </li> <li> Official Prowlarr Discord</li> <li> <p> Official Prowlarr Reddit</p> </li> <li> <p>Radarr</p> </li> <li> Official Radarr Discord</li> <li> <p> Official Radarr Reddit</p> </li> <li> <p>Readarr</p> </li> <li> Official Readarr Discord</li> <li> <p> Official Readarr Reddit</p> </li> <li> <p>Sonarr</p> </li> <li> Official Sonarr Discord</li> <li> Official Sonarr Reddit</li> </ul>","title":"Servarr"},{"location":"community/guides/suggested_reading/#kasper56s-plex-client-end-user-setup-wiki","text":"<ul> <li> Media Clients Wiki </li> </ul>","title":"Kasper56's Plex Client End User setup Wiki"},{"location":"community/guides/tautuliscripts/","text":"<p>This is a quick guide to installing and configuring a Tautulli custom script. It will teach you how to download and configure a Tautulli (plexpy) custom script that drops Plex video streams transcoding from a 4K source.</p>","title":"Introduction"},{"location":"community/guides/tautuliscripts/#install-the-script","text":"<p>Access your Saltbox server as your normal non-root user.</p> <p>We'll be installing the Killstream.py script from the JBOPS script collection.</p>","title":"Install the script"},{"location":"community/guides/tautuliscripts/#download-the-script-using-curl","text":"<pre><code>cd /opt/scripts/plexpy/\ncurl -O https://raw.githubusercontent.com/blacktwin/JBOPS/master/killstream/kill_stream.py\nsudo chown seed:seed kill_stream.py\nchmod a+x kill_stream.py\n</code></pre>","title":"Download the script using curl:"},{"location":"community/guides/tautuliscripts/#verify-that-the-script-was-downloaded-successfully-with","text":"<pre><code>ls -la kill_stream.py\n</code></pre> <p>The file should be around 9700 bytes in size.</p>","title":"Verify that the script was downloaded successfully with:"},{"location":"community/guides/tautuliscripts/#configure-tautulli-notification-agent","text":"<p>Enter Tautulli settings and find the Notification Agents link on the left side menu.\\ Click Add a new notification agent and scroll down to Script in the selection dialog.</p>","title":"Configure Tautulli Notification Agent"},{"location":"community/guides/tautuliscripts/#configuration-panel","text":"<p>Enter <code>/scripts/plexpy/</code> in the script folder and exit the text input field.</p> <p>Select the script named <code>./kill_stream.py</code> in the Script File drop-down.\\ Check your previous steps or bug someone on discord if the script is not listed.</p> <p>Enter <code>Terminate 4K transcodes</code> or something of your own choice in the description field.</p>","title":"Configuration panel"},{"location":"community/guides/tautuliscripts/#triggers-panel","text":"<p>Put a checkmark in <code>Playback Start</code> and <code>Transcode Decision Change</code></p>","title":"Triggers panel"},{"location":"community/guides/tautuliscripts/#notifications-conditions-panel","text":"<p>Condition {1}: <code>Video Decision</code> - <code>is</code> - <code>transcode</code></p> <p>Condition {2}: <code>Library Name</code> - <code>contains</code> - <code>4K</code></p> <p>Note: adjust the library name if your 4K libraries does not contain the name 4K.</p>","title":"Notifications Conditions panel"},{"location":"community/guides/tautuliscripts/#arguments-panel","text":"<p>Under Playback Start enter the following: <pre><code>--jbop stream --username {username} --sessionId {session_id} --killMessage 'Transcoding is not allowed from the 4K libraries.'\n</code></pre> Under Transcode Decision Change enter the following: <pre><code>--jbop stream --username {username} --sessionId {session_id} --killMessage 'Transcoding is not allowed from the 4K libraries.'\n</code></pre></p>","title":"Arguments panel"},{"location":"community/guides/tautuliscripts/#finishing-up","text":"<p>Click the Save button to save the new notification agent.</p> <p>You can test the agent by attempting to play a 4K movie through the Plex web app and downgrade the quality to 2Mbit. It will be transcoding for about 5-10 seconds, after which you should get the stream kill message.</p> <p>There is a list of when a notification agent is triggered in the Notification logs section of Tautulli logs.</p>","title":"Finishing up"},{"location":"community/guides/tautuliscripts/#credits-to-blacktwin","text":"<ul> <li>https://github.com/blacktwin/JBOPS</li> </ul>","title":"Credits to @blacktwin"},{"location":"community/guides/chazguides/base-domain/","text":"<p>I want some app to load at my base domain.</p>","title":"I want some app to load at my base domain"},{"location":"community/guides/chazguides/disk-full/","text":"<p>First, a quick refresher on how the system works:</p> <p>Your downloader puts files in <code>/mnt/local/downloads</code>. Sonarr/Radarr move [usenet] or copy [default torrent] these files to <code>/mnt/local/Media</code>. [They\u2019re actually moving files to <code>/mnt/unionfs/Media</code>, but the mergerfs config routes them in <code>/mnt/local/Media</code>] Once <code>/mnt/local/Media</code> hits 200GB, cloudplow uploads the contents to your cloud drive. Once that\u2019s complete they will show up in <code>/mnt/remote/Media</code> as well as <code>/mnt/unionfs/Media</code>. Chances are, if your disk is full, the cause is one of two things:</p> <ol> <li>Sonarr/Radarr are not importing downloaded media</li> <li>Cloudplow isn't uploading things to the cloud.</li> </ol> <p>If you are using rclone\u2019s --vfs-cache=full, then there\u2019s a third likely cause:</p> <ol> <li>Your rclone vfs cache is filling your disk</li> </ol> <p>This is written assuming Usenet downloads, so filling your disks with seeding torrents isn't covered.  You can use these tools to find out if that's the issue, though.</p>","title":"Why is my disk full?"},{"location":"community/guides/chazguides/disk-full/#where-is-the-space-going","text":"<p>The first step is to find out where the space is going on your disk; which directories contain all the files.</p> <p>At a command prompt, type:</p> <pre><code>sudo ncdu -x --exclude /opt/plex /\n</code></pre> <p>What\u2019s that command?</p> <pre><code>sudo    run with root privileges\nncdu    show graphic display of disk usage\n-x  don\u2019t cross filesystem boundaries [this will show only local space used and won't cross over to remote file systems like your google drive]\n--exclude /opt/plex ignore this directory; it\u2019s full of thousands of tiny files that take forever to scan and MOST LIKELY you\u2019re not going to want to delete anything from here. \n/   starting point of scan\n</code></pre> <p>You'll probably see something like this:</p> <pre><code>ncdu 1.12 ~ Use the arrow keys to navigate, press ? for help\n--- / ------------------------------------------------------\n  558.0 GiB [##########] /mnt\n   20.9 GiB [          ] /var\n    3.5 GiB [          ] /usr\n</code></pre> <p>Drill into /mnt/local:</p> <pre><code>ncdu 1.12 ~ Use the arrow keys to navigate, press ? for help\n--- /mnt/local ---------------------------------------------\n                         /..\n  472.9 GiB [##########] /downloads\n   43.9 GiB [          ] /Media\n   37.5 GiB [          ] /Backups\n    3.7 GiB [          ] /transcodes\n</code></pre> <p>Here, I have 473 GB of unimported downloads and 44 GB waiting to be uploaded by Cloudplow.</p> <p>Rclone vfs cache is more install-dependent.  I\u2019m going to assume that if you\u2019re reading this you didn\u2019t change things from the defaults, and chances are you\u2019ll see something like this:</p> <pre><code>ncdu 1.12 ~ Use the arrow keys to navigate, press ? for help ------------------------------------------------------------\n  252.3 GiB [##########] /home\n  119.6 GiB [####      ] /mnt\n   29.5 GiB [#         ] /var\n    3.4 GiB [          ] /usr\n</code></pre> <p>Drill into /home/YOUR_USERNAME/:</p> <pre><code>ncdu 1.12 ~ Use the arrow keys to navigate, press ? for help\n--- /home/seed ---------------------------------------------\n                         /..\n  203.0 GiB [##########] /.cache\n   37.9 MiB [          ] /.pkg-cache\n   34.5 MiB [          ] /.npm\n</code></pre> <p>And further into .cache/rclone:</p> <pre><code>ncdu 1.12 ~ Use the arrow keys to navigate, press ? for help\n--- /home/seed/.cache/rclone -------------------------------\n                         /..\n  202.9 GiB [##########] /vfs\n    4.8 MiB [          ] /vfsMeta\n   16.0 KiB [          ] /webgui\n</code></pre> <p>That\u2019s your VFS cache.</p>","title":"Where is the space going?"},{"location":"community/guides/chazguides/disk-full/#radarrsonarr-didnt-import-stuff","text":"<p>Drill into downloads to examine what's there in more detail.  Chances are you\u2019ll find /mnt/local/nzbs/nzbget/downloads/completed is where all the files are.  Those are downloads that Radarr/Sonarr didn\u2019t import.</p> <p>Use Wanted -&gt; Manual Import to find out why particular things weren't imported.</p> <p></p> <p>Perhaps Radarr couldn\u2019t work out what movie a thing was:</p> <p></p> <p>Maybe it doesn\u2019t look like an upgrade for one reason or another:</p> <p></p> <p></p> <p>That same information is also available in the logs.</p> <p>You can import things from here after telling Radarr what movie it is or the like, or you can delete them from within ncdu or via whatever other means.</p>","title":"Radarr/Sonarr didn\u2019t import stuff!"},{"location":"community/guides/chazguides/disk-full/#cloudplow-isnt-uploading-stuff","text":"<p>If the bulk of the space is in staged-for-upload files sitting in <code>/mnt/local/Media</code>, then cloudplow hasn\u2019t uploaded those files yet.</p> <p>This is typically due to one of the following:</p> <ul> <li>Upload threshold hasn\u2019t been reached.</li> <li>You\u2019ve reached the Google Drive upload cap of 750GB/day</li> </ul> <p>The default threshold to start a Google upload is 200GB, so in my case above cloudplow wouldn\u2019t do anything until 150GB more gets put into <code>/mnt/local/Media</code>.</p> <p>At a command prompt, type: <pre><code>tail /opt/cloudplow/cloudplow.log\n</code></pre></p> <p>You should see something like: <pre><code>Uploader: google. Local folder size is currently 44 GB. Still have 156 GB remaining before its eligible to begin uploading...\n</code></pre></p> <p>If you do, cloudplow is working as expected.  If you want cloudplow to start uploading stuff sooner, you can adjust those thresholds in your cloudplow config file.  At the bottom of <code>/opt/cloudplow/config.json</code>, you\u2019ll find something like this:</p> <pre><code>\"google\": {\n    \"check_interval\": 30,\n    \"exclude_open_files\": true,\n    \"max_size_gb\": 200,\n    \"opened_excludes\": [\n        \"/downloads/\"\n    ],\n    \"service_account_path\": \"\",\n    \"size_excludes\": [\n        \"downloads/*\"\n    ]\n}\n</code></pre> <p>That\u2019s going to check every 30 minutes, and start uploading when the folder reaches 200GB.  Adjust those values to suit your use case. Restart the cloudplow service if you make changes here.</p> <p>In the default setup, you can upload 750GB per day.</p> <p>To see if you\u2019ve hit that quota, run a cloudplow upload manually.  At a command prompt, type:</p> <pre><code>cloudplow upload \n</code></pre> <p>This will kick off an upload without regard for the threshold.  You can run this anytime you want to upload whatever\u2019s pending right this very minute.</p> <p>PAY ATTENTION TO WHAT THE LOG SAYS.  The errors should let you know what\u2019s going on.</p> <p>If you want more detail:</p> <pre><code>cloudplow upload --loglevel=DEBUG\n</code></pre> <p>You'll get a great deal of information about what cloudplow is doing and why.</p> <p>If you find yourself hitting that 750GB cap regularly, you may want to set up service-account uploading.</p>","title":"Cloudplow isn\u2019t uploading stuff!"},{"location":"community/guides/chazguides/disk-full/#rclone-cache-is-out-of-control","text":"<p>If the bulk of the space is in your rclone VFS cache, you\u2019ll want to check the vfs_cache configuration for all your mounts to control this.  </p> <p>Perhaps you used a copy-pasted config that is setting the max cache to 200G or so, and applied that to four mounts.  That means your rclone cache might grow to 800GB, so adjust the configs on the mounts you're caching.</p> <p>Don\u2019t just delete the existing cached files.  You\u2019ll need to stop the mounts first before you adjust the cache sizes.</p>","title":"Rclone cache is out of control!"},{"location":"community/guides/chazguides/home-server/","text":"<p>Installing Cloudbox on a home server</p>","title":"Installing Saltbox on a home server"},{"location":"community/guides/chazguides/no-media/","text":"<p>[in Plex, Emby, Radarr, Sonarr, etc]</p> <p>Usually this is a simple problem, but there are several places where it could be.</p> <p>There are several layers between your Google Drive and Plex [or other app].</p> <ul> <li>rclone remote, which provides the link to your Google Drive.  This is where you sign into your Google account.</li> <li>rclone_vfs service, which makes that rclone remote visible at <code>/mnt/remote</code></li> <li>mergerfs service which combines that mount point with a local \u201cstaging\u201d directory at <code>/mnt/unionfs</code>.</li> <li>mapping of the mergerfs into the various docker containers.</li> </ul> <p>If any layer is having problems, Plex isn\u2019t going to see your media.</p> <p>For purposes of these notes, I\u2019m assuming your setup is based on the current standard Saltbox configuration:</p> <ul> <li>rclone remote is mounted via <code>rclone_vfs</code> [this used to be done by plexdrive]</li> <li>/mnt/unionfs directory is created using <code>merger_fs</code> [used to be done by unionfs]</li> </ul> <p>I\u2019m further assuming that you are using the default file structure as suggested in the Saltbox wiki.</p> <p>See the end of this doc for some notes on how to tell if 1 and 2 are true.</p> <p>MY FOLDERS AND FILES IN THESE SCREENSHOTS WILL NOT MATCH YOURS.  THAT\u2019S FINE AND EXPECTED.</p> <p>When I refer to a shell command throughout, you\u2019re typing the part highlighted in blue and looking for the part highlighted in orange.</p> <p>In most cases, running the mounts tag will clear up any problems you may be having with the various auto-generated service files.</p> <pre><code>cd ~/cloudbox &amp;&amp; sudo ansible-playbook cloudbox.yml --tags mounts\n</code></pre>","title":"I can\u2019t see my media!"},{"location":"community/guides/chazguides/no-media/#a-quick-look","text":"<p>The df command can give you a quick look at things:</p> <pre><code>\u279c  ~ df -h\nFilesystem   Size   Used  Avail  Use%  Mounted on\n...\nlocal:remote  6.1P  107T   224G  100%  /mnt/unionfs\ngoogle:       1.0P  107T   1.0P   10%  /mnt/remote\n\u279c  ~\n</code></pre> <p>That shows a device called \u201cgoogle\u201d [created by rclone config] mounted at <code>/mnt/remote</code> [done by rclone_vfs.service], and then two directories [local and remote, which are both inside the /mnt directory] combined into <code>/mnt/unionfs</code> [that\u2019s done by mergerfs.service]</p> <p>If this looks good, your problem is most likely in the bind mounts within the containers.</p> <p>Now we\u2019ll step through the various layers involved in this and check them one at a time.</p>","title":"A quick look"},{"location":"community/guides/chazguides/no-media/#rclone-remote","text":"<p>The rclone config command should show you the google remote you defined during setup:</p> <pre><code>\u279c  ~ rclone config\nCurrent remotes:\n\nName                Type\n====                ====\ngoogle              drive\n\ne) Edit existing remote\n...\ne/n/d/r/c/s/q&gt; q\n</code></pre> <p>You should be able to get a file listing from that remote:</p> <pre><code>\u279c  ~ rclone lsd google:/Media\n        -1 2018-12-01 20:16:06      -1 Music\n        -1 2019-03-15 19:26:14      -1 Movies\n        -1 2018-12-01 20:14:35      -1 TV\n\u279c  ~\n</code></pre> <p>That file listing should match what\u2019s displayed on the Google Drive website.</p> <p>Yours will probably contain \u201cMovies\u201d and \u201cTV\u201d.</p> <p>If it doesn\u2019t, step one is to fix that.  Recreate or edit that google: rclone remote until the file listings match.</p> <p>Do not continue until those two file listings match.  They won\u2019t match mine; they should both show the same files from YOUR gdrive.</p> <p>Now that the rclone remote is known good, let\u2019s move to the next layer, the rclone_vfs mount.</p>","title":"rclone remote"},{"location":"community/guides/chazguides/no-media/#rclone_vfs-mount","text":"<p>First, let\u2019s check that the service is running:</p> <p><pre><code>\u279c  ~ sudo systemctl status rclone_vfs.service\n\u25cf rclone_vfs.service - Rclone VFS Mount\n   Loaded: loaded (/etc/systemd/system/rclone_vfs.service; enabled; vendor preset: enabled)\n   Active: active (running) since Sat 2019-11-02 06:45:34 EET; 10h ago\n  Process: 1053 ExecStartPre=/bin/sleep 10 (code=exited, status=0/SUCCESS)\n Main PID: 1247 (rclone)\n    Tasks: 23 (limit: 4915)\n   CGroup: /system.slice/rclone_vfs.service\n        \u2514\u25001247 /usr/bin/rclone mount --config=/home/seed/.config/rclone/rclone.conf --user-agent . . .\n\nNov 02 06:45:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Starting Rclone VFS Mount...\nNov 02 06:45:34 Ubuntu-1804-bionic-64-minimal rclone[1247]: Serving remote control on http://127.0.0.1:5572/\nNov 02 06:45:34 Ubuntu-1804-bionic-64-minimal systemd[1]: Started Rclone VFS Mount.\n</code></pre> You want to see \u201c<code>active (running)</code>\u201d there.</p> <p>You can look at the log to find out what\u2019s wrong if it\u2019s not \u201c<code>active (running)</code>\u201d</p> <pre><code>\u279c  ~ sudo journalctl -fu rclone_vfs.service\n-- Logs begin at Mon 2019-08-05 16:56:44 EEST. --\nNov 02 06:42:44 Ubuntu-1804-bionic-64-minimal rclone[9625]: Serving remote control on http://127.0.0.1:5572/\nNov 02 06:42:44 Ubuntu-1804-bionic-64-minimal systemd[1]: Started Rclone VFS Mount.\nNov 02 06:44:09 Ubuntu-1804-bionic-64-minimal systemd[1]: Stopping Rclone VFS Mount...\nNov 02 06:44:09 Ubuntu-1804-bionic-64-minimal rclone[9625]: Fatal error: failed to umount FUSE fs: exit status 1: fusermount: entry for /mnt/remote not found in /etc/mtab\nNov 02 06:44:09 Ubuntu-1804-bionic-64-minimal systemd[1]: rclone_vfs.service: Main process exited, code=exited, status=1/FAILURE\nNov 02 06:44:09 Ubuntu-1804-bionic-64-minimal systemd[1]: rclone_vfs.service: Failed with result 'exit-code'.\nNov 02 06:44:09 Ubuntu-1804-bionic-64-minimal systemd[1]: Stopped Rclone VFS Mount.\n-- Reboot --\nNov 02 06:45:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Starting Rclone VFS Mount...\nNov 02 06:45:34 Ubuntu-1804-bionic-64-minimal rclone[1247]: Serving remote control on http://127.0.0.1:5572/\nNov 02 06:45:34 Ubuntu-1804-bionic-64-minimal systemd[1]: Started Rclone VFS Mount.\n</code></pre> <p>In that log you can see an error from last night when my server ran out of disk space, the rclone_vfs service died, then a reboot [after clearing space]  and it came back up.</p> <p>If there are errors there, first try restarting the service:</p> <pre><code>sudo systemctl restart rclone_vfs\n</code></pre> <p>If that doesn\u2019t get you to an \u201c<code>active (running)</code>\u201d state, try a reboot of the machine.</p> <p>If that doesn\u2019t work, the problem is deeper; maybe a config problem or a failed install?  Read the log.  Chances are the specific problem is called out [missing directory, perhaps].  You\u2019re running a server.  Learn to read logs.  If all fails, take the log information to the Discord, but be prepared to describe what you\u2019ve done and provide details.  Don\u2019t come in with \u201cShit\u2019s busted, my dudes!  What\u2019s wrong?\u201d</p> <p>Now that the service is running, let\u2019s make sure the files are showing up where they are supposed to be.</p> <p>You can extract the location where the rclone_vfs service is mounting your google storage with a quick egrep command:</p> <pre><code>\u279c  ~ egrep -i -e \"/mnt/\" /etc/systemd/system/rclone_vfs.service\n  google: /mnt/remote\nExecStop=/bin/fusermount -uz /mnt/remote\n</code></pre> <p>You can see in that output that rclone_vfs is mounting your google: remote at /mnt/remote.</p> <p>That means that the content of your google drive should also appear at that location.  Let\u2019s check that:</p> <pre><code>\u279c  ~ ls -al /mnt/remote/Media\ntotal 0\ndrwxrwxr-x 1 seed seed 0 Dec  1  2018 Music\ndrwxrwxr-x 1 seed seed 0 Mar 15  2019 Movies\ndrwxrwxr-x 1 seed seed 0 Dec  1  2018 TV\n\u279c  ~\n</code></pre> <p>Note that that matches the file listing from the Google Drive web UI above.</p> <p>If it doesn\u2019t, there\u2019s a problem running the rclone_vfs.service.  Perhaps try running the mounts tag.</p> <p>Do not continue until those two file listings match.  They won\u2019t match mine; they should both show the same files from YOUR gdrive.</p> <p>We\u2019ve established that the rclone remote is good, and the rclone_vfs service is mounting it as a file system at the expected location.</p> <p>The next step is the mergerfs mount where all the apps look for your files.</p>","title":"rclone_vfs mount"},{"location":"community/guides/chazguides/no-media/#mergerfs-service","text":"<p>Just like we did with the rclone_vfs service, check the mergerfs status:</p> <pre><code>\u279c  ~ sudo systemctl status mergerfs.service\n\u25cf mergerfs.service - MergerFS Mount\n   Loaded: loaded (/etc/systemd/system/mergerfs.service; enabled; vendor preset: enabled)\n   Active: active (running) since Sat 2019-11-02 06:45:24 EET; 11h ago\n  Process: 1034 ExecStart=/usr/bin/mergerfs -o category.create=ff,minfreespace=0,allow_other -o dropcacheonclose=true,security_capability=false,xattr=nosys -o statfs_ignore=ro,use_ino,auto_\n    Tasks: 9 (limit: 4915)\n   CGroup: /system.slice/mergerfs.service\n        \u2514\u25001074 /usr/bin/mergerfs -o category.create=ff,minfreespace=0,allow_other -o dropcacheonclose=true,security_capability=false,xattr=nosys -o statfs_ignore=ro,use_ino,auto_cache,um\n\nNov 02 06:45:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Starting MergerFS Mount...\nNov 02 06:45:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Started MergerFS Mount.\n</code></pre> <p>As before, if not \u201c<code>active (running)</code>\u201d, you can check the mergerfs log for some clue:</p> <pre><code>\u279c  ~ sudo journalctl -fu mergerfs.service\n-- Logs begin at Mon 2019-08-05 16:56:44 EEST. --\nOct 13 17:00:11 Ubuntu-1804-bionic-64-minimal systemd[1]: Starting MergerFS Mount...\nOct 13 17:00:11 Ubuntu-1804-bionic-64-minimal systemd[1]: Started MergerFS Mount.\n-- Reboot --\nNov 02 06:42:54 Ubuntu-1804-bionic-64-minimal systemd[1]: Stopping MergerFS Mount...\nNov 02 06:42:56 Ubuntu-1804-bionic-64-minimal systemd[1]: Stopped MergerFS Mount.\nNov 02 06:43:06 Ubuntu-1804-bionic-64-minimal systemd[1]: Starting MergerFS Mount...\nNov 02 06:43:06 Ubuntu-1804-bionic-64-minimal systemd[1]: Started MergerFS Mount.\nNov 02 06:44:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Stopping MergerFS Mount...\nNov 02 06:44:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Stopped MergerFS Mount.\n-- Reboot --\nNov 02 06:45:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Starting MergerFS Mount...\nNov 02 06:45:24 Ubuntu-1804-bionic-64-minimal systemd[1]: Started MergerFS Mount.\n</code></pre> <p>If everything looks good, you can check the contents of the filesystem:</p> <pre><code>\u279c  ~ ls -al /mnt/unionfs/Media\ntotal 0\ndrwxrwxr-x 1 seed seed   120 Sep 28 18:32 .\ndrwxrwxr-x 1 seed seed    62 Sep 28 18:31 ..\ndrwxrwxr-x 1 seed seed   338 Oct 18 20:21 Music\ndrwxrwxr-x 1 seed seed    78 May  3  2019 Movies\ndrwxrwxr-x 1 seed seed 28196 Nov  2 01:42 TV\n\u279c  ~\n</code></pre> <p>Again, this should match all the file listings you\u2019ve looked at so far, at least.</p> <p>There may be some extra folders here depending on a variety of things; other mounts that are included in the mergerfs and so forth.  Probably not, given my assumption that you are using the default configuration.</p> <p>Do not continue until those two file listings match.  They won\u2019t match mine; they should both show the same files from YOUR gdrive.</p> <p>So at this point we know that all the layers on the host are working, so the last step is to check the views inside the containers.</p>","title":"Mergerfs service"},{"location":"community/guides/chazguides/no-media/#docker-volume-maps","text":"<p>All the docker containers that need to access your media files have the relevant directories mapped inside them.  You can have a look at specifically how with the docker inspect command:</p> <pre><code>\u279c  ~ docker inspect plex | head -n 90\n[\n    {\n        \"Id\": \"070d5fc16d4372156c39a6cf2923e6edb2e8576817cbcf9b6432f88f2237a2e8\",\n        \"Created\": \"2019-10-16T19:45:29.93111423Z\",\n        \"Path\": \"/init\",\n        \"Args\": [],\n        \"State\": {\n            \"Status\": \"running\",\n...\n        \"HostConfig\": {\n            \"Binds\": [\n                \"/mnt/unionfs/Media:/data:rw\",\n                \"/tmp:/tmp:rw\",\n                \"/mnt/local/transcodes/plex:/transcode:rw\",\n                \"/opt/plex:/config:rw\",\n                \"/mnt:/mnt:rw\",\n                \"/opt/scripts:/scripts:rw\",\n                \"/dev/shm:/dev/shm:rw\"\n            ],\n...\n\u279c  ~\n</code></pre> <p>I\u2019ve trimmed some stuff out there particularly on the top].  If the \u201cBinds\u201d section isn\u2019t visible, try scrolling up, or increase the \u201c90\u201d to display more lines.  It should be right around the same place as mine, though.</p> <p>Take a look at the \u201c<code>Binds</code>\u201d section.  Each entry there shows a path on the host [on the left] and the location where those files appear inside the container.</p>","title":"Docker volume maps"},{"location":"community/guides/chazguides/no-media/#media-related-defaults","text":"Container/Application INSIDE CONTAINER ON HOST     sonarr <code>/tv</code> <code>/mnt/unionfs/Media/TV</code>   radarr <code>/movies</code> <code>/mnt/unionfs/Media/Movies</code>   lidarr <code>/music</code> <code>/mnt/unionfs/Media/Music</code>   plex <code>/data</code> <code>/mnt/unionfs/Media</code>    <p>For example, that plex line shows that <code>/mnt/unionfs/Media</code> appears inside the container at <code>/data</code>.  Let\u2019s check that:</p> <pre><code>\u279c  ~ docker exec plex ls -al /data\ntotal 4\ndrwxrwxr-x 1 plex plex   120 Sep 28 18:32 .\ndrwxr-xr-x 1 root root  4096 Oct 16 22:45 ..\ndrwxrwxr-x 1 plex plex   338 Oct 18 20:21 Music\ndrwxrwxr-x 1 plex plex    78 May  3  2019 Movies\ndrwxrwxr-x 1 plex plex 28196 Nov  2 01:42 TV\n</code></pre> <p>Again, all the same files as always.</p> <p>If that doesn\u2019t show your files as expected, chances are something happened to the mounts while the container was running and the map has broken.  First restart the container and if that doesn\u2019t work restart the server.</p> <pre><code>\u279c  ~ docker restart plex\nplex\n\u279c  ~\n</code></pre> <p>Then try the \u201c<code>docker exec plex ls -al /data</code>\u201d command again.</p> <p>You may notice above that the /mnt directory is passed through to the container, as well.  This means that, inside the container,      <code>/data</code> and <code>/mnt/unionfs/Media</code> point to the very same location, so these two directory listings should look the same:</p> <p><pre><code>\u279c  ~ docker exec plex ls -al /data\n...\ndrwxrwxr-x 1 plex plex   338 Oct 18 20:21 Music\ndrwxrwxr-x 1 plex plex    78 May  3  2019 Movies\ndrwxrwxr-x 1 plex plex 28196 Nov  2 01:42 TV\n</code></pre> <pre><code>\u279c  ~ docker exec plex ls -al /mnt/unionfs/Media\ntotal 4\n...\ndrwxrwxr-x 1 plex plex   338 Oct 18 20:21 Music\ndrwxrwxr-x 1 plex plex    78 May  3  2019 Movies\ndrwxrwxr-x 1 plex plex 28196 Nov  2 01:42 TV\n</code></pre></p> <p>On my own servers, I typically don\u2019t use the \u201c<code>/data</code>\u201d style mounts.  Since the <code>/mnt</code> directory is mapped into all the containers that use it, I point Radarr, Sonarr, Plex, etc.  all at <code>/mnt/unionfs/Media/BLAH</code> directly.  I do this so that I never have to translate any paths in things like Plex AutoScan.  A given movie file is at <code>/mnt/unionfs/Media/Movies/Whatever (2019)</code> no matter the context.</p> <p>Some common problems are:</p> <p><code>/mnt/unionfs</code> not empty when the mergerfs service starts.</p> <p>The log in that case will look something like this:</p> <pre><code>ubuntu systemd[1]: Starting MergerFS Mount...\nUbuntu mergerfs[10803]: fuse: mountpoint is not empty\nubuntu mergerfs[10803]: fuse: if you are sure this is safe, use the 'nonempty' mount option\nubuntu systemd[1]: mergerfs.service: Control process exited, code=exited status=1\nubuntu systemd[1]: mergerfs.service: Failed with result 'exit-code'.\nubuntu systemd[1]: Failed to start MergerFS Mount.\n</code></pre> <p>If you see this, rerunning the mounts tag, with or without rebuild, actually checks for non empty paths left there as part of a previous failure, and moves the folder to <code>/mnt/unionfs_&lt;date&gt;</code> before mounting again.</p> <pre><code>cd ~/cloudbox &amp;&amp; sudo ansible-playbook cloudbox.yml --tags mounts\n</code></pre> <p>If this is the result of something writing into that directory while the mergerfs service was down, the mounts tag won\u2019t address it.  You\u2019ll have to clean out <code>/mnt/unionfs</code> yourself first.</p>","title":"Media-related defaults:"},{"location":"community/guides/chazguides/no-media/#how-do-i-know-if-i-am-using-rclone_vfs-and-mergerfs","text":"<p>There are a few things you can look at:</p> <p>If you installed recently, rclone_vfs and mergerfs have become the default, so you\u2019re probably using them.  If you installed over a year ago, you\u2019re probably using plexdrive/unionfs.</p> <p>In the following examples, you\u2019re typing the part in blue and looking for the part highlighted in orange.</p> <p>Look at the settings file:</p> <pre><code>\u279c  cloudbox git:(master) head adv_settings.yml\n---\nSystem:\n  timezone: auto\nMounts:\n  unionfs: mergerfs     &lt;&lt;&lt;&lt; RIGHT\n  remote: rclone_vfs    &lt;&lt;&lt;&lt; HERE\nPlex:\n  open_port: no\n  force_auto_adjust_quality: no\n  force_high_output_bitrates: no\n\u279c  cloudbox git:(master)\n</code></pre> <p>Check the status of the services <pre><code>\u279c  cloudbox git:(master) service rclone_vfs status\n\u25cf rclone_vfs.service - Rclone VFS Mount\n   Loaded: loaded (/etc/systemd/system/rclone_vfs.service; enabled; vendor preset: enabled)\n   Active: active (running) since Sun 2019-06-16 22:41:58 EEST; 1 day 18h ago\n\u2026\n\n\u279c  cloudbox git:(master) service mergerfs status\n\u25cf mergerfs.service - MergerFS Mount\n   Loaded: loaded (/etc/systemd/system/mergerfs.service; enabled; vendor preset: enabled)\n   Active: active (running) since Sun 2019-06-16 22:41:48 EEST; 1 day 18h ago\n\u2026\n</code></pre></p> <p>If you\u2019re not using either rclone_vfs or mergerfs you\u2019ll see errors there instead.</p> <p>Check the filesystem behind the mounts:</p> <pre><code>\u279c  cloudbox git:(master) sudo mount | egrep \"remote\"\nlocal:remote on /mnt/unionfs type fuse.mergerfs \u2026  &lt;&lt;&lt;&lt; Mergerfs\ngoogle: on /mnt/remote type fuse.rclone \u2026          &lt;&lt;&lt;&lt; RClone\n\u279c  cloudbox git:(master)\n</code></pre>","title":"HOW DO I KNOW IF I AM USING RCLONE_VFS AND MERGERFS?"},{"location":"community/guides/chazguides/pas-map/","text":"<p>Plex Autoscan Mappings; how do they work?</p>","title":"Plex Autoscan Mappings; how do they work?"},{"location":"community/guides/chazguides/server/","text":"<p>Yes.</p> <p>Wait, no.</p> <p>Um, maybe.  Try it and see.</p> <p>The answer to this question depends on a whole bunch of things, including but not limited to:</p> <ul> <li>CPU</li> <li>Memory</li> <li>Storage type</li> <li>Format of media</li> <li>Location of server</li> <li>Location of clients</li> <li>Type of clients</li> <li>Number of simultaneous streams</li> <li>Transcoding or not</li> <li>Expectations of clients</li> <li>Random nonsense</li> </ul>","title":"Can I run Saltbox on this server?"},{"location":"community/guides/chazguides/server/#server-hardware","text":"<p>For example, at time of writing the author had a Hetzner EX42-NVME in Helsinki.  Nearly all users were in the Minneapolis area on Comcast cable.  One user in Utah, one in Brisbane, Australia.  No 4K media.  The box was an AIO; usenet downloading happened on that box as well as streaming and no throttles were in place to slow NZBget or Cloudplow while Plex was streaming.</p> <p>For the most part, this box met requirements during its tenure.  All author's streaming happened over a 1G fiber line to an AppleTV.  Most other active streamers used Plex Web, Roku, or a Smart TV Plex app.  The guy in Brisbane had trouble streaming due to his local ISP [Telstra], but streaming worked great from a Gold Coast hotel.</p> <p>However, another fellow, who lives blocks away from the author, got one of these same servers and found it unusable for his target usage.  Maybe that was a config issue [didn't seem to be], but it illustrates that there is no \"one-size-fits-all\" answer.</p> <p>Ultimately, there\u2019s not really a sure way to answer this question.</p> <p>Plex\u2019 article on the topic is here.</p>","title":"Server Hardware"},{"location":"community/guides/chazguides/server/#plex-metadata","text":"<p>Plex saves metadata [posters, etc] for all your media; that gets stored in <code>/opt/plex</code> and as your library grows so does that directory.  Required disk space therefore grows over time.  This directory can be quite large.</p> <p>For example:</p> <p>Here Plex has 9640 movies and 137140 TV episodes.  Radarr is tracking 11608 movies and Sonarr 3070 series.</p> <pre><code>ncdu 1.14.1 ~ Use the arrow keys to navigate, press ? for help\n--- /opt -------------------------------------------------------\n   78.3 GiB [##########] /plex\n   10.0 GiB [#         ] /radarr\n    4.2 GiB [          ] /sonarr\n</code></pre> <p>Here Plex has a lot more than that.</p> <pre><code>ncdu 1.12 ~ Use the arrow keys to navigate, press ? for help\n--- /opt -------------------------------------------------------\n  274.5 GiB [##########] /plex\n   23.2 GiB [          ] /cj1\n    7.4 GiB [          ] /tautulli\n</code></pre>","title":"Plex Metadata:"},{"location":"community/guides/chazguides/server/#plex-transcoding","text":"<p>Ideally, all your clients would Direct Play everything; in that case the server is just shoveling bits out as fast as it can and you don\u2019t need any CPU power.  In practice, some transcoding will be happening.</p> <p>There are two types of transcoding; hardware or software.  Software transcoding is CPU intensive, but higher-quality.  Hardware transcoding doesn\u2019t burden your CPU [so it\u2019s free to continue extracting rar files or something], but it\u2019s typically lower quality.  Depending on the specific CPU, dramatically lower quality.</p> <p>Some Intel CPUs support hardware transcoding, a smaller subset of AMD processors support hardware transcoding, so if you want hardware transcoding you probably want Intel [assuming you\u2019re not using a separate GPU on a video card to do it].</p> <p>But that\u2019s just Plex.</p>","title":"Plex transcoding:"},{"location":"community/guides/chazguides/server/#context-acquisition","text":"<p>You\u2019re looking to run Saltbox, so chances are you\u2019re downloading via Usenet or torrents, so there are other concerns.</p>","title":"Context Acquisition:"},{"location":"community/guides/chazguides/server/#usenet","text":"<p>Usenet is all about speed of disk access as things are unrar\u2019ed.  An SSD should be considered required, and NVME highly recommended.  In practical terms, you should have at least 300GB of space available for downloading and extracting.  That\u2019s a general idea; sure you can make do with less, but it may be tight.  The author's first cloud server had a 160GB disk, and it was very tight.</p>","title":"Usenet:"},{"location":"community/guides/chazguides/server/#torrents","text":"<p>If you\u2019re downloading torrents from private servers, you probably need to seed things for some minimal amount of time; so multiple TBs of disk space are a plus.</p>","title":"Torrents:"},{"location":"community/guides/chazguides/server/#client-peering-to-the-server","text":"<p>Depending on where you are in the world, peering to cloud servers will be different.  If you\u2019re in the US, Hetzner\u2019s German data centers are typically pretty good, but YMMV.</p> <p>If you want a server in the US for that reason, it will probably be more expensive.</p> <p>And so on.</p> <p>So, the only way to answer this question is:</p> <p>Maybe; try it and see.</p> <p>The other way this question is posed is:</p>","title":"Client Peering to the Server:"},{"location":"community/guides/chazguides/server/#what-is-the-cheapest-vps-or-dedi-on-which-i-can-run-saltbox","text":"<p>That question cannot be answered in any meaningful sense other than the requirements laid out in the docs.</p> <p>Saltbox itself and the apps it installs do not have particularly great hardware requirements to run.  Some docker containers, a couple services.  You can install Saltbox on a tiny little Digital Ocean instance or the like.</p> <p>The apps obviously have higher requirements if you want them to actually do anything, so whether a given box will work for you is entirely down to what you\u2019re going to do with it.</p> <p>Refer to the previous section.</p> <p>Again, the only way to answer this question is:</p> <p>Maybe; try it and see.</p>","title":"What is the cheapest VPS or dedi on which I can run saltbox?"},{"location":"community/guides/chazguides/success/","text":"<p>Did my Cloudbox install succeed?</p>","title":"Did my Saltbox install succeed?"},{"location":"community/guides/chazguides/teamdrive/","text":"<p>How do I mount a teamdrive?</p>","title":"How do I mount a teamdrive?"},{"location":"community/guides/chazguides/tip44/","text":"<p>Tip 44: UNSUPPORTED Shared Drive/Service Account setup for Cloudbox</p>","title":"Tip 44 Guide to Shared Drive/Service Account setup for Saltbox"},{"location":"faq/Backup%20and%20Restore/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Backup and Restore"},{"location":"faq/Backup%20and%20Restore/#what-is-backed-up","text":"<p>Only app data located in <code>/opt</code> and relevant config files (as listed below) are backed up.  The backup script does this by creating tarball files (.tar) for each folder in <code>/opt</code>/ and placing them into your backup folder (as set in <code>backup_config.yml</code>). The folders in <code>/opt</code> are all* backed up without regard for whether Saltbox created them in the first place.  For example, if you create <code>/opt/bingbangboing</code> it will be backed up and restored by Saltbox.</p> <p>If you have set it up, the community repo is located in <code>/opt</code>, so it will get backed up [this includes any changes you've made in that repo to the config or roles].  There is no catalog kept of what community roles you may have run, so none of the roles themselves will be run automatically on restore, but the data will be backed up and restored.</p> <p>Service files from <code>/etc/systemd/system</code> are synced to <code>/opt/systemd-backup</code> as part of the backup, so they are included in the tarball creation.  This includes things like the <code>rclone_vfs</code>, <code>mergerfs</code>, <code>cloudplow</code>, <code>plex_autoscan</code>, and other system service files.  If you have added additional mounts and the like via your own service files [perhaps with tip #44 or <code>samount</code> or the like], these extra service files will be backed up, but will not be automatically restored.</p> <p>Torrent seeding content, NZBGet queue, anything in <code>/mnt/</code>, <code>/home/</code>, or anywhere else other than the <code>/opt/</code> folder, will NOT be backed up (media files are moved to the cloud via Cloudplow, anyway). If you do want to backup your seeding data, check out the scripts located in <code>/opt/scripts/rclone/</code> folder.</p> <p>If Rclone/Rsync are enabled, the backup will be uploaded to a remote destination. </p> <p>If <code>keep_local_copy</code> is enabled, the backup will remain locally in the backup folder; If NOT, the backup will be deleted. If you decide to disable Rclone/Sync, then at least have <code>keep_local_copy</code> enabled, or else the backup will be created and then deleted right after. </p> <p>The config files that are backed up are: </p> <ul> <li> <p><code>ansible.cfg</code></p> </li> <li> <p><code>accounts.yml</code></p> </li> <li> <p><code>settings.yml</code></p> </li> <li> <p><code>adv_settings.yml</code></p> </li> <li> <p><code>rclone.conf</code></p> </li> <li> <p><code>backup_excludes.txt</code> (if one exists in the <code>saltbox</code> folder).</p> </li> </ul> <p>These files are kept separately from the backup tarball files to allow for easy access.</p> <p>Note that the <code>.ansible_vault</code> file is NOT backed up.</p> <p>Nice table to see what is restored during simple backup/restore:</p>    <pre>                         </pre> Items Backed UP <pre>     </pre> Backed Up From <pre>     </pre> Restored To     Application Data <code>/opt/</code> <code>/opt/</code>   Ansible Config <code>/srv/git/saltbox/ansible.cfg</code>    Account Settings <code>/srv/git/saltbox/accounts.yml</code>    Saltbox Settings <code>/srv/git/saltbox/settings.yml</code>    Saltbox Advanced Settings <code>/srv/git/saltbox/adv_settings.yml</code>    Backup Excludes List (custom) <code>/srv/git/saltbox/backup_excludes_list.txt</code> <code>~/saltbox/backup_excludes_list.txt</code>   Rclone Config <code>~/.config/rclone/rclone.conf</code> <code>~/.config/rclone/rclone.conf</code>","title":"What is backed up?"},{"location":"faq/Backup%20and%20Restore/#what-is-cloudbox-restore-service","text":"<p>An optional service that allows for easy backing up and restoring of CLIENT-SIDE ENCRYPTED config files.</p> <p>The config files that are backed up are: </p> <ul> <li> <p><code>ansible.cfg</code></p> </li> <li> <p><code>accounts.yml</code></p> </li> <li> <p><code>settings.yml</code></p> </li> <li> <p><code>adv_settings.yml</code></p> </li> <li> <p><code>backup_config.yml</code></p> </li> <li> <p><code>rclone.conf</code></p> </li> </ul> <p>These files are the ones needed to run a successful restore. </p> <p>Note: <code>backup_excludes_list.txt</code> are not backed up into the Restore Service, simply because it is not important for a restore to work and also because it IS automatically restored during the restore process itself.</p> <p>How does this work?</p> <ol> <li> <p>User fills in a username and password for Restore Service in the [[backup config |Saltbox-Backup-and-Restore-Settings]]. </p> </li> <li> <p>During backup, config files are encrypted on the client-side, using a salt-hashed version of the username and password (your raw username is never sent to the Restore Service), and then uploaded to the Restore Service.</p> </li> <li> <p>When a user needs to restore their backup on a new box, they can pull their backed up config files from the Restore Service with a single command.</p> </li> </ol> <p>The source code for the Restore Service Scripts are listed below: - https://github.com/saltyorg/Saltbox/blob/master/roles/backup/tasks/restore_service.yml (Backup Script) - https://github.com/saltyorg/scripts/blob/master/restore.sh (Restore Script)</p>","title":"What is Cloudbox Restore Service?"},{"location":"faq/Cloud%20Storage/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Cloud Storage"},{"location":"faq/Cloud%20Storage/#does-saltbox-support-encrypted-data-on-the-cloud","text":"<p>In short, no. Saltbox does not come with encryption support out-of-box.</p>","title":"Does Saltbox support encrypted data on the cloud?"},{"location":"faq/Cloud%20Storage/#why-does-saltbox-not-support-encryption-data-on-the-cloud","text":"<p>While there are pro's and cons for using either encrypted or unencrypted data on cloud services, we've decided to not deal with encryption for the out of box setup.</p> <p>However, since Saltbox uses Rclone VFS to mount cloud data, you can tweak the mounts and remotes to do this yourself. But doing so comes with no support/help from us. </p>","title":"Why does Saltbox not support encryption data on the cloud?"},{"location":"faq/Cloud%20Storage/#dont-see-your-remote-files-in-mntremote","text":"<p>See here</p>","title":"Don't see your remote files in /mnt/remote?"},{"location":"faq/Cloudflare/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"CloudFlare"},{"location":"faq/Cloudflare/#api-request-not-authenticated","text":"<p>If you get this error during SB Install:</p> <pre><code>fatal: [localhost]: FAILED! =&gt; {\"changed\": false, \"msg\": \"API request not authenticated; Status: 403; Method: GET: Call: /zones?name=; Error details: code: 9103, error: Unknown X-Auth-Key or X-Auth-Email; \"}\n</code></pre> <p>Make sure:</p> <ul> <li> <p>The <code>email</code> in settings.yml matches the one you have listed for your Cloudflare.com account.</p> </li> <li> <p>The <code>cloudflare_api_key</code> in  settings.yml.</p> </li> </ul>","title":"API request not authenticated"},{"location":"faq/Cloudplow/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Cloudplow"},{"location":"faq/Cloudplow/#stuck-on-waiting-for-running-upload-to-finish-before-proceeding","text":"<p>If the activity log is stuck on:</p> <pre><code>2018-06-03 13:44:59,659 - INFO       - cloudplow            - do_upload                      - Waiting for running upload to finish before proceeding...\n</code></pre> <p>This means that an upload task was prematurely canceled and it left lock file(s) to prevent another upload.</p> <p>To fix this, run this command:</p> <pre><code>rm -rf /opt/cloudplow/locks/*\n</code></pre> <p>or</p> <pre><code>sudo systemctl restart cloudplow\n</code></pre>","title":"Stuck on \"Waiting for running upload to finish before proceeding...\""},{"location":"faq/Docker/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Docker"},{"location":"faq/Docker/#docker","text":"","title":"Docker"},{"location":"faq/Docker/#why-does-saltbox-use-the-docker-network-saltbox-instead-of-bridge","text":"<p>(1) keeps all Saltbox containers organized under one network; and (2), bridge network does not allow network aliases.</p>","title":"Why does Saltbox use the Docker network \"saltbox\" instead of bridge?"},{"location":"faq/Install/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Install"},{"location":"faq/Install/#ansible-tags","text":"","title":"Ansible Tags"},{"location":"faq/Install/#multiple-tags","text":"<p>Run multiple tags together by separating them with commas, no spaces. Quotes are optional. Order is not important.</p> <p>Use this to install containers or roles that are not included in \"default\" install types.  </p> <p>Example:</p> <pre><code>sb install core,emby,sonarr,radarr,nzbget,nzbhydra2\n</code></pre>","title":"Multiple Tags"},{"location":"faq/Install/#skip-tags","text":"<p>Skip tags you dont want to run by listing them with <code>--skip-tags</code> and separated by commas. Quotes are optional. Order is not important.</p> <p>Use this to skip containers or roles that are included in the \"default\" install types. </p> <p>Example:</p> <pre><code>sb install saltbox --skip-tags rutorrent,jackett\n</code></pre> <p>Note: But be careful on what you skip, as some things are needed by Saltbox to function properly.</p>","title":"Skip Tags"},{"location":"faq/Install/#merging-tags-and-skip-tags","text":"<p>You can even merge <code>--tags</code> and <code>--skip-tags</code> into one command. Order is not important (e.g. skip tags can come before tags). </p> <p>Example:</p> <pre><code>sb install core,emby,sonarr,radarr,nzbget,nzbhydra2 --skip-tags rutorrent,jackett\n</code></pre> <p>Can also be used along with one of the \"default\" tags (e.g. <code>cloudbox</code>).</p> <p>Example:</p> <pre><code>sb install cloudbox,sabnzbd --skip-tags rutorrent,jackett\n</code></pre>","title":"Merging Tags and Skip-Tags"},{"location":"faq/Install/#persistent-skip-tags","text":"<p>You can \"permanently\" skip tags by adding the following lines to <code>/srv/git/saltbox/ansible.cfg</code>.</p> <p>Format: </p> <p><pre><code>[tags]\nskip = TAG1,TAG2,etc\n</code></pre> And then continue to install with the normal <code>--tags</code> command. </p> <p>Example:</p> <pre><code>cat /srv/git/saltbox/ansible.cfg\n</code></pre> <pre><code>[tags]\nskip = rutorrent,jackett\n</code></pre> <pre><code>sb install saltbox,sabnzbd\n</code></pre> <p>In this example, the Saltbox installer will install with all the default items and sabnzbd, but will not install rutorrent and jackett.</p>","title":"Persistent Skip Tags"},{"location":"faq/Install/#error-while-fetching-server-api-version","text":"<p>Full error message:</p> <pre><code>Error Connecting:  Error while fetching server API version: Timeout value connect was Timeout(connect=60, read=60, total=None), but it must be an int or float.\n</code></pre> <p>Run <code>sudo pip install requests==2.10.0</code> and retry.</p>","title":"Error while fetching server API version"},{"location":"faq/Install/#403-client-error-forbidden-endpoint-with-name-container-name-already-exists-in-network-network-name","text":"<p>Example:</p> <pre><code>fatal: [localhost]: FAILED! =&gt; {\"changed\": false, \"failed\": true, \"msg\": \"Error starting container 6fb60d4cdabe938986042e06ef482012a1d85a66a099d861f08062d8262c2ef7: 403 Client Error: Forbidden (\\\"{\\\"message\\\":\\\"endpoint with name jackett already exists in network bridge\\\"}\\\")\"}\n    to retry, use: --limit @/home/seed/saltbox/saltbox.retry\nPLAY RECAP *********************************************************************\nlocalhost                  : ok=2    changed=1    unreachable=0    failed=1\n</code></pre> <p>You have a remnant of the container in the Docker's network.</p> <p>You can verify with the command below (replace <code>&lt;network name&gt;</code> and <code>&lt;container name&gt;</code> is replaced with the network name and container name mentioned in the error, respectively): <pre><code>docker inspect network &lt;network name&gt; | grep &lt;container name&gt;\n</code></pre></p> <p>To remove the remnant, run this command and try again:</p> <pre><code>docker network disconnect -f &lt;network name&gt; &lt;container name&gt;\n</code></pre>","title":"403 Client Error: Forbidden: endpoint with name \\&lt;container name&gt; already exists in network \\&lt;network name&gt;"},{"location":"faq/Install/#500-server-error-internal-server-error-driver-failed-programming-external-connectivity-on-endpoint-container-name-bind-for-0000port-number-failed-port-is-already-allocated","text":"<pre><code>sudo service docker stop\nsudo service docker start\n</code></pre>","title":"500 Server Error: Internal Server Error: driver failed programming external connectivity on endpoint \\&lt;container name&gt; bind for 0.0.0.0:\\&lt;port number&gt; failed: port is already allocated"},{"location":"faq/Install/#updating-saltbox","text":"<p>Follow the appropriate steps from this page</p>","title":"Updating Saltbox"},{"location":"faq/Misc/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Misc"},{"location":"faq/Misc/#backuprestore-nextclouddb","text":"<p>DB data is stored in /opt/mariadb and backed up along with Saltbox Backup.</p> <p>However, you can separately make a backup of the DB into a single <code>nextcloud_backup.sql</code> file, by running the following command.</p> <pre><code>docker exec mariadb /usr/bin/mysqldump -u root --password=password321 nextcloud  &gt; nextcloud_backup.sql\n</code></pre> <p>And restoring it back:</p> <pre><code>cat nextcloud_backup.sql | docker exec -i mariadb /usr/bin/mysql -u root --password=password321 nextcloud\n</code></pre>","title":"Backup/Restore NextcloudDB"},{"location":"faq/Misc/#json-format-errors","text":"<p>Python or script errors mentioning an issue with the config file is usually due to an invalid JSON format in the file.</p> <p>Examples:</p> <pre><code>Traceback (most recent call last):\n  File \"scan.py\", line 52, in &lt;module&gt;\n    conf.load()\n  File \"/opt/plex_autoscan/config.py\", line 157, in load\n    cfg = self.upgrade(json.load(fp))\n  File \"/usr/lib/python2.7/json/__init__.py\", line 291, in load\n    **kw)\n  File \"/usr/lib/python2.7/json/__init__.py\", line 339, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python2.7/json/decoder.py\", line 364, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python2.7/json/decoder.py\", line 380, in raw_decode\n    obj, end = self.scan_once(s, idx)\nValueError: Expecting , delimiter: line 20 column 2 (char 672)\n</code></pre> <pre><code>Traceback (most recent call last):\n  File \"/opt/plex_autoscan/scan.py\", line 52, in &lt;module&gt;\n    conf.load()\n  File \"/opt/plex_autoscan/config.py\", line 157, in load\n    cfg = self.upgrade(json.load(fp))\n  File \"/usr/lib/python2.7/json/init.py\", line 291, in load\n    **kw)\n  File \"/usr/lib/python2.7/json/init.py\", line 339, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python2.7/json/decoder.py\", line 364, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python2.7/json/decoder.py\", line 382, in raw_decode\n    raise ValueError(\"No JSON object could be decoded\")\nValueError: No JSON object could be decoded\n</code></pre> <pre><code>Traceback (most recent call last):\n  File \"/usr/local/bin/cloudplow\", line 60, in &lt;module&gt;\n    conf.load()\n  File \"/opt/cloudplow/utils/config.py\", line 227, in load\n    cfg, upgraded = self.upgrade_settings(json.load(fp))\n  File \"/usr/lib/python3.5/json/__init__.py\", line 268, in load\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n  File \"/usr/lib/python3.5/json/__init__.py\", line 319, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python3.5/json/decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python3.5/json/decoder.py\", line 355, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting ',' delimiter: line 46 column 13 (char 1354)\n</code></pre> <p>Fixes:</p> <ol> <li>Paste the JSON file at https://jsonformatter.curiousconcept.com/ and click <code>process</code>. This will tell you what the issue is and fix it for you.</li> </ol> <p>or</p> <ol> <li>Run:</li> </ol> <pre><code>jq '.' config.json\n</code></pre> <p>If there are no issues, it will simply print out the full JSON file.</p> <p>If there is an issue, a msg will display the location of the issue:</p> <pre><code>parse error: Expected separator between values at line 7, column 10\n</code></pre>","title":"JSON Format Errors"},{"location":"faq/Plex-Autoscan/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Plex-Autoscan"},{"location":"faq/Plex-Autoscan/#newly-downloaded-media-from-sonarr-and-radarr-are-not-being-added-to-plex","text":"<ul> <li> <p>Test another download and run the following command:   <pre><code> tail -f /opt/plex_autoscan/plex_autoscan.log\n</code></pre></p> </li> <li> <p>If you see this...</p> </li> </ul> <pre><code>terminate called after throwing an instance of 'boost::filesystem::filesystem_error'\nboost::filesystem::create_directories: Permission denied: \"/config/Library/Logs\"\n</code></pre> <p>There is an issue with the permissions on that folder that you'll need to fix manually (Saltbox can't fix this as Plex creates this folder after the first scan)</p> <p>To fix this, Run the following command. Replace <code>user</code> and <code>group</code> to match yours' (see here).</p> <pre><code>docker stop plex\nsudo chown -R user:group /opt/plex\ndocker start plex\n</code></pre> <p>Example of a successful scan:</p> <pre><code>2017-10-10 17:48:26,429 -    DEBUG -      PLEX [ 6185]: Waiting for turn in the scan request backlog...\n2017-10-10 17:48:26,429 -     INFO -      PLEX [ 6185]: Scan request is now being processed\n2017-10-10 17:48:26,474 -     INFO -      PLEX [ 6185]: No 'Plex Media Scanner' processes were found.\n2017-10-10 17:48:26,474 -     INFO -      PLEX [ 6185]: Starting Plex Scanner\n2017-10-10 17:48:26,475 -    DEBUG -      PLEX [ 6185]: docker exec -u plex -i plex bash -c 'export LD_LIBRARY_PATH=/usr/lib/plexmediaserver;/usr/lib/plexmediaserver/Plex\\ Media\\ Scanner --scan --refresh --section 1 --directory '\"'\"'/data/Movies/Ravenous (1999)'\"'\"''\n2017-10-10 17:48:33,712 -     INFO -     UTILS [ 6185]: GUI: Scanning Ravenous (1999)\n2017-10-10 17:48:33,959 -     INFO -     UTILS [ 6185]: GUI: Matching 'Ravenous'\n2017-10-10 17:48:38,556 -     INFO -     UTILS [ 6185]: GUI: Score for 'Ravenous' (1999) is 117\n2017-10-10 17:48:38,607 -     INFO -     UTILS [ 6185]: GUI: Requesting metadata for 'Ravenous'\n2017-10-10 17:48:38,705 -     INFO -     UTILS [ 6185]: GUI: Background media analysis on Ravenous\n2017-10-10 17:48:39,201 -     INFO -      PLEX [ 6185]: Finished scan!\n</code></pre>","title":"Newly downloaded media from Sonarr and Radarr are not being added to Plex?"},{"location":"faq/Plex-Autoscan/#plex-autoscan-log-shows-error-during-empty-trash-request","text":"<pre><code>ERROR - PLEX [10490]: Unexpected response status_code for empty trash request: 401\n</code></pre> <p>You need to generate another token and re-add that back into the config. See Plex Autoscan.</p>","title":"Plex Autoscan log shows error during empty trash request"},{"location":"faq/Plex-Autoscan/#plex-autoscan-error-with-metadata-item-id","text":"<p>Example Log: <pre><code> 2017-11-21 04:26:32,619 -    ERROR -      PLEX [ 7089]: Exception finding metadata_item_id for '/data/TV/Gotham/Season 01/Gotham - S01E01 - Pilot.mkv':\n 2017-11-21 04:26:32,619 -     INFO -      PLEX [ 7089]: Aborting analyze of '/data/TV/Gotham/Season 01/Gotham - S01E01 - Pilot.mkv' because could not find a metadata_item_id for it\n</code></pre></p> <p>Possible Issues:</p> <ul> <li> <p>One of the mounts has changed (e.g. Rclone_VFS or MergerFS was restarted).</p> </li> <li> <p>Permission issues (see [here]).</p> </li> </ul> <p>Solution 1:</p> <ol> <li>Make sure the remote mount is working OK (pick the relevant one below).</li> </ol> <p>The current default used for mounting cloud storage is Rclone VFS:</p> <pre><code>sudo systemctl status rclone_vfs\n</code></pre> <ol> <li>Make sure the union mount is working OK. </li> </ol> <p>The current default used for creating the union mount is MergerFS:</p> <pre><code>sudo systemctl status mergerfs\n</code></pre> <ol> <li>Restart Plex:    <pre><code>docker stop plex &amp;&amp; docker start plex\n</code></pre></li> </ol> <p>Solution 2:</p> <p>If all else fails, disable analyze in config.</p> <ol> <li>Open <code>/opt/plex_autoscan/config/config.json</code></li> </ol> <pre><code>nano /opt/plex_autoscan/config/config.json\n</code></pre> <ol> <li>Make the following edit:</li> </ol> <pre><code>\"PLEX_ANALYZE_TYPE\": \"off\",\n</code></pre> <ol> <li>Restart Plex Autoscan</li> </ol> <pre><code>sudo systemctl restart plex_autoscan\n</code></pre>","title":"Plex Autoscan error with metadata item id"},{"location":"faq/Plex-Autoscan/#purpose-of-a-control-file-in-plex-autoscan","text":"<p>Every time Sonarr or Radarr downloads a new file, or upgrades a previous one, a request is sent to Plex via Plex Autoscan to scan the movie folder or TV season path and look for changes. Since Sonarr and Radarr delete previous files on upgrades, the scan will cause the new media to show up in your Plex Library, however, the deleted files would be missing, and instead, marked as \"unavailable\" (i.e. trash icon). When the control file is present and the option in the Plex Autoscan config is enabled (default), Plex Autoscan will empty the trash for you, thereby, removing the deleted media from the library.</p> <p>If the remote mount for you cloud storage provider (e.g. Google Drive) ever disconnected during a Plex scan of your media, Plex would mark the missing files as unavailable and emptying the trash would cause them to be removed out of the library. To avoid this from happening, Plex Autoscan checks for a control file in the unionfs path (i.e. <code>/mnt/unionfs/mounted.bin)</code> before running any empty trash commands. The control file is just a blank file that resides on the root folder of your Rclone remote (i.e. cloud storage provider) and let's Plex Autoscan know that it is still mounted.</p> <p>Once the remote is remounted, all the files marked unavailable in Plex will be playable again and Plex Autoscan will resume its emptying trash duties post-scan.</p> <p>To learn more about Plex Autoscan, visit https://github.com/l3uddz/plex_autoscan.</p> <p>TLDR: Plex Autoscan will not remove deleted media out of Plex without it.</p>","title":"Purpose of a Control File in Plex Autoscan"},{"location":"faq/Plex-Autoscan/#plex-autoscan-localhost-setup","text":"<p>If you are using an all-in-one Saltbox and don't want to have the Plex Autoscan port open, you may set it up so that it runs on the localhost only.</p> <p>To do so, follow these steps:</p> <p>Option 1</p> <p>Plex Autoscan: (only if changed from default)</p> <ol> <li>Open <code>/opt/plex_autoscan/config/config.json</code></li> </ol> <pre><code>nano /opt/plex_autoscan/config/config.json\n</code></pre> <ol> <li>Make the following edit:</li> </ol> <pre><code>\"SERVER_IP\": \"0.0.0.0\",\n</code></pre> <p>Note: This is the default config.</p> <ol> <li>Restart Plex Autoscan</li> </ol> <pre><code>sudo systemctl restart plex_autoscan\n</code></pre> <p>Sonarr/Radarr:</p> <ul> <li>Retrieve the 'Docker Gateway IP Address' by running the following:</li> </ul> <pre><code>docker inspect -f '{{ .NetworkSettings.Networks.saltbox.Gateway }}' sonarr\n</code></pre> <ul> <li>Replace the Plex Autoscan URL with:</li> </ul> <pre><code>http://docker_gateway_ip_address:3468/yourserverpass\n</code></pre> <ul> <li>You Plex Autoscan URL will now look like this:</li> </ul> <pre><code>http://172.18.0.1:3468/yourserverpass\n</code></pre> <p>Option 2</p> <p>Alternatively, you can set it up this way:</p> <p>Note: This method benefits from completely closing off Plex Autoscan to the outside.</p> <p>Plex Autoscan:</p> <ol> <li>Retrieve the 'Docker Gateway IP Address' by running the following:</li> </ol> <pre><code>docker inspect -f '{{ .NetworkSettings.Networks.saltbox.Gateway }}' sonarr\n</code></pre> <ol> <li>Open <code>/opt/plex_autoscan/config/config.json</code></li> </ol> <pre><code>nano /opt/plex_autoscan/config/config.json\n</code></pre> <ol> <li>Make the following edit:</li> </ol> <pre><code>\"SERVER_IP\": \"docker_network_gateway_ip_address\",\n</code></pre> <ol> <li>This will now look like this:</li> </ol> <pre><code>\"SERVER_IP\": \"172.18.0.1\",\n</code></pre> <ol> <li>Restart Plex Autoscan</li> </ol> <pre><code>sudo systemctl restart plex_autoscan\n</code></pre> <p>Sonarr/Radarr:</p> <ul> <li>Replace the Plex Autoscan URL with:</li> </ul> <pre><code>http://docker_gateway_ip_address:3468/yourserverpass\n</code></pre> <ul> <li>You Plex Autoscan URL will now look like this:</li> </ul> <pre><code>http://172.18.0.1:3468/yourserverpass\n</code></pre>","title":"Plex Autoscan Localhost Setup"},{"location":"faq/Plex-Autoscan/#why-is-server_scan_delay-set-to-180-seconds-by-default","text":"<p>When Plex Autoscan gets a scan request from Sonarr, it tells Plex to scan the relevant TV Show season folder. So to avoid multiple Plex scans of the same season when more episodes of that same season come in, Plex Autoscan can wait (ala SERVER_SCAN_DELAY) and merge multiple scan requests into a single one. This is particularly noticeable when consecutive episodes are being downloaded/imported into Sonarr. </p> <p>During this SERVER_SCAN_DELAY, if another request comes in for the same season folder, it will restart the delay timer again, thus allowing for even more time for new items to come in. </p> <p>SERVER_SCAN_DELAY of 180 seconds was calculated with an average episode download time of a few minutes each. </p> <p>There is no harm in multiple Plex scans of the same season folder, except for more busyness of Plex, and perhaps more stress to it, so this delay will try to alleviate that. </p> <p>Alternative recommended settings are: 120 and 90 seconds. </p>","title":"Why is SERVER_SCAN_DELAY set to 180 seconds by default?"},{"location":"faq/Plex/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Plex"},{"location":"faq/Plex/#if-you-are-unable-to-find-your-plex-server","text":"<p>You may resolve this by either</p> <ul> <li> <p>Installing Saltbox again (do this for new Plex DBs/installs):</p> </li> <li> <p>THIS WILL DELETE ANY EXISTING PLEX CONFIGURATION SUCH AS LIBRARIES</p> </li> <li> <p>Remove Plex Container (it may show \"Error response from daemon: No such container\" if not created yet):</p> <pre><code>sudo docker rm -f plex\n</code></pre> </li> <li> <p>Remove the Plex folder:</p> <pre><code>sudo rm -rf /opt/plex\n</code></pre> </li> <li> <p>Reinstall the Plex container:</p> <pre><code>sb install plex\n</code></pre> </li> <li> <p>Installing Saltbox again (do this for existing Plex DBs/installs):</p> </li> <li> <p>THIS WILL LEAVE ANY EXISTING PLEX LIBRARIES AND METADATA INTACT</p> </li> <li> <p>Remove Plex Preferences file. </p> <pre><code>sudo rm \"/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml\"\n</code></pre> </li> <li> <p>Reinstall the Plex container by running the following command:</p> <pre><code>sb install plex\n</code></pre> </li> <li> <p>Using SSH Tunneling to log into Plex and set your credentials:</p> </li> <li> <p>On your host PC (replace <code>&lt;user&gt;</code> with your user name and <code>&lt;yourserveripaddress&gt;</code> with your serveripaddress - no arrows):</p> <pre><code>ssh &lt;user&gt;@&lt;yourserveripaddress&gt; -L 32400:0.0.0.0:32400 -N\n</code></pre> <p>This will just hang there without any message. That is normal.</p> </li> <li> <p>In a browser, go to http://localhost:32400/web.</p> </li> <li> <p>Log in with your Plex account.</p> </li> <li> <p>On the \"How Plex Works\" page, click \u201cGOT IT!\u201d.</p> </li> <li> <p>Close the \"Plex Pass\" pop-up if you see it.</p> </li> <li> <p>Under \"Server Setup\", you will see \"Great, we found a server!\". Give your server a name and tick \u201cAllow me to access my media outside my home\u201d. Click \"NEXT\".</p> </li> <li> <p>On \"Organize Your Media\", hit \"NEXT\" (you will do this later). Then hit \"DONE\".</p> </li> <li> <p>At this point, you may <code>Ctrl + c</code> on the SSH Tunnel to close it.</p> </li> </ul> <p>If Plex shows you an incorrect title with the filename (eg RARBG releases)</p> <p>Reorder the Plex agents for TV/Movies so that local assets are at the bottom.</p>","title":"If you are unable to find your Plex server"},{"location":"faq/Plex/#fix-permission-issues-with-plex-logs","text":"<p>Replace <code>user</code> and <code>group</code> to match yours' (see here).</p> <pre><code>sudo chown -R user:group /opt/plex/Library/Logs\nsudo chmod -R g+s /opt/plex/Library/Logs\n</code></pre> <p>Note: If you have a separate Plex and Feeder setup, this will be done on the server where Plex is installed.</p>","title":"Fix permission issues with Plex logs"},{"location":"faq/Rclone/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"Rclone"},{"location":"faq/Rclone/#rclone-error-failed-to-save-config-file-open-homeuserconfigrclonercloneconf-permission-denied","text":"<p>Replace <code>user</code> and <code>group</code> to match yours' (see here).</p> <pre><code>sudo chown -R user:group ~/.config/rclone/\nsudo chmod -R 0755 ~/.config/rclone/\n</code></pre>","title":"Rclone error: Failed to save config file: open /home/\\&lt;user&gt;/.config/rclone/rclone.conf: permission denied"},{"location":"faq/System/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"System"},{"location":"faq/System/#system","text":"","title":"System"},{"location":"faq/System/#can-i-install-this-on-an-arm-machine","text":"<p>ARM is not supported.</p>","title":"Can I install this on an ARM machine?"},{"location":"faq/System/#if-you-are-using-a-scaleway-server","text":"<ol> <li> <p>Choose an X86 server (vs ARM).</p> </li> <li> <p>Select \"Ubuntu Xenial\" as the distribution.</p> </li> <li> <p>Click the server on the list.</p> </li> <li> <p>Under \"ADVANCED OPTIONS\", click \"SHOW\".</p> </li> <li> <p>Set \"ENABLE LOCAL BOOT\" to <code>off</code>.</p> </li> </ol> <p></p> <ol> <li>Click the \"BOOTSCRIPT\" link and select one above &gt; 4.10.</li> </ol> <p></p> <ol> <li>Start the server.</li> </ol> <p>Reference: https://www.scaleway.com/docs/bootscript-and-how-to-use-it/</p>","title":"If you are using a Scaleway server..."},{"location":"faq/System/#if-you-are-using-an-ovh-server","text":"<p>If you are having issues upgrading the kernel on ovh, where the kernel upgrade is not taking effect..</p> <p><code>uname -r</code> to see if you have <code>grs</code> in kernel version string...</p> <p>if so, see https://pterodactyl-daemon.readme.io/v0.4/docs/updating-ovh-kernel on how to update the kernel.</p>","title":"If you are using an OVH server..."},{"location":"faq/System/#find-your-user-id-uid-and-group-id-gid","text":"<p>Use the following commands to find out your account's user name and group info:</p> <p><pre><code>id\n</code></pre> or</p> <p><pre><code>id `whoami`\n</code></pre> You'll see a line like the following:</p> <pre><code>uid=XXXX(yourusername) gid=XXXX(yourgroup) groups=XXXX(yourgroup)\n</code></pre>","title":"Find your User ID (UID) and Group ID (GID)"},{"location":"faq/System/#how-to-create-a-user-account","text":"<ul> <li>Run the following commands line by line:</li> </ul> <pre><code>sudo useradd -m &lt;username&gt;\nsudo usermod -aG sudo &lt;username&gt;\nsudo passwd &lt;username&gt;\nsudo chsh -s /bin/bash &lt;username&gt;\nsu &lt;username&gt;\n</code></pre>","title":"How to create a user account"},{"location":"faq/System/#change-shell-of-user-account-to-bash","text":"<p>How to check current shell:</p> <pre><code>echo $0\n-sh\n</code></pre> <p>or</p> <pre><code>echo ${SHELL}\n/bin/sh\n</code></pre> <p>Run this command to set bash as your shell (where <code>&lt;user&gt;</code> is replaced with your username):</p> <pre><code>sudo chsh -s /bin/bash &lt;user&gt;\nsudo reboot\n</code></pre>","title":"Change shell of user account to bash"},{"location":"faq/System/#how-to-fix-permission-issues","text":"<p>/opt folder</p> <ol> <li>Stop all docker containers</li> </ol> <pre><code>docker stop $(docker ps -a -q)\n</code></pre> <ol> <li>Change ownership of /opt. Replace <code>user</code> and <code>group</code> to match yours' (see here).</li> </ol> <pre><code>sudo chown -R user:group /opt\n</code></pre> <ol> <li>Change permission inheritance of /opt.</li> </ol> <pre><code>sudo chmod -R ugo+X /opt\n</code></pre> <ol> <li>Start all docker containers</li> </ol> <pre><code>docker start $(docker ps -a -q)\n</code></pre> <p>/mnt folder</p> <ol> <li>Run the <code>mounts</code> tag</li> </ol> <pre><code>sb install mounts\n</code></pre>","title":"How to fix permission issues"},{"location":"faq/ruTorrent/","text":"<p>IT IS QUITE PROBABLE THAT SOME INFORMATION HERE IS OUTDATED</p> <p>PLEASE OPEN ISSUES</p>","title":"ruTorrent"},{"location":"faq/ruTorrent/#change-rutorrent-download-path-after-installation","text":"<ol> <li>Stop ruTorrent Docker container:</li> </ol> <pre><code>docker stop rutorrent\n</code></pre> <ol> <li>Edit the <code>rtorrent.rc</code> file:</li> </ol> <pre><code>/opt/rutorrent/rtorrent/rtorrent.rc\n</code></pre> <ol> <li>Set the following options:</li> </ol> <pre><code>directory = /downloads/rutorrent\n</code></pre> <ol> <li>Start ruTorrent Docker container:</li> </ol> <pre><code>docker restart rutorrent\n</code></pre>","title":"Change ruTorrent download path after installation"},{"location":"faq/ruTorrent/#enable-access-to-public-torrent-trackers","text":"<p>By default access to DHT, UDP, and PEX are disabled since most private trackers (and some server providers) do not allow this. Attempting to add a torrent from a public tracker would result in the torrent being stuck, like this:</p> <p></p> <p>To enable access to public trackers, do the following:</p> <ol> <li>Stop ruTorrent Docker container:</li> </ol> <pre><code>docker stop rutorrent\n</code></pre> <ol> <li>Edit the <code>rtorrent.rc</code> file:</li> </ol> <pre><code>/opt/rutorrent/rtorrent/rtorrent.rc\n</code></pre> <ol> <li>Set the following options:</li> </ol> <pre><code>dht.mode.set = on\n</code></pre> <pre><code>trackers.use_udp.set = yes\n</code></pre> <pre><code>protocol.pex.set = yes\n</code></pre> <ol> <li>Start ruTorrent Docker container:</li> </ol> <pre><code>docker start rutorrent\n</code></pre>","title":"Enable access to public torrent trackers"},{"location":"reference/accounts/","text":"","title":"Accounts and Settings"},{"location":"reference/accounts/#options-in-accountsyml","text":"<ul> <li> <p><code>user</code>: User information.</p> <ul> <li> <p><code>name</code>: User name for the server. </p> <ul> <li>If user account with this name does not already exist, it will be created during install. </li> <li>Also used to create first-time logins for NZBGet, ruTorrent, NZBHydra2, and potentially other apps.</li> <li>Default is <code>seed</code>. </li> <li>This parameter is required.</li> </ul> </li> <li> <p><code>pass</code>: Password for the user account and for misc apps.</p> <ul> <li>Sets password for the server's user account when creating a new account. This will not change the password of an existing account. </li> <li>Also used to create first-time logins for NZBGet, ruTorrent, NZBHydra2, and potentially other apps.</li> <li>This parameter is required.</li> <li> <p>Don't leave it blank. Even if you are planning to use SSH keys to connect to your box.  This user and password are used to set up authentication for some applications in this repo and Community, and a blank password may cause trouble there.</p> </li> <li> <p>Relevant XKCD</p> </li> <li> <p>This is a YAML file, and values you can enter here are subject to YAML file format rules.  If you use special characters in your password, wrap the password in quotes [or escape the characters correctly, if you are familiar with that concept].  It would be easiest to avoid using quote characters themselves within your password.</p> </li> <li> <p>For example:</p> <ul> <li><code>pass: MyP4s5w0rd1s4w350m3</code></li> <li><code>pass: \"!@#$%^&amp;*\"</code></li> <li><code>pass: multiple words work fine unquoted</code></li> <li><code>pass: \"or quote them to be safe\"</code></li> </ul> </li> </ul> </li> <li> <p><code>domain</code>: Domain name for the Saltbox server. </p> <ul> <li>If you don't have one, see [[here|Prerequisites: Domain Name]].</li> <li>This should be the domain \"below\" the saltbox subdomains.  For example, if you want to access Sonarr at \"sonarr.domain.tld\", enter \"domain.tld\".  If you want \"sonarr.foo.domain.tld\", enter \"foo.domain.tld\".</li> <li>This parameter is required.</li> </ul> </li> <li> <p><code>email</code>: E-mail address. </p> <ul> <li>This is used for the Let's Encrypt SSL certificates.</li> <li>It does not have to be an email address at the domain above.</li> <li>This parameter is required.</li> </ul> </li> </ul> </li> <li> <p><code>cloudflare</code>: Cloudflare Account</p> <ul> <li> <p><code>email</code>: E-mail address used for the Cloudflare account. </p> </li> <li> <p><code>api</code>: [[API Token|Prerequisites: Cloudflare]]. </p> </li> <li> <p>This parameter is optional. </p> </li> <li> <p>Default is blank.</p> </li> <li> <p>Fill this in to have Saltbox add subdomains on Cloudflare, automatically; leave it blank, to have all Cloudflare related functions disabled.</p> </li> <li> <p>Note: if you are using a subdomain, like WHATEVER.DOMAIN.TLD, as your domain above, leave these blank. The Cloudflare automation does not work in that case and the install will stop with an error.</p> </li> </ul> </li> <li> <p><code>plex</code>: Plex.tv account credentials. </p> <ul> <li> <p>This will be used to:</p> <ul> <li>claim the Plex server under your username, and</li> <li>generate Plex Access Tokens for apps such as Plex Autoscan, etc. </li> </ul> </li> <li> <p><code>user</code> - Plex username or email address on the profile.</p> </li> <li> <p><code>pass</code> - Plex password.</p> </li> <li> <p><code>tfa</code> - \"yes\" or \"no\" depending on whether you want to use the two-factor authentication [TFA] compatible Plex connection system.</p> </li> <li> <p>This parameter is required. </p> </li> <li> <p>Note: The \"tfa\" setting controls whether Saltbox uses the newer authentication method or not; this newer method is required for use with TFA, but will work evern with it off; it's the \"Open an URL, log into Plex, grant access to this app\" workflow you may be familiar with from other contexts.</p> </li> <li> <p>If you use the <code>tfa</code> workflow, a random client ID and a Plex Access Token will be stored in <code>/opt/saltbox/plex.ini</code> for later use.</p> </li> </ul> </li> <li> <p><code>dockerhub</code>: DockerHub account credentials. </p> <ul> <li> <p>Entering Dockerhub credentials increases the number of images one can pull </p> </li> <li> <p><code>user</code> - Docker Hub username.</p> </li> <li> <p><code>token</code> - Docker Hub access token.</p> </li> </ul> </li> <li> <p><code>apprise</code>: apprise url. </p> <ul> <li>This will be used to send out messages during certain tasks (e.g. backup). </li> <li>This parameter is not nested like the others in this file. </li> <li>This parameter is optional. </li> </ul> </li> </ul>","title":"Options in accounts.yml"},{"location":"reference/accounts/#options-in-settingsyml","text":"<p>Note: Having <code>{{user}}</code> in the path tells Ansible to fill in the username, automatically. You do not need to fill in your actual username.</p>  <ul> <li> <p><code>downloads</code>: Where downloads go.</p> <ul> <li> <p><code>nzbs</code>: Path for Usenet app downloads. </p> </li> <li> <p>Default is <code>/mnt/unionfs/downloads/nzbs</code>.</p> </li> <li> <p>Example: With the default path, NZBGet downloads would go to <code>/mnt/unionfs/downloads/nzbs/nzbget/completed</code>, where as, SABnzbd downloads would go to <code>/mnt/unionfs/downloads/nzbs/sabnzbd/complete</code>.</p> </li> <li> <p><code>torrents</code>: Path for BitTorrent app downloads. </p> <ul> <li>Default is <code>/mnt/unionfs/downloads/torrents</code>.</li> </ul> </li> <li> <p>Example: With the default path, ruTorrent downloads would go to <code>/mnt/unionfs/downloads/torrents/rutorrent/completed</code>.</p> </li> </ul> </li> <li> <p><code>transcodes</code>: Path of temporary transcoding files. </p> <ul> <li> <p>Default is <code>\"/mnt/local/transcodes\"</code>.</p> </li> <li> <p>Note: It is recommended to not use <code>/tmp</code> or <code>/dev/shm</code> as a transcode location because the paths are cleared on reboots, causing Docker to create the folder as root and Plex transcoder to crash. Another reason why not to: https://forums.plex.tv/discussion/comment/1502936/#Comment_1502936.</p> </li> </ul> </li> <li> <p><code>rclone</code>: Rclone options.</p> <ul> <li> <p><code>version</code>: Rclone version that is installed by Saltbox. </p> <ul> <li> <p>Choices are <code>latest</code> (or <code>current</code>), <code>beta</code>, or a specific version number (e.g. <code>1.42</code>). </p> </li> <li> <p>Default is <code>latest</code>.</p> </li> </ul> </li> <li> <p><code>remote</code>: Rclone remote that Saltbox will use to setup Rclone VFS mount and Cloudplow. </p> <ul> <li> <p>Default is <code>google</code>.</p> </li> <li> <p>Can be left blank to run without cloud storage].</p> </li> </ul> </li> </ul> </li> <li> <p><code>shell</code>: Type of shell to use. </p> <ul> <li> <p>Choices are <code>bash</code> or <code>zsh</code>. </p> </li> <li> <p>Default is <code>bash</code>.</p> </li> </ul> </li> <li> <p><code>authelia</code>: Authelia options.</p> <ul> <li> <p><code>subdomain</code>: subdomain for the Authelia login page</p> <ul> <li>Default is <code>login</code>.</li> </ul> </li> </ul> </li> </ul>","title":"Options in settings.yml"},{"location":"reference/accounts/#options-in-adv_settingsyml","text":"<ul> <li> <p><code>system</code>: Where things go.</p> <ul> <li> <p><code>timezone</code>: Some setting. </p> </li> <li> <p>Default is <code>auto</code>.</p> </li> </ul> </li> <li> <p><code>dns</code>: Where things go.</p> <ul> <li> <p><code>enabled</code>: Some setting. </p> </li> <li> <p>Default is <code>yes</code>.</p> </li> <li> <p><code>proxied</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> <li> <p><code>ipv6</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> <li> <p><code>zerossl</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> </ul> </li> <li> <p><code>traefik</code>: Where things go.</p> <ul> <li> <p><code>tls</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> <li> <p><code>metrics</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> <li> <p><code>tracing</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> <li> <p><code>hsts</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> </ul> </li> <li> <p><code>mounts</code>: Where things go.</p> <ul> <li> <p><code>remote</code>: Some setting. </p> </li> <li> <p>Default is <code>rclone_vfs</code>.</p> </li> <li> <p><code>feeder</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> </ul> </li> <li> <p><code>gpu</code>: Where things go.</p> <ul> <li> <p><code>intel</code>: Some setting. </p> </li> <li> <p>Default is <code>yes</code>.</p> </li> <li> <p><code>nvidia</code>: Some setting. </p> </li> <li> <p>Default is <code>no</code>.</p> </li> </ul> </li> </ul>","title":"Options in adv_settings.yml"},{"location":"reference/cloud/","text":"","title":"Cloud Storage"},{"location":"reference/cloud/#provider","text":"<p>Saltbox can be set up to use any cloud storage provider that Rclone supports. However, Google Drive via G-Suite Business is the popular choice among users.  Some of the components are designed expressly for Google Drive, like the Google Drive monitoring in plex-autoscan and the service-account rotation in cloudplow.</p> <p>It is advised that you do NOT use a educational GSuite account or any GSuite account or Shared Drive you may buy on the secondary market [eBay and the like], unless you are aware of and planning for the likelihood that it disappears one day.</p> <p>Note that rclone offering support for a storage backend does not mean that backend is suitable for the Saltbox use case.  The only backend that sees any significant testing and use is Google Drive.</p>","title":"Provider"},{"location":"reference/cloud/#basics","text":"<p>Out of the box, Saltbox stores the media unencrypted in cloud storage utilizing an Rclone VFS mount to access it. If you prefer your data is stored encrypted, you will need to do some tweaking to the Rclone config.  At this type those tweaks are not documented here.</p> <p>Media will be stored in <code>Movies</code> and <code>TV</code> folders, all within a <code>Media</code> folder in root (i.e. <code>/Media</code>). [1] </p> <p>Saltbox is opinionated about this <code>/Media/&lt;type&gt;</code> file structure; changing it is not trivial.</p>","title":"Basics"},{"location":"reference/cloud/#setup","text":"<pre><code>Media\n\u251c\u2500\u2500 Movies\n\u251c\u2500\u2500 Music\n\u2514\u2500\u2500 TV\n</code></pre> <ul> <li>Example from Google Drive:</li> </ul> <p></p> <p>If you have media in other folders, you can simply move them into these folders via the Cloud Storage Provider's web site.</p> <p>Note 1: For Google Drive, you can use the Shift-Z trick to \"symlink\" folders here. </p> <p>Note 2: All the paths/folders mentioned here, and elsewhere, are CASE SENSITIVE (see Saltbox Paths).</p>","title":"Setup"},{"location":"reference/cloud/#google-my-drive-vs-shared-drives","text":"<p>Google provides two \"types\" of storage in  a GSuite account: \"My Drive\" and \"Shared Drives\".</p> <p>Shared Drives provide advantages for our purposes over My Drive, while My Drive offers no advantages over Shared Drives.</p> <p>The primary advantage of Shared Drives is that access to them can be controlled via Service accounts, which allows credential rotation to increase upload limits and reduce likelihood of usage-based server-side bans.</p> <p>Some newer related utilities [like the Golang \"Autoscan\" replacement for plex-autoscan] have features that work exclusively with Shared Drives.</p> <p>The primary disadvantage ot Shared Drives is that they have a fixed limit of 400,000 files.  For this reason one common strategy is to create separate Shared Drives for each media type.</p> <p>For those reasons, this documentation will discuss ONLY Shared Drives.</p> <p>As a note, if you are unable to create Shared Drives in the Google Drive Web UI, that's a sign that you have the wrong type of Google Drive account.</p> <p></p>","title":"Google \"My Drive\" vs. \"Shared Drives\""},{"location":"reference/cloud/#running-saltbox-without-cloud-storage","text":"<p>While the typical use case for Saltbox includes cloud storage, nothing prevents using it without cloud storage.</p> <p>If, in <code>settings.yml</code>, you leave the rclone remote name blank, neither <code>cloudplow</code> nor the rclone_vfs mount will be configured.  Your media will be imported to <code>/mnt/local</code> and stay there.  You can mount whatever storage you wish to use at <code>/mnt/local</code>.</p> <p>Alternatively, you can configure an rclone remote pointing at your primary storage [named \"google\"], then install normally.  Everything would then work as it typically does, except that cloudplow would move media from the local system to your NAS or whatever.  Perhaps that would allow downloads and imports to go faster.</p>  <p> 1 If you would like to customize your Plex libraries beyond what is listed above, see Customizing Plex Libraries.</p>","title":"Running Saltbox without cloud storage"},{"location":"reference/cloudplow/","text":"","title":"Example Cloudplow configs"},{"location":"reference/cloudplow/#cloudplow-with-default-config","text":"<p>This is the default config; it contains a single remote/uploader pair.  This set uploads everything from <code>/mnt/local/Media</code> to <code>google:/Media</code> once there is 200GB in <code>/mnt/local/Media</code>.</p>  Example config.json (click to expand) <pre><code>{\n    \"core\": {\n        \"dry_run\": false,\n    \"rclone_config_path\": \"/home/seed/.config/rclone/rclone.conf\"\n    },\n    \"hidden\": {\n        \"/mnt/local/.unionfs-fuse\": {\n            \"hidden_remotes\": [\n                \"google\"\n            ]\n        }\n    },\n    \"notifications\": {\n    },\n    \"remotes\": {\n        \"google\": {\n            \"hidden_remote\": \"google:\",\n            \"rclone_excludes\": [\n                \"**partial~\",\n                \"**_HIDDEN~\",\n                \".unionfs/**\",\n                \".unionfs-fuse/**\"\n            ],\n            \"rclone_extras\": {\n                \"--checkers\": 16,\n                \"--drive-chunk-size\": \"64M\",\n                \"--stats\": \"60s\",\n                \"--transfers\": 8,\n                \"--verbose\": 1\n            },\n            \"rclone_sleeps\": {\n                \"Failed to copy: googleapi: Error 403: User rate limit exceeded\": {\n                    \"count\": 5,\n                    \"sleep\": 25,\n                    \"timeout\": 3600\n                }\n            },\n            \"remove_empty_dir_depth\": 2,\n            \"sync_remote\": \"google:/Media\",\n            \"upload_folder\": \"/mnt/local/Media\",\n            \"upload_remote\": \"google:/Media\"\n        }\n    },\n    \"syncer\": {\n    },\n    \"uploader\": {\n        \"google\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": true,\n            \"max_size_gb\": 200,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": [\n                \"downloads/*\"\n            ]\n        }\n    }\n}\n</code></pre>","title":"Cloudplow with Default Config"},{"location":"reference/cloudplow/#cloudplow-with-multiple-remotes","text":"<p>A couple points:</p> <ul> <li>Uploader tasks run sequentially (vs in parallel)</li> <li>Each <code>uploader</code> task needs a separate <code>remote</code>. You can't have two \u201cuploaders\u201d referencing one \u201cremote\u201d. </li> </ul>  Example config.json (click to expand) <pre><code>{\n    \"core\": {\n        \"dry_run\": false,\n        \"rclone_binary_path\": \"/usr/bin/rclone\",\n        \"rclone_config_path\": \"/home/seed/.config/rclone/rclone.conf\"\n    },\n    \"hidden\": {\n        \"/mnt/local/.unionfs-fuse\": {\n            \"hidden_remotes\": [\n                \"google\",\n                \"dropbox\"\n            ]\n        }\n    },\n    \"notifications\": {\n        \"Pushover\": {\n            \"app_token\": \"xxxxx\",\n            \"priority\": 0,\n            \"service\": \"pushover\",\n            \"user_token\": \"xxxxx\"\n        }\n    },\n    \"nzbget\": {\n        \"enabled\": false,\n        \"url\": \"https://user:password@nzbget.domain.com\"\n    },\n    \"plex\": {\n        \"enabled\": false,\n        \"max_streams_before_throttle\": 1,\n        \"poll_interval\": 30,\n        \"rclone\": {\n            \"throttle_speeds\": {\n                \"1\": \"50M\",\n                \"2\": \"40M\",\n                \"3\": \"30M\",\n                \"4\": \"20M\",\n                \"5\": \"10M\"\n            },\n            \"url\": \"http://localhost:7949\"\n        },\n        \"token\": \"xxxxxx\",\n        \"url\": \"https://plex.domain.com\",\n        \"verbose_notifications\": false\n    },\n    \"remotes\": {\n        \"google\": {\n            \"hidden_remote\": \"google:\",\n            \"rclone_excludes\": [\n                \"**partial~\",\n                \"**_HIDDEN~\",\n                \".unionfs/**\",\n                \".unionfs-fuse/**\"\n            ],\n            \"rclone_extras\": {\n                \"--checkers\": 8,\n                \"--drive-chunk-size\": \"128M\",\n                \"--stats\": \"60s\",\n                \"--transfers\": 8,\n                \"--verbose\": 1\n            },\n            \"rclone_sleeps\": {\n                \"Failed to copy: googleapi: Error 403: User rate limit exceeded\": {\n                    \"count\": 5,\n                    \"sleep\": 6,\n                    \"timeout\": 7200\n                }\n            },\n            \"rclone_command\": \"copy\",\n            \"remove_empty_dir_depth\": 1,\n            \"upload_folder\": \"/mnt/local/Media/\",\n            \"upload_remote\": \"google:/Media/\"\n        },\n        \"dropbox\": {\n            \"hidden_remote\": \"dropbox:\",\n            \"rclone_excludes\": [\n                \"**partial~\",\n                \"**_HIDDEN~\",\n                \".unionfs/**\",\n                \".unionfs-fuse/**\"\n            ],\n            \"rclone_extras\": {\n                \"--checkers\": 8,\n                \"--drive-chunk-size\": \"128M\",\n                \"--stats\": \"60s\",\n                \"--transfers\": 8,\n                \"--verbose\": 1\n            },\n            \"rclone_sleeps\": {\n            },\n            \"rclone_command\": \"move\",\n            \"remove_empty_dir_depth\": 1,\n            \"upload_folder\": \"/mnt/local/Media/\",\n            \"upload_remote\": \"dropbox:/Media/\"\n        }\n    },\n    \"syncer\": {},\n    \"uploader\": {\n        \"google\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": true,\n            \"max_size_gb\": 100,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": [\n                \"downloads/*\"\n            ]\n        },\n        \"dropbox\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": true,\n            \"max_size_gb\": 50,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": []\n        }\n    }\n}\n</code></pre>","title":"Cloudplow with Multiple Remotes"},{"location":"reference/cloudplow/#cloudplow-with-multiple-folders","text":"<p>This config uploads everything from <code>/mnt/local/Media</code> to <code>google:/Media</code> [triggered at 100GB] and  everything in <code>/mnt/local/downloads/torrents/rutorrent/completed/</code> to <code>google:/Downloads/</code> [triggered at 50GB].</p>  Example config.json (click to expand) <pre><code>{\n    \"core\": {\n        \"dry_run\": false,\n        \"rclone_binary_path\": \"/usr/bin/rclone\",\n        \"rclone_config_path\": \"/home/seed/.config/rclone/rclone.conf\"\n    },\n    \"hidden\": {\n        \"/mnt/local/.unionfs-fuse\": {\n            \"hidden_remotes\": [\n                \"google\"\n            ]\n        }\n    },\n    \"notifications\": {\n        \"Pushover\": {\n            \"app_token\": \"xxxxx\",\n            \"priority\": 0,\n            \"service\": \"pushover\",\n            \"user_token\": \"xxxxx\"\n        }\n    },\n    \"nzbget\": {\n        \"enabled\": false,\n        \"url\": \"https://user:password@nzbget.domain.com\"\n    },\n    \"plex\": {\n        \"enabled\": false,\n        \"max_streams_before_throttle\": 1,\n        \"poll_interval\": 30,\n        \"rclone\": {\n            \"throttle_speeds\": {\n                \"1\": \"50M\",\n                \"2\": \"40M\",\n                \"3\": \"30M\",\n                \"4\": \"20M\",\n                \"5\": \"10M\"\n            },\n            \"url\": \"http://localhost:7949\"\n        },\n        \"token\": \"xxxxxx\",\n        \"url\": \"https://plex.domain.com\",\n        \"verbose_notifications\": false\n    },\n    \"remotes\": {\n        \"media_to_google\": {\n            \"hidden_remote\": \"google:\",\n            \"rclone_excludes\": [\n                \"**partial~\",\n                \"**_HIDDEN~\",\n                \".unionfs/**\",\n                \".unionfs-fuse/**\"\n            ],\n            \"rclone_extras\": {\n                \"--checkers\": 8,\n                \"--drive-chunk-size\": \"128M\",\n                \"--stats\": \"60s\",\n                \"--transfers\": 8,\n                \"--verbose\": 1\n            },\n            \"rclone_sleeps\": {\n                \"Failed to copy: googleapi: Error 403: User rate limit exceeded\": {\n                    \"count\": 5,\n                    \"sleep\": 6,\n                    \"timeout\": 7200\n                }\n            },\n            \"remove_empty_dir_depth\": 1,\n            \"upload_folder\": \"/mnt/local/Media/\",\n            \"upload_remote\": \"google:/Media/\"\n        },\n        \"downloads_to_google\": {\n            \"hidden_remote\": \"\",\n            \"rclone_excludes\": [\n                \"**partial~\",\n                \"**_HIDDEN~\",\n                \".unionfs/**\",\n                \".unionfs-fuse/**\"\n            ],\n            \"rclone_extras\": {\n                \"--checkers\": 8,\n                \"--drive-chunk-size\": \"128M\",\n                \"--stats\": \"60s\",\n                \"--transfers\": 8,\n                \"--verbose\": 1\n            },\n            \"rclone_sleeps\": {\n                \"Failed to copy: googleapi: Error 403: User rate limit exceeded\": {\n                    \"count\": 5,\n                    \"sleep\": 25,\n                    \"timeout\": 7200\n                }\n            },\n            \"remove_empty_dir_depth\": 1,\n            \"upload_folder\": \"/mnt/local/downloads/torrents/rutorrent/completed/\",\n            \"upload_remote\": \"google:/Downloads/\"\n        }\n    },\n    \"syncer\": {},\n    \"uploader\": {\n        \"media_to_google\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": true,\n            \"max_size_gb\": 100,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": [\n                \"downloads/*\"\n            ]\n        },\n        \"downloads_to_google\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": true,\n            \"max_size_gb\": 50,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": []\n        }\n    }\n}\n</code></pre>","title":"Cloudplow with Multiple Folders"},{"location":"reference/cloudplow/#cloudplow-with-notifications-enabled","text":"<p>This is the default config with Pushover notifications configured.</p>  Example config.json (click to expand) <pre><code>{\n    \"core\": {\n        \"dry_run\": false,\n    \"rclone_config_path\": \"/home/seed/.config/rclone/rclone.conf\"\n    },\n    \"hidden\": {\n        \"/mnt/local/.unionfs-fuse\": {\n            \"hidden_remotes\": [\n                \"google\"\n            ]\n        }\n    },\n    \"notifications\": {\n        \"Pushover\": {\n            \"app_token\": \"XXXXXXXXXXX\",\n            \"service\": \"pushover\",\n            \"user_token\": \"XXXXXXXXXXXX\",\n            \"priority\": 0\n        }\n    },\n    \"remotes\": {\n        \"google\": {\n            \"hidden_remote\": \"google:\",\n            \"rclone_excludes\": [\n                \"**partial~\",\n                \"**_HIDDEN~\",\n                \".unionfs/**\",\n                \".unionfs-fuse/**\"\n            ],\n            \"rclone_extras\": {\n                \"--checkers\": 16,\n                \"--drive-chunk-size\": \"64M\",\n                \"--stats\": \"60s\",\n                \"--transfers\": 8,\n                \"--verbose\": 1\n            },\n            \"rclone_sleeps\": {\n                \"Failed to copy: googleapi: Error 403: User rate limit exceeded\": {\n                    \"count\": 5,\n                    \"sleep\": 25,\n                    \"timeout\": 3600\n                }\n            },\n            \"remove_empty_dir_depth\": 2,\n            \"sync_remote\": \"google:/Media\",\n            \"upload_folder\": \"/mnt/local/Media\",\n            \"upload_remote\": \"google:/Media\"\n        }\n    },\n    \"syncer\": {\n    },\n    \"uploader\": {\n        \"google\": {\n            \"check_interval\": 30,\n            \"exclude_open_files\": true,\n            \"max_size_gb\": 200,\n            \"opened_excludes\": [\n                \"/downloads/\"\n            ],\n            \"size_excludes\": [\n                \"downloads/*\"\n            ]\n        }\n    }\n}\n</code></pre>","title":"Cloudplow with Notifications Enabled"},{"location":"reference/dependencies/","text":"<p>If you want to examine the dependencies script before running it:</p> <pre><code>curl -sL https://install.saltbox.dev | more\n</code></pre> <p>This script will:</p> <ol> <li>install <code>git</code></li> <li>delete an existing repo</li> <li>clone the saltbox repo to the system [default location <code>/srv/git/sb</code>]</li> <li>create some script aliases</li> <li>run <code>sb_dep.sh</code></li> <li>run <code>sb_repo.sh</code></li> </ol> <p>At the end of this you will have a local copy of the Saltbox repo, and all the things that Saltbox relies on to install will be available.</p>","title":"Dependencies"},{"location":"reference/domain/","text":"","title":"Domain Name"},{"location":"reference/domain/#domain-name","text":"<p>You will need a domain name as Saltbox apps are only accessed via https://appname.yourdomain.com (see Accessing Saltbox Apps). The steps below will help you set up a domain and DNS settings for use with Saltbox.</p> <p>Ports are [for the most part] bound only to the internal <code>saltbox</code> docker network, which means they are not visible on the host; you won't be able to connect externally to the apps using <code>IP:PORT</code>.</p>","title":"Domain Name"},{"location":"reference/domain/#1-domain-provider","text":"<p>Get a domain name from any domain name registry (e.g. Namecheap, Godaddy, Namesilo, etc).</p> <p>If you already have one, you may skip this step.</p> <p>Note: Free domain name providers, such as Freenom, do not support wildcard DNS settings, and paid domain names can be had for less than a dollar per year (see promo deals on various sites). However, you can add them to Cloudflare and not have to worry about it.</p> <p>If you are planning to use the automatic Cloudflare integration, there are some top-level domains [TLDs] that will not work with it.  Refer to this page.</p> <p>As of 2020/07/26:  \"DNS API cannot be used for domains with .cf, .ga, .gq, .ml, or .tk TLDs.\"</p>","title":"1. Domain Provider"},{"location":"reference/domain/#2-dns-setup","text":"<p>Pick one of the setups below. Your choice will depend on whether you meet certain criteria, as listed under the \"Notes\" section.</p>","title":"2. DNS Setup"},{"location":"reference/domain/#i-wildcard-dns-setup","text":"<p>Notes:</p> <ul> <li> <p>For DNS providers that allow wildcards.</p> </li> <li> <p>For [[Saltbox install type|Basics: Saltbox Install Types]].</p> </li> </ul> <p>Steps:</p> <p>Created an A Record for your subdomains with <code>*</code> for host and set the value to your server IP address.</p>    Type Host Value TTL     A Record * Server IP Address 300    Example  Namecheap &gt; Domain List &gt; Manage &gt; Advanced DNS &gt; Add New Record &gt; A Record &gt; `*` for Host &gt; Server IP for Value.  ![](../images/cloudflare/cloudflare-a-record.png)","title":"i. Wildcard DNS Setup"},{"location":"reference/domain/#ii-non-wildcard-dns-setup","text":"<p>Notes:</p> <ul> <li> <p>For DNS providers that do not allow wildcards (e.g. Freenom).</p> </li> <li> <p>For Mediabox / Feederbox  install types.</p> </li> <li> <p>For Cloudflare users.</p> </li> </ul> <p>Note: if you provide a Cloudflare email and API Key in your settings, the Saltbox installer will set this up for you automatically, provided you enter a top-level domain in the settings [i.e. <code>DOMAIN.TLD</code>, not <code>WHATEVER.DOMAIN.TLD</code>]</p> Saltbox Install Type <p>You will need to create A Records for all Saltbox subdomains. </p>    Type Host Value TTL     A Record plex Saltbox IP Address 300   A Record plexpy Saltbox IP Address 300   A Record plexrequests Saltbox IP Address 300   A Record jackett Saltbox IP Address 300   A Record radarr Saltbox IP Address 300   A Record sonarr Saltbox IP Address 300   A Record rutorrent Saltbox IP Address 300   A Record nzbget Saltbox IP Address 300   A Record nzbhydra2 Saltbox IP Address 300   A Record organizr Saltbox IP Address 300   A Record portainer Saltbox IP Address 300     Mediabox / Feederbox Install Type <p>You will need to create A Records for both IP addresses (Media and Feeder boxes) and set them to their respective subdomains. </p> <p>Mediabox</p>    Type Host Value TTL     A Record plex Mediabox IP Address 300   A Record plexpy Mediabox IP Address 300   A Record plexrequests Mediabox IP Address 300    <p>Feederbox</p>    Type Host Value TTL     A Record jackett Feederbox IP Address 300   A Record radarr Feederbox IP Address 300   A Record sonarr Feederbox IP Address 300   A Record rutorrent Feederbox IP Address 300   A Record nzbget Feederbox IP Address 300   A Record nzbhydra2 Feederbox IP Address 300   A Record organizr Feederbox IP Address 300   A Record portainer Feederbox IP Address 300","title":"ii. Non-Wildcard DNS Setup"},{"location":"reference/domain/#cloudflare","text":"","title":"Cloudflare"},{"location":"reference/domain/#intro","text":"<p>Cloudflare a service that, among other things, protects and accelerates a wide network of websites. By being the \"man in the middle\", it can act like a free DNS provider.</p> <p>Saltbox makes adding subdomains to Cloudflare's DNS settings a breeze via automation. All you need is the API key.</p> <p>Note that there are some top-level domains [TLDs] that will not work with this automation. Refer to this page.</p> <p>As of 2020/07/26: \"DNS API cannot be used for domains with .cf, .ga, .gq, .ml, or .tk TLDs.\"</p> <p>Although Cloudflare is not required for Saltbox, it is still recommended because:</p> <ol> <li> <p>DNS changes propagate almost instantly (a lot faster than a domain provider's DNS service).</p> </li> <li> <p>Hide your server's IP behind Cloudflare's.</p> </li> <li> <p>Makes setting up Mediabox / Feederbox a lot quicker.</p> </li> <li> <p>Allows for automated setup of subdomains for Saltbox add-on apps.</p> </li> <li> <p>It's free.</p> </li> </ol> <p>Note: Saltbox does not enable CDN / Proxy by default, but you may do so yourself after installing Saltbox (see section [[below|Prerequisites: Cloudflare#post-setup]]).</p>","title":"Intro"},{"location":"reference/domain/#sign-up","text":"<ol> <li> <p>Sign up for a free Cloudflare account.</p> </li> <li> <p>On your Domain Registrar's website (e.g. GoDaddy, Namecheap, etc), set the Name Servers to what Cloudflare instructs you to.</p> </li> </ol> Namecheap.com <p>\"Dashboard\" -&gt; your domain.tld -&gt; \"Manage\" -&gt; \"Name Servers\" -&gt; \"Custom DNS\" -&gt; add the nameservers in.</p> <p></p>  Namesilo.com <p>\"Manage My Domains\" -&gt; your domain.tld -&gt; \"NameServers\" -&gt; \"Change\" -&gt;  add the nameservers in.</p> <p></p>","title":"Sign Up"},{"location":"reference/domain/#setup","text":"<ol> <li> <p>Go to Cloudflare.com.</p> </li> <li> <p>Here you will see that your domain will have an \"Active\" status. Click on your domain to continue.</p> </li> </ol> <p></p> <ol> <li> <p>Click the SSL/TLS tab.</p> </li> <li> <p>Set SSL to <code>Full (strict)</code>.</p> </li> </ol> <p></p>","title":"Setup"},{"location":"reference/domain/#cloudflare-api-key","text":"<ol> <li> <p>Go to Cloudflare.com.</p> </li> <li> <p>Click the Overview tab.</p> </li> <li> <p>Click Get your API token.</p> </li> </ol> <p></p> <ol> <li>Under API Keys and then Global API Key click View.</li> </ol> <p></p> <ol> <li>On the login popup, type in your password and click View.</li> </ol> <p></p> <ol> <li>Save your API key.</li> </ol> <p></p>","title":"Cloudflare API Key"},{"location":"reference/domain/#post-setup","text":"<p>After Saltbox has added in the subdomains, you may go back in and turn on CDN for for them if you like.  NOte, however, that enabling proxying on your plex or emby subdomains [or more generally proxying large amounts of non-HTML content] is against Cloudflare TOS and may end up getting your Cloudflare account banned.</p> <p>Do this AFTER all your certs have been assigned and you have confirmed that all the Saltbox app sites are loading OK. </p> <p>This also applies to any app/subdomains you add in the future - wait till after you get certs before enabling CDN.</p> <p>Note 1: Leave the subdomains <code>saltbox</code>, <code>mediabox</code>, and <code>feederbox</code> as <code>DNS Only</code>, as they were created to reach your servers directly and not behind a CDN proxy (i.e. they need to resolve to the server's IP and not Cloudflare's).</p> <p>Note 2: If you enable proxying on plex/emby subdomains despite it being against TOS, you may find that performance suffers badly.</p> <p>You can do this by:</p> <ol> <li> <p>Going to Cloudflare.com.</p> </li> <li> <p>Clicking the DNS tab.</p> </li> <li> <p>Find the subdomain of interest.</p> </li> <li> <p>Under \"Status\", click the switch next to the gray cloud icon (i.e. <code>DNS Only</code>) to switch to an orange one (i.e. <code>DNS and HTTP proxy (CDN)</code>).</p> </li> </ol> <p></p>","title":"Post-Setup"},{"location":"reference/google-group-setup/","text":"<p>This guide will show you how to set up a Google Group for use with service accounts.</p> <ol> <li> <p>Open Google Groups site: https://groups.google.com/ and login with your Google account.  CLick on \"Create Group\":</p> <p></p> </li> <li> <p>Enter a name and email address for the group; the description is optional:</p> <p></p> <p>Click \"Next\" in the upper right.</p> </li> <li> <p>Change \"Who can join\" to \"Only invited users\":</p> <p></p> </li> <li> <p>Scroll to the bottom and set \"subscription\" to \"No email\" then click \"Create Group\" in the upper right:</p> <p></p> </li> <li> <p>Your group will appear on the main page.  Make a note of the email address:</p> <p> </p> </li> </ol>","title":"Google Group"},{"location":"reference/google-project-setup/","text":"<p>This guide will show you how to set up a Google Project and create credentials that will work for safire.</p> <p>This guide is assuming you are using a standard GSuite Business or GSuite Workspace account.</p> <ol> <li> <p>Open Google APIs Console site: https://console.developers.google.com and login with your Google account.</p> <p>Click on the project or organization at the top:</p> <p></p> </li> <li> <p>Click \"New Project\":</p> <p></p> </li> <li> <p>Name the project. Click \"Create\".</p> <p></p> <p>You'll see a progress dialog, when it's complete, click \"Select Project\"</p> <p></p> </li> <li> <p>Click \"Go to APIs overview\".</p> <p></p> </li> <li> <p>Click \"ENABLE APIS AND SERVICES\" at the top.</p> <p></p> <p>You'll be taken to the \"API Library\":</p> <p></p> </li> <li> <p>Search for \"Admin\". Click \"Admin SDK API\".</p> <p></p> <p>Click the button to enable the API:</p> <p></p> <p>You'll go to a API Overview page.  Click the browser back button twice:</p> <p></p> <p>Repeat this process for six more APIs:</p> <pre><code>- Google Drive API\n- Identity and Access Management (IAM) API\n- Cloud Resource Manager API\n- Service Usage API\n- Service Management API\n- Google Sheets API\n</code></pre> <p>You may find that some of these APIs have been enabled already as dependencies of others, like Service Management here:</p> <p></p> <p>In that case, click the website back arrow once and move on to the next one.</p> </li> <li> <p>Now click \"APIS and Services\" then \"Credentials\" in the left column to go to the credentials dash:</p> <p></p> </li> <li> <p>Click \"Configure consent screen\" over on the right:</p> <p></p> </li> <li> <p>Choose \"Internal\" user type and click \"Create\":</p> <p></p> </li> <li> <p>On this screen:</p> <ol> <li>type in the App Name (e.g. Rclone)</li> <li>Enter a \"User support email\"</li> <li>Scroll to the bottom</li> <li>Enter an email address under \"Developer contact information\"</li> <li>Click \"SAVE AND CONTINUE\".</li> </ol> <p></p> <p></p> </li> <li> <p>Click  \"SAVE AND CONTINUE\" on the scopes screen:</p> <p></p> <p>And \"BACK TO DASHBOARD\" on the final summary:</p> <p></p> </li> <li> <p>Click \"Credentials\" in the sidebar:</p> <p></p> </li> <li> <p>Click \"Create Credentials\", then \"OAuth client ID\":</p> <p></p> </li> <li> <p>Choose \"Desktop App\", give the app a name, and click \"CREATE\":</p> <p></p> </li> <li> <p>You'll be presented with the Client ID and Secret.  Copy and save them if you like.  Click on \"DOWNLOAD JSON\" to download the credential file:</p> <p></p> </li> </ol>","title":"Google Project"},{"location":"reference/install/","text":"","title":"Install"},{"location":"reference/install/#install-saltbox","text":"Saltbox <pre><code>sb install saltbox\n</code></pre>  Mediabox <pre><code>sb install mediabox\n</code></pre>  Feederbox <pre><code>sb install feederbox\n</code></pre>  Core <pre><code>sb install core\n</code></pre>   <p>TODO: INCORPORATE \"WHEN IS IT DONE\" ARTICLE</p>","title":"Install Saltbox"},{"location":"reference/plex/","text":"","title":"Plex or Emby Account"},{"location":"reference/plex/#plex","text":"<p>You'll need a free Plex account for the setup, if you don't already have one. </p> <p>It's easiest if you have a Plex account even if you're not planning to use Plex.  The default <code>saltbox</code> install assumes that you are using Plex, and without a Plex account in the settings, it will fail in various ways as it tries to install Plex and then things that depend on Plex.  This can be worked around[1] , and may change in the future, but for now the simplest route is to sign up for that free account, and then disable Plex after install if you don't want to use it.</p> <p>1 Basically, run the <code>core</code> tag instead of the <code>saltbox</code> tag, then run the tags for the apps you want individually. </p>","title":"Plex"},{"location":"reference/plex/#emby","text":"<p>You can use Emby in lieu of Plex [admonitions above about needing a Plex account for install still apply].</p> <p>Sign up for a free Emby Connect account at https://emby.media/connect.html, if you don't already have one.</p> <p>You'll need to install Emby manually after the initial install is complete.</p>","title":"Emby"},{"location":"reference/plex_auth_token/","text":"<p>Here are two ways of obtaining a Plex Access Token for your Plex account.</p>","title":"Plex Auth Token"},{"location":"reference/plex_auth_token/#saltbox-role","text":"<p>You will need your Plex credentials filled in <code>~/saltbox/accounts.yml</code>. If you already do, skip steps 2-4.</p> <ol> <li>Go to the Saltbox folder:</li> </ol> <pre><code>cd ~/saltbox/\n</code></pre> <ol> <li> <p>Open the file for editing:</p> </li> <li> <p>For encrypted <code>accounts.yml</code>:</p> <pre><code>ansible-vault edit accounts.yml\n</code></pre> </li> <li> <p>For plain text <code>accounts.yml</code>:</p> <pre><code>nano accounts.yml\n</code></pre> </li> <li> <p>Fill in your Plex credentials:</p> </li> </ol> <pre><code>plex:\n  user:\n  pass:\n</code></pre> <ol> <li> <p>Save and exit: Ctrl + X Y Enter.</p> </li> <li> <p>Run the following command:</p> </li> </ol> <pre><code>sb install plex_auth_token\n</code></pre> <ol> <li>You will be shown your Plex Access Token in the log:</li> </ol> <pre><code>TASK [plex_auth_token : Display Plex Auth Token] \n***********************************************************************************\nTuesday 29 January 2019  21:08:33 +0100 (0:00:00.104)       0:00:13.905 *******\nok: [localhost] =&gt; {\n    \"msg\": \"Your Plex Auth Token is: XXXXXXXXXXXXXXXX\"\n}\n</code></pre>","title":"Saltbox Role"},{"location":"reference/plex_auth_token/#script","text":"<ol> <li>On the server's shell, run the following command[1]:</li> </ol> <pre><code>/opt/scripts/plex/plex_token.sh\n</code></pre> <ol> <li>You will be prompted to enter your Plex login and then presented with the Plex Access Token (under <code>Your X_PLEX_TOKEN:</code>)</li> </ol>","title":"Script"},{"location":"reference/plex_auth_token/#_1","text":"<p> 1 Credit: https://github.com/wernight</p>","title":"Plex Auth Token"},{"location":"reference/ports/","text":"App Ports Notes     Emby     Jackett     Lidarr     Traefik 80, 443 Used by Saltbox apps when reverse-proxy is enabled.   NZBGet     NZBHydra     NZBHydra2     Ombi     Organizr     Plex (main) 32400 Not needed when using reverse proxy.   If 32400 needs to be open, set <code>plex_open_main_ports: true</code> using the inventory system.   Plex (extras) TCP: 3005, 8324, 32469   UDP: 1900, 5353, 8324, 32410, 32412, 32413, 32414 Non essential for remote servers. See here.  If ports need to be open, add the ones needed to <code>plex_docker_ports_custom: []</code> using the inventory system.   Plex Autoscan 3468 To disable this port in the FW and run it locally, see here.   Tautulli     Portainer     Radarr     Resilio Sync 55555    ruTorrent 6881 (UDP), 51413    Sonarr     Cloudplow     Watchtower     WebTools for Plex 33400, 33443","title":"Ports"},{"location":"reference/preinstall/","text":"","title":"Preinstall"},{"location":"reference/preinstall/#preinstall","text":"<p>Warning</p> <p>Make sure that you have setup the configuration correctly before proceeding.</p>  <p>This step will create the specified user account, add it to sudoers, update the kernel, edit GRUB configuration and install Rclone and reboot the server if needed.</p> <pre><code>sb install preinstall\n</code></pre>  <p>Info</p> <p>From this point you'll want to make sure you run commands as the user specified in the accounts.yml</p>  <p>If your server did not need to reboot you can run <code>su username</code> to switch user or reconnect to SSH as the newly created user. Everything after this point will assume you are running as the user entered in accounts.yml</p>","title":"Preinstall"},{"location":"reference/pushover/","text":"","title":"Pushover"},{"location":"reference/pushover/#what-is-pushover","text":"<p>Pushover is service that enables you to receive instant push notifications on your phone/tablet/PC from a variety of sources. With Cloudbox, you can have notifications sent with many different events.</p> <p>Screenshots:</p> <ul> <li>Mobile device (Pushover app):</li> </ul> <p></p> <ul> <li>PC (Pullover client):</li> </ul> <p></p>","title":"What is Pushover?"},{"location":"reference/pushover/#pushover-setup","text":"<p>Listed below are the things you'll need from Pushover's site.</p> <ol> <li> <p>Pushover account</p> </li> <li> <p>Pushover license(s)</p> <ul> <li>Pushover has 3 separate licenses for the different device types: Android, iOS, or PC. The cost for the license is a one-time fee of $4.99. You'll need one for the type of device you want to receive notifications on.  See their FAQ for more info.</li> </ul> </li> <li> <p>A Pushover Device Client</p> <ul> <li> <p>Android</p> </li> <li> <p>iOS</p> </li> <li> <p>Desktop PC:</p> <ul> <li> <p>Pullover (free, open source, multi platform client, and my personal favorite).</p> </li> <li> <p>Browser Desktop Notifications (i.e. Chrome, Firefox, Safari).</p> </li> </ul> </li> </ul> </li> <li> <p>Your User Key</p> <ul> <li>Once you're signed in, click the Pushover logo at the top left to take you there.</li> </ul> </li> <li> <p>Application API Token (one per app)</p> <ul> <li> <p>Pushover -&gt; Your Applications -&gt; Create an Application/API Token</p> </li> <li> <p>Fill in:</p> <ul> <li> <p>Name (app/task name)</p> </li> <li> <p>Type (Application or Script)</p> </li> <li> <p>Description (optional)</p> </li> <li> <p>URL (optional)</p> </li> <li> <p>Icon (optional)</p> </li> </ul> </li> <li> <p>Click \"Create Application\".</p> </li> </ul> </li> </ol>","title":"Pushover Setup"},{"location":"reference/pushover/#cloudbox-backup","text":"<p>To have Pushover send you alerts every time a Cloudbox backup task starts and finishes, follow to steps below.</p> <ol> <li>Create a Pushover application for \"Cloudbox Backup\" (see Step 5 [here.</li> </ol> <p>Tip: If you have a Mediabox/Feederbox setup, you can create 2 different applications within Pushover specify \"Mediabox Backup\" and \"Feederbox Backup\" as their names.</p> <ol> <li> <p>Open the <code>accounts.yml</code> file.</p> </li> <li> <p>For encrypted <code>accounts.yml</code>:</p> <pre><code>ansible-vault edit accounts.yml\n</code></pre> </li> <li> <p>For plain text <code>accounts.yml</code>:</p> <pre><code>nano accounts.yml\n</code></pre> </li> <li> <p>Type in your Pushover User Key and the Application Token (from Step #1) under \"pushover\" (without quotes).</p> </li> </ol> <pre><code>pushover:\n  app_token:\n  user_key:\n  priority\n</code></pre> <ol> <li>Ctrl+X Y Enter to save.</li> </ol>","title":"Cloudbox Backup"},{"location":"reference/pushover/#cloudplow","text":"<p>Cloudplow can send notifications when it:</p> <ul> <li>starts an upload task.</li> <li>is put into a ban sleep.</li> <li>is restored after a ban sleep.</li> <li>completes an upload task.</li> </ul> <p></p> <p>To setup notifications, follow the steps below:</p> <ol> <li> <p>Create a Pushover application for \"Cloudplow\" (see Step 5 here.</p> </li> <li> <p>Edit the Cloudplow config.json file:</p> <pre><code>nano /opt/cloudplow/config.json\n</code></pre> </li> <li> <p>Add the following notification section and type in your Pushover User Key and the Application Token (from Step #1) within the quotes (\"\"). Take a look at an example of this here.</p> </li> </ol> <pre><code>\"notifications\": {\n    \"Pushover\": {\n        \"app_token\": \"XXXXXXXXXXX\",\n        \"service\": \"pushover\",\n        \"user_token\": \"XXXXXXXXXXXX\",\n        \"priority\": 0\n     }\n },\n</code></pre> <ol> <li> <p>Ctrl+X Y Enter to save.</p> </li> <li> <p>Restart CP after changes: <code>sudo systemctl restart cloudplow</code>.</p> </li> </ol>","title":"Cloudplow"},{"location":"reference/pushover/#overseerr","text":"<p>TODO: Write this</p>","title":"Overseerr"},{"location":"reference/pushover/#tautulli","text":"<p>Pushover can send you notifications whenever an event occurs with Plex (e.g. someone starts watching something,  new media is added, etc)</p> <ol> <li> <p>Create a Pushover application for \"Tautulli\" (see Step 5 here.</p> </li> <li> <p>Enable notifications: [[Tautulli|Install: Tautulli#1-accessing-plexpy]] -&gt; Settings -&gt; Notification Agents -&gt; Click the gray \"bell\" icon next to \"Pushover\" -&gt; and select when you want to be alerted -&gt; Click \"close\". The \"bell\" icon will turn yellow. </p> </li> <li> <p>Add in your Pushover info: Click the \"gear\" icon next to \"Pushover\" -&gt; Type in your Pushover User Key and the Application Token (you can click the \"Test Notification\" to check if it's working ok) -&gt; Click \"Save\".</p> </li> </ol>","title":"Tautulli"},{"location":"reference/pushover/#sonarr-and-radarr","text":"<p>You can also have Sonarr and Radarr also send out alerts via Pushover when new media is added.</p>","title":"Sonarr and Radarr"},{"location":"reference/rclone/","text":"","title":"Rclone"},{"location":"reference/rclone/#rclone","text":"<p>This step will take you through the configuration of Rclone.</p> <p>This is the same process as you went through with Cloudbox.</p> <p>If you're migrating from Cloudbox you probably want the Cloudbox migrations instructions</p> <p>THe manual steps that the script below will try to perform: 1. Create a Google project 1. Create a Google group 1. Create a bunch of service accounts 1. Put all the service accounts JSON files into <code>/opt/sa</code> 1. Add all those service accounts to the Google group you just created. 1. Create three new shared drives in the Google Drive UI. [Movies, Music, TV] 1. Add your Google Group to each of those drives as a \"Manager\" 1. Create rclone remotes pointing to each of those shared drives, authenticated using one of those service files. 1. Create a <code>union</code> rclone remote called \"google\", with the components set to the three td remotes you just created.</p> <p>With Saltbox we want to set up multiple teamdrives and service accounts form the get-go, with as few manual steps as possible.</p> <p>That process is still under construction.  Please take a look at the automated version of this process.</p>","title":"Rclone"},{"location":"reference/safire/","text":"<p>Saltbox defaults to using service accounts for uploading to multiple teamdrives to allow for future growth.</p> <p>To make the setup more straightforward, this guide will leverage <code>safire</code> to generate as much infrastructure as possible.</p> <p>This will set up three Shared Drives and set up all the infrastructure you need for Saltbox to use them.</p>","title":"Google Drive"},{"location":"reference/safire/#this-script-is-a-work-in-progress-it-probably-has-rough-edges-its-mostly-intended-for-brand-new-users","text":"","title":"This script is a work in progress; it probably has rough edges.  It's mostly intended for brand new users."},{"location":"reference/safire/#assumptions-and-defaults","text":"<ol> <li> <p>You have rclone installed</p> </li> <li> <p>You are running python 3.8 and have run <code>sudo apt install python3.8-venv -y</code>    Probably other python3 works, the assumption is that the script can create a venv</p> </li> <li> <p>The script will generate a random prefix and use this for the shared drives, service accounts, and projects.</p> </li> <li> <p>Default is to generate three shared drives:</p> </li> </ol>    Drive media dir     [PREFIX]_Movies <code>/Media/Movies</code>   [PREFIX]_Music <code>/Media/Music</code>   [PREFIX]_TV <code>/Media/TV</code>    <p>This can be modified with a config file.  The first half of the script will display the details.</p> <ol> <li>Default is to generate three projects with 100 service accounts each.  This can be modified at the beginning of the script itself.</li> </ol> <p>There are a couple other user settings at the beginning of the script.</p>","title":"Assumptions and defaults:"},{"location":"reference/safire/#google-project-and-group-setup","text":"<p>There are two pieces that can't be scripted.</p> <ol> <li> <p>You will need to create a new project and generate a credential file:</p> <p>Instructions here</p> </li> <li> <p>You will need to create a Google Group to hold service accounts:</p> <p>Instructions here</p> </li> </ol>","title":"Google Project and Group Setup"},{"location":"reference/safire/#safire-setup","text":"<ol> <li> <p>SSH into your server, then copy-paste these commands one by one:</p> <pre><code>curl -fLvO https://raw.githubusercontent.com/chazlarson/sb_gd/main/sb_gd.sh\nchmod +x sb_gd.sh\n./sb_gd.sh\n</code></pre> </li> <li> <p>Copy the credential JSON you downloaded earlier to <code>~/safire/creds/creds.json</code> on your server</p> <p>You can do this in a variety of ways; if you are running a linux-like system locally</p> <pre><code>scp /LOCAL/PATH/TO/creds.json USER@DOMAIN.TLD:~/safire/creds/creds.json\n</code></pre> <p>For example:</p> <pre><code>scp /Users/nacl/Downloads/safire-credentials.json nacl@111.222.333.444:~/safire/creds/creds.json\n</code></pre> </li> <li> <p>Run the script again.</p> <p>You will be prompted to authenticate to google and copy-paste a token [this will happen twice].</p> <p>If you didn't enter your google group email address into the script, you will be asked for it.</p> <pre><code>./sb_gd.sh\n</code></pre> </li> <li> <p>You should now have three new shared drives ready for use with Saltbox.</p> </li> </ol>","title":"<code>safire</code> Setup:"},{"location":"reference/server/","text":"","title":"Server"},{"location":"reference/server/#server","text":"","title":"Server"},{"location":"reference/server/#getting-a-server","text":"<p>About the requirements:</p> <p>You will need a dedicated server, from a server provider (e.g. Hetzner, kimsufi, OVH, etc), installed with Ubuntu Server 20.04.</p> <p>Typically this server is remote to you; you can install on a home server, keeping in mind some home server considerations</p> <p>Best results are seen with an actual dedicated server, not a VPS like those available from Linode, Vultr, or the like.  Linodes, Vultr \"Cloud Compute\", Hetzner \"Cloud Servers\", and probably others like them, in particular, are known to not work in at least one significant way; NZBGet reports 0 available disk space while Sonarr, Radarr, and tools like <code>df</code> and <code>du</code> report disk space as expected.</p> <p>A commonly-asked question is \"can I run cloudbox on this server?\"</p> <p>You will need root access to install Saltbox.</p> <p>The server should be a completely fresh OS install. Do not try to install any dependencies on your own, Saltbox will do that for you. </p> <p>Saltbox only supports x64 (i.e. Intel or AMD 64) machines. ARM based hardware [such as the Raspberry Pi] is not supported.</p> <p>Get a server with at least 100GB+ of hard disk space. Even though media is uploaded to the cloud, there is still a need local storage for things like app data and backups. </p> <p>Practically, you should have more like 500GB of space available at a minimum.</p> <p>Cloudplow's default folder size threshold, to upload media to the cloud, is set at 200GB. If you want to lower that, you can find details here</p> <p>If you are planning to use Usenet, SSD should be considered required, and NVME highly recommended.  Usenet is extremely disk I/O intensive.</p> <p>If you are planning to use torrents, you should have much more disk space than that available for seeding.  Your seeding torrents will not be moved to your cloud storage; they will consume local disk space as long as they are seeding. </p> <p>If you are installing as a Feederbox/Mediabox setup rather than the all-in-one Saltbox, the disk requirements change a bit. Downloading drives disk requirements on the Feederbox [as discussed above] and primarily the Plex/Emby metadata drives the disk requirements on the Mediabox.  Depending on the size of your library, that metadata can be quite large.</p>","title":"Getting a Server"},{"location":"reference/server/#home-server-considerations","text":"<p>If you are setting this up on a home server, verify, before installing Saltbox:</p> <ol> <li>Make sure your ISP doesn't block ports 80 and 443 [if your ISP blocks these ports, it won't work.]</li> <li>Make sure that your router supports hairpin NAT [if this isn't supported, you won't be able to access apps via subdomain from inside your network]</li> <li>Open the relevant ports (eg <code>80</code>, <code>443</code>, etc) in your router/firewall and forward them to the IP of the box on which you want to install Saltbox, before installing Saltbox.</li> <li>Point your domain at your home IP and configure some dynamic DNS software to keep it updated.  Saltbox has a dynamic dns client available [it's not installed by default], but there are many ways to set this up.  Make sure that DNS has propagated and your domain returns your home IP via <code>ping</code> or something like it, before installing Saltbox.</li> </ol>","title":"Home Server considerations"},{"location":"reference/server/#tips","text":"","title":"Tips"},{"location":"reference/server/#ubuntu-2004","text":"<ul> <li>If you get an option like below, select choose <code>ubuntu-2004-focal-64-minimal</code>.</li> </ul> <p></p> <ul> <li>Install OpenSSH server if asked. </li> </ul>","title":"Ubuntu 20.04"},{"location":"reference/server/#partitioning","text":"<ul> <li> <p>If you have multiple hard drives on the server (eg. 2 x 4 TB), put them in RAID 0 to maximize space and speed (you don't need redundancy as you can schedule backups of Saltbox).</p> </li> <li> <p>Set all available space to <code>/</code> (remove <code>/home</code> and <code>/data</code> partitions).</p> </li> <li> <p>Leave ample space in <code>/boot</code> (e.g. 2+ GB).</p> </li> <li> <p>putting the <code>/opt</code> directory on a <code>btrfs</code> partition can dramatically reduce the amount of time your containers are down during backup.</p> </li> </ul> <p>Examples:</p> Online.net <p></p>  OVH <p></p> <p></p>  Hetzner <ul> <li> <p>Hetzner installimage      <pre><code># Hetzner Online GmbH - installimage\n#\n# This file contains the configuration used to install this\n# system via installimage script. Comments have been removed.\n#\n# More information about the installimage script and\n# automatic installations can be found in our wiki:\n#\n# http://wiki.hetzner.de/index.php/Installimage\n#\n\nDRIVE1 /dev/nvme0n1\nDRIVE2 /dev/nvme1n1\nSWRAID 1\nSWRAIDLEVEL 0\nHOSTNAME sb.domain.com\nPART /boot  ext4     512M\nPART lvm    vg0       all\nLV vg0   swap   swap      swap         8G\nLV vg0   root    /     ext4      all\nIMAGE /root/.oldroot/nfs/install/../images/Ubuntu-2004-focal-64-minimal.tar.gz\n</code></pre></p> </li> <li> <p>Hetzner installimage (with a separate 250G partition for <code>/opt</code> utilizing BTRFS for snapshot backups)</p> <pre><code># Hetzner Online GmbH - installimage\n#\n# This file contains the configuration used to install this\n# system via installimage script. Comments have been removed.\n#\n# More information about the installimage script and\n# automatic installations can be found in our wiki:\n#\n# http://wiki.hetzner.de/index.php/Installimage\n#\n\nDRIVE1 /dev/nvme0n1\nDRIVE2 /dev/nvme1n1\nSWRAID 1\nSWRAIDLEVEL 0\nHOSTNAME sb.domain.com\nPART /boot  ext4     512M\nPART lvm    vg0       all\nLV vg0   swap   swap      swap         8G\nLV vg0   opt   /opt     btrfs         250G\nLV vg0   root    /     ext4      all\nIMAGE /root/.oldroot/nfs/install/../images/Ubuntu-2004-focal-64-minimal.tar.gz\n</code></pre> </li> </ul>","title":"Partitioning:"},{"location":"reference/subdomain/","text":"<p>Setup instructions are separated based on the DNS Provider you use. </p>","title":"Subdomains"},{"location":"reference/subdomain/#cloudflare","text":"<p>Saltbox will automatically add subdomain on Cloudflare and point it to the correct IP address. </p> <p>Note 1: Make sure the Cloudflare API Key is filled in [[settings.yml|Install: Settings]]) and the e-mail address matches the one you have in your account profile. </p> <p>Note 2: There may be some subdomains that you have to add in yourself if Saltbox doesn\u2019t so it for you, such as the Saltbox type ones (eg <code>saltbox</code>, <code>feederbox</code>, <code>mediabox</code>). </p>","title":"Cloudflare"},{"location":"reference/subdomain/#other-domain-hosting-sites","text":"","title":"Other Domain Hosting Sites"},{"location":"reference/subdomain/#saltbox-install-type","text":"","title":"Saltbox Install Type"},{"location":"reference/subdomain/#allows-wildcards","text":"<p>You don't need to do anything.</p>","title":"Allows Wildcards"},{"location":"reference/subdomain/#does-not-allow-wilcards","text":"<p>You will need to add the subdomain via your domain's DNS provider's website.</p>","title":"Does Not Allow Wilcards"},{"location":"reference/subdomain/#mediabox-feederbox-install-type","text":"<p>You will need to add the subdomain via your domain's DNS provider's website.</p> <p>Make sure you use the correct IP address (Mediabox IP or Feederbox IP).</p>","title":"Mediabox / Feederbox Install Type"},{"location":"reference/usenet-torrent/","text":"<p>Probably, you're setting this up because you're planning to download media.</p> <p>To do this, there are requirements dependings on which method[s] you choose to download your media. It can either be Usenet, Torrents, or both.</p>","title":"Usenet vs Bittorrent"},{"location":"reference/usenet-torrent/#i-usenet","text":"<p>If you plan on using Usenet (i.e. Newsgroups) with Saltbox, you'll need 2 things: a Usenet provider and a Usenet indexer. We recommend you have multiple indexers (and even multiple providers) to better your chances of finding/downloading media.</p>","title":"i. Usenet"},{"location":"reference/usenet-torrent/#ii-bittorrent","text":"<p>If you plan on using torrents with Saltbox, we recommend you have access to a private torrent tracker as most servers don't allow public ones. However, if you still want to use public torrent trackers with Saltbox, you are free to do so.  You will need to make some changes to the configuration TODO ADD LINK TO FAQ to allow access to public trackers, as they are blocked by default.</p>","title":"ii. BitTorrent"},{"location":"saltbox/backup/backup/","text":"<p>With Saltbox you can either run a backup task manually or schedule it to run automatically.</p>","title":"Backup"},{"location":"saltbox/backup/backup/#manual-backup","text":"<p>Info</p> <p>This step assumes you have completed the configuration of the <code>backup_config.yml</code> in the configuration step.</p>  Without Screen <pre><code>sb install backup\n</code></pre>  With Screen <pre><code>screen -dmS saltbox-backup sb install backup\n</code></pre> <pre><code>screen -r\n</code></pre> <pre><code>CTRL A + D\n</code></pre>","title":"Manual Backup"},{"location":"saltbox/backup/backup/#scheduled-backup","text":"<p>Info</p> <p>This step assumes you have completed the configuration of the <code>backup_config.yml</code> in the configuration step.</p>  Have Saltbox configure cron <pre><code>sb install set-backup\n</code></pre>  Configure cron manually <pre><code>crontab -e\n</code></pre> <pre><code>0 4 * * * sudo PATH='/usr/bin:/bin:/usr/local/bin' env ANSIBLE_CONFIG='/srv/git/saltbox/ansible.cfg' '/usr/local/bin/ansible-playbook' '/srv/git/saltbox/backup.yml' &gt;&gt; '/home/seed/logs/saltbox_backup.log' 2&gt;&amp;1\n</code></pre> <p>Remember to edit the seed username if you changed the Saltbox user in the <code>accounts.yml</code>.</p> <p>Visit crontab.guru for help with the scheduling format.</p>","title":"Scheduled Backup"},{"location":"saltbox/backup/restore/","text":"","title":"Restore"},{"location":"saltbox/backup/restore/#dependencies","text":"<p>Start by installing dependencies.</p> curl <pre><code>curl -sL https://install.saltbox.dev | sudo -H bash; cd /srv/git/saltbox\n</code></pre>  wget <pre><code>wget -qO- https://install.saltbox.dev | sudo -H bash; cd /srv/git/saltbox\n</code></pre>  curl (verbose) <pre><code>curl -sL https://install.saltbox.dev | sudo -H bash -s -- -v; cd /srv/git/saltbox\n</code></pre>  wget (verbose) <pre><code>wget -qO- https://install.saltbox.dev | sudo -H bash -s -- -v; cd /srv/git/saltbox\n</code></pre>   <p>Then retrieve the configuration files from a backup.</p>","title":"Dependencies"},{"location":"saltbox/backup/restore/#using-restore-service","text":"curl <pre><code>curl -sL https://restore.saltbox.dev | bash -s 'USERNAME' 'PASSWORD' # (1)\n</code></pre> <ol> <li> <p>Use the username and password defined for the service when last backup was executed.</p> <p>Must wrap the username and password in quotes.</p> </li> </ol>  wget <pre><code>wget -qO- https://restore.saltbox.dev | bash -s 'USERNAME' 'PASSWORD' # (1)\n</code></pre> <ol> <li> <p>Use the username and password defined for the service when last backup was executed.</p> <p>Must wrap the username and password in quotes.</p> </li> </ol>   <p>Then run <code>preinstall</code> which will setup the user account and a few other dependencies for the restore.</p> <pre><code>sb install preinstall\n</code></pre>  <p>Info</p> <p>From this point you'll want to make sure you run commands as the user specified in the accounts.yml</p>  <p>Start the restore process.</p> <pre><code>sb install restore\n</code></pre> <p>Once succesfully completed you can now follow the installation guide from this step.</p>","title":"Using Restore Service"},{"location":"saltbox/backup/restore/#without-restore-service","text":"<p>Retrieve the following configuration files from your backup manually and place them in <code>/srv/git/saltbox</code>:</p> <ul> <li>accounts.yml</li> <li>settings.yml</li> <li>adv_settings.yml</li> <li>backup_config.yml</li> <li>rclone.conf</li> <li>localhost.yml (if present)</li> </ul> <p>Then run <code>preinstall</code> which will setup the user account and a few other dependencies for the restore.</p> <pre><code>sb install preinstall\n</code></pre>  <p>Info</p> <p>From this point you'll want to make sure you run commands as the user specified in the accounts.yml</p>  <p>Start the restore process.</p> <pre><code>sb install restore\n</code></pre> <p>Once succesfully completed you can now follow the installation guide from this step.</p>","title":"Without Restore Service"},{"location":"saltbox/backup/settings/","text":"<p>The configuration file for backup/restore is called <code>backup_config.yml</code> and is located in <code>/srv/git/saltbox</code></p> <pre><code>---\nbackup:\n  local:\n    enable: true # (1)\n    destination: /mnt/local/Backups/Saltbox # (2)\n  rclone:\n    enable: true # (3)\n    destination: google:/Backups/Saltbox # (4)\n  rsync:\n    enable: false # (5)\n    destination: rsync://somehost.com/Backups/Saltbox # (6)\n    port: 22 # (7)\n  cron:\n    cron_time: weekly # (8)\n    cron_state: absent # (9)\n  restore_service:\n    user: # (10)\n    pass: # (11)\n  misc:\n    snapshot: true # (12)\n</code></pre> <ol> <li> <p>Toggle for keeping a local copy of the backup.</p> <p>Options are: <code>true</code> or <code>false</code></p> </li> <li> <p>Path used for the local backups.</p> </li> <li> <p>Toggle for using Rclone remote backup storage.</p> <p>Options are: <code>true</code> or <code>false</code></p> </li> <li> <p>Path used for the Rclone remote. Backups outside of the most recent one will be located in the <code>archived</code> folder.</p> <p>Make sure that this path is unique if you run multiple instances of Saltbox.</p> </li> <li> <p>Toggle for using Rsync backups.</p> <p>Options are: <code>true</code> or <code>false</code></p> </li> <li> <p>Path used for the Rsync backups.</p> </li> <li> <p>Port used by rsync on the target server.</p> </li> <li> <p>Schedule for when the backup task will be executed.</p> <p>Options are: <code>reboot</code>, <code>yearly</code>, <code>annually</code>, <code>weekly</code>, <code>daily</code>, <code>hourly</code>.</p> <p>Should you desire more granular control over the schedule you can edit the crontab for the Saltbox user once setup.</p> </li> <li> <p>Toggle for enabling automatic backups.</p> <p>Options are: <code>absent</code> or <code>present</code></p> <p>Depending on the option set here the cron entry created by Saltbox will be added, removed or modified.</p> </li> <li> <p>Username used for the restore service.</p> <p>Has to be unique across all users of the service. Try sticking with a url for the server <code>box.domain.tld</code> unique to each server for something easily remembered.</p> <p>Usernames are hashed before requests are sent to the restore service.</p> </li> <li> <p>Password used encrypt/decrypt the configuration files. </p> <p>Only used on the client side in scripts.</p> </li> <li> <p>Toggle for BTRFS snaphots.</p> <p>Options are: <code>true</code> or <code>false</code></p> <p>Requires BTRFS on <code>/</code> or <code>/opt</code></p> </li> </ol>","title":"Configuration"},{"location":"saltbox/basics/accessing_apps/","text":"<p>Note 1: After the initial setup, it will take a a while for the SSL certificates to propagate. A side effect of this will be that certain domains were redirect to other apps (e.g. sonarr.yourdomain.com -&gt; nzbget.yourdomain.com). Just give it a bit of time and this will correct itself.</p> <p>Note 2: If pages don't load at all, make sure you've set up your domain properly and also checkout the FAQ.</p>","title":"Accessing Saltbox Apps"},{"location":"saltbox/basics/accessing_apps/#default-apps","text":"<p>Saltbox apps will be accessed via appname.yourdomain.com (see table below).</p>    App  Name with domain without domain     Jackett https://jackett.yourdomain.com http://server_ip:9117   Lidarr https://lidarr.yourdomain.com http://server_ip:8686   NZBGet https://nzbget.yourdomain.com http://server_ip:6789   NZBHydra2 https://nzbhydra2.yourdomain.com http://server_ip:5076   Organizr https://organizr.yourdomain.com http://server_ip:port   Overseerr https://overseerr.yourdomain.com http://server_ip:5055   Plex https://plex.yourdomain.com http://server_ip:32400   WebTools for Plex https://plex-webtools.yourdomain.com http://server_ip:33400   Portainer https://portainer.yourdomain.com http://server_ip:9000   Radarr https://radarr.yourdomain.com http://server_ip:7878   ruTorrent https://rutorrent.yourdomain.com http://server_ip:port   Sonarr https://sonarr.yourdomain.com http://server_ip:8989   Tautulli https://tautulli.yourdomain.com http://server_ip:8181","title":"Default Apps"},{"location":"saltbox/basics/accessing_apps/#additional-apps","text":"<p>Coming soon.</p>","title":"Additional Apps"},{"location":"saltbox/basics/basics/","text":"","title":"Basics"},{"location":"saltbox/basics/basics/#what-is-saltbox","text":"<ul> <li> <p>Saltbox is an Ansible and docker based solution for rapidly deploying a cloud media server on any x64 Ubuntu Server.</p> </li> <li> <p>Primary functions are: the automatic acquisition of media, storing that media on the cloud, and being able to  play it back from anywhere and from any device.</p> </li> <li> <p>NOTE: Saltbox does not have a dashboard or GUI of its own. All Saltbox-specific setup and commands are done on the linux command-line.</p> </li> </ul>","title":"What is Saltbox?"},{"location":"saltbox/basics/basics/#why-use-saltbox","text":"","title":"Why use Saltbox?"},{"location":"saltbox/basics/basics/#custom-domains","text":"<ul> <li>Have your server setup behind your own domain, securely (e.g. https://apps.yourdomain.com).</li> </ul>","title":"Custom Domains"},{"location":"saltbox/basics/basics/#fast-deployment","text":"<ul> <li>Have a system running in minutes with minimal input (a full server setup from scratch within minutes.</li> </ul>","title":"Fast Deployment"},{"location":"saltbox/basics/basics/#docker-based-applications","text":"<ul> <li> <p>Docker containers keep your apps isolated from each other - no more conflicts between apps.</p> </li> <li> <p>Docker containers keep your system tidy since none of the apps' files (executables and dependencies) are stored outside of the container.</p> </li> <li> <p>Quickly install and uninstall apps.</p> </li> </ul>","title":"Docker-Based Applications"},{"location":"saltbox/basics/basics/#cloud-storage","text":"<ul> <li>Store media on cloud storage to save on local drive space.</li> </ul>","title":"Cloud Storage"},{"location":"saltbox/basics/basics/#can-choose-your-preferred-media-server-application","text":"<ul> <li>You can decide whether to use Plex or Emby.</li> </ul>","title":"Can Choose Your Preferred Media Server Application"},{"location":"saltbox/basics/basics/#custom-server-deployment","text":"<ul> <li>You can deploy Saltbox on an all-in-one server, for downloading and streaming.</li> </ul> <p>or</p> <ul> <li>You can deploy Saltbox between two servers: a Mediabox, as streaming server, and a Feederbox, as a downloading server.</li> </ul>","title":"Custom Server Deployment"},{"location":"saltbox/basics/basics/#secure","text":"<ul> <li>Saltbox uses secure HTTPS provided by Let's Encrypt SSL certificates or ZeroSSL.</li> </ul>","title":"Secure"},{"location":"saltbox/basics/basics/#easy-backup-and-restore","text":"<ul> <li>Configuration and data files for all key applications are conveniently stored in /opt, which makes backup so easy. Easily pack up your server and move to another one with Saltbox's built-in Backup.</li> </ul>","title":"Easy Backup and Restore"},{"location":"saltbox/basics/basics/#how-does-saltbox-function","text":"<p>Sonarr manages downloading your favorite TV Shows and Radarr manages downloading your favorite movies. Both use either Usenet (via NZBGet) and/or Torrents (via ruTorrent) to do this.[1] [2]</p> <p>Once the downloads are complete, Sonarr &amp; Radarr will move [or copy in the case of torrents] these downloads to your server's <code>/mnt/local/Media/</code> folder[3]  and send a notification to Plex Autoscan.</p> <p>Plex AutoScan will, in turn, tell Plex to scan for the newly downloaded TV Show or Movie, by only scanning the specific season or movie folder. This will</p> <ul> <li>make the media appear in Plex sooner than what a full library scan would have been able to do, and</li> <li>reduce the chances of Cloud Storage API bans for excessive activity.</li> </ul> <p>Cloudplow will eventually[4]  move everything[5]  from <code>/mnt/local/Media/</code> to a folder named <code>Media</code> on the remote cloud storage, thereby reducing the storage used on the (local) server.</p> <p>During this migration, the media files will continue to be accessible to Media Servers (e.g. Plex) because the remote cloud storage (e.g. Google Drive) will be mounted on to the server as if it were a local drive. This is accomplished with an Rclone VFS mount pointing to the cloud storage, and a union of that mount with the server\u2019s own local storage (accomplished via <code>mergerfs</code>).</p> <p></p>  <p>1 Some of the applications above can be replaced with similar apps. </p> <p>2 If you want to use Torrents, it is recommended to be a member of a private tracker vs using public ones. If you want to to use Usenet, you will need to purchase Usenet provider service (or multiple services) and also be a member of one or more Usenet indexers. </p> <p>3 The move to <code>/mnt/local/Media</code> is indirect; Radarr/Sonarr are using <code>/mnt/unionfs/Media</code>, and they move the file there, however,  <code>/mnt/local</code> is the only writeable part of the mergerfs [for the purpose of  creating new files], so the newly-written files will be placed in <code>/mnt/local</code>. </p> <p>4 By default, Cloudplow will check every half hour to see if there is 200GB of data staged in <code>/mnt/local</code>; if there is, all that data is pushed to your Google Drive.  This threshold can be adjusted as needed in the Cloudplow config. </p> <p>5 There is presently a 750GB/day upload limitation on Google accounts.  The standard Saltbox setup will describe setting up a Google Drive remote pointed at your My Drive.  This limit can be eliminated by cycling through a set of service accounts [each of which can upload 750GB] to upload to one or more Shared Drives [aka Teamdrives].  See Tip44 Doc for details.  </p>","title":"How does Saltbox function ?"},{"location":"saltbox/basics/install_types/","text":"<code>core</code> <code>saltbox</code> <code>mediabox</code> <code>feederbox</code>     System Tweaks       Saltbox MOTD       Common Tools and Tasks       Docker       Rclone       Mounts: MergerFS       Mounts: Rclone VFS       Scripts       Traefik (Docker)       Plex (Docker)       Tautulli (PlexPy) (Docker)       Overseerr  (Docker)       Plex Autoscan (Media Scanner Helper Script)       Portainer (Docker)       Organizr (Docker)       Cloudplow (Media Uploader)       NZBGet (Docker)       rTorrent / ruTorrent (Docker)       Jackett (Docker)       NZBHydra 2 (Docker)       Sonarr (Docker)       Radarr (Docker)       Lidarr (Docker)","title":"Saltbox Install Types"},{"location":"saltbox/basics/paths/","text":"","title":"Saltbox Paths"},{"location":"saltbox/basics/paths/#general-info","text":"<p>It is recommended to assign all your disk space to <code>/</code>, as all of your imported media and app data will be saved to <code>/mnt/local/</code> and <code>/opt/</code>,  respectively.  This allows your application metadata and your staged media to  make the most use of your available disk space without worrying about partitioning. </p> <p>Note 1: ALL folders/paths mentioned below, and elsewhere on the wiki, are CASE SENSITIVE (e.g. Google Drive: <code>Media</code> not <code>media</code>, <code>Movies</code> not <code>movies</code>, <code>TV</code> not <code>tv</code>; Plex Requests: <code>/logs</code> not <code>/Logs</code>, etc). This is important, or else apps like Plex, Sonarr, and Radarr will not be able find your media.</p> <p>Note 2: This wiki uses <code>~/</code> interchangeably with <code>/home/&lt;username&gt;/</code>, which is defined as <code>/home/{{user}}/</code> in Ansible syntax (as used in settings.yml). So if your user name was <code>seed</code>, your <code>~/</code> path would be <code>/home/seed/</code>.</p> <p>For this reason it is important that you run commands as the appropriate user as you go through the wiki.</p>","title":"General Info"},{"location":"saltbox/basics/paths/#google-drive-paths","text":"<pre><code>Media\n\u251c\u2500\u2500 Movies\n\u251c\u2500\u2500 Music\n\u2514\u2500\u2500 TV\n</code></pre> <p></p>    Path  <pre>                 </pre> Description  <pre>                                                                                              </pre>     <code>/Media/</code> Location of all your media folders.   <code>/Media/Movies/</code> Location of all your movies (folder format: <code>/Media/Movies/Movie Name (year)/movie file.ext</code>).   <code>/Media/Music/</code> Location of all your music.   <code>/Media/TV/</code> Location of all your TV shows (folder format: <code>/Media/TV/TV Show Name/Season 00/episode file.ext</code>).    <p>Note: If you would like to customize your Plex libraries differently, see Customizing Plex Libraries.</p>","title":"Google Drive Paths"},{"location":"saltbox/basics/paths/#local-paths","text":"<pre><code>mnt\n\u251c\u2500\u2500local\n|  \u2514\u2500\u2500 Media\n\u251c\u2500\u2500remote\n|  \u2514\u2500\u2500 Media\n\u2514\u2500\u2500unionfs\n   \u2514\u2500\u2500 Media\n</code></pre>","title":"Local Paths"},{"location":"saltbox/basics/paths/#media","text":"<pre>                 </pre> Path <pre>                                                                                                 </pre> Description     <code>/mnt/local/Media/</code> Location of media stored on the server.  This is the local part of <code>/mnt/unionfs/Media/</code>.   <code>/mnt/remote/Media/</code> Location of media stored on Google Drive (mounted by rclone).   <code>/mnt/unionfs/Media/</code> Combined folder of local media (<code>/mnt/local/Media/</code>) and online media (<code>/mnt/remote/Media/</code>).  This is the folder that Plex, Sonarr, and Radarr read when scanning for media.    <p>Note: Make sure <code>/mnt/local/</code> has enough space to store the imported media (before cloudplow is able to move it to Google Drive).</p>","title":"Media"},{"location":"saltbox/basics/paths/#cloudplow","text":"Path<pre>                 </pre> Description <pre>                 </pre>     <code>/mnt/local/Media/</code> Location of media stored on the server.  Size of this path is checked periodically (default 30 min). When the folder size reaches its target (default 200GB), media files are moved off/uploaded to the cloud, freeing up local disk space.    <p>Note: For more info, see the Cloudplow page.</p>","title":"Cloudplow"},{"location":"saltbox/basics/paths/#docker-paths","text":"<p>The Dockerized app (e.g. Plex) will \"see\" the Docker Path, but that path will actually be the Host Path on the server. </p> <p>By default, NZB and Torrent downloads are stored in <code>/mnt/local/downloads/nzbs/</code> and <code>/mnt/local/downloads/torrents/</code>, respectively. However, this can be changed to point elsewhere (e.g. a second hard drive) by editing the settings.yml file. But regardless of the download location chosen, the Docker Path will always be the same.</p> <p>Note: It is advised to leave at least 100GB free on <code>/opt</code> for the storage of Docker data.</p>","title":"Docker Paths"},{"location":"saltbox/basics/paths/#any-container-that-requires-disk-access","text":"Docker Path <pre>                 </pre> Host Path <pre>                 </pre> Description <pre>                 </pre>     <code>/mnt</code> <code>/mnt</code> Provides access to all standard mounted storage.    <p>Every container sees any path inside <code>/mnt</code> the same as the host and same as any other container.</p> <p>That means that no path translation is required from context to context.  If nzbget reports a download at <code>/mnt/unionfs/downloads/...</code> then Radarr will see it in the same place; when Radarr tells Plex-Autoscan [PAS] about it, PAS sees it in that same place; when PAS tells Plex about it, Plex sees it in that same place.</p>","title":"Any container that requires disk access"},{"location":"saltbox/basics/paths/#plex","text":"Docker Path <pre>                 </pre> Host Path <pre>                 </pre> Description <pre>                 </pre>     <code>/mnt/unionfs/Media/Movies/</code> <code>/mnt/unionfs/Media/Movies/</code> Plex reads this for Movies.   <code>/mnt/unionfs/Media/TV/</code> <code>/mnt/unionfs/Media/TV/</code> Plex reads this for TV Shows.   <code>/mnt/unionfs/Media/Music/</code> <code>/mnt/unionfs/Media/Music/</code> Plex reads this for Music.","title":"Plex"},{"location":"saltbox/basics/paths/#sonarr","text":"Docker Path  <pre>                 </pre> Host Path <pre>                                     </pre> Description <pre>                                                                                                                                                             </pre>     <code>/mnt/unionfs/Media/TV/</code> <code>/mnt/unionfs/Media/TV/</code> Sonarr will import to <code>/tv/</code>, which is actually <code>/mnt/unionfs/Media/TV/</code> on host system.   <code>/mnt/unionfs/downloads/nzbs/</code> <code>/mnt/local/downloads/nzbs/</code> (default) NZB downloads folder as set in settings.yml).    For example, when using NZBGet, Sonarr will import from <code>/mnt/unionfs/downloads/nzbs/nzbget/</code>, which is essentially <code>/mnt/local/downloads/nzbs/nzbget/</code> on host system.   <code>/mnt/unionfs/downloads/torrents/</code> <code>/mnt/local/downloads/torrents/</code> (default) Torrent downloads folder as set in settings.yml).    For example, when using ruTorrent, Sonarr will import from <code>/mnt/unionfs/downloads/torrents/rutorrent/</code>, which is essentially <code>/mnt/local/downloads/torrents/rutorrent/</code> on host system.","title":"Sonarr"},{"location":"saltbox/basics/paths/#radarr","text":"Docker Path  <pre>                 </pre> Host Path <pre>                                     </pre> Description <pre>                                                                                                                                                             </pre>     <code>/mnt/unionfs/Media/movies/</code> <code>/mnt/unionfs/Media/Movies/</code> Radarr will import to <code>/movies/</code>, which is actually <code>/mnt/unionfs/Media/Movies/</code> on host system.   <code>/mnt/unionfs/downloads/nzbs/</code> <code>/mnt/local/downloads/nzbs/</code> (default) NZB downloads folder as set in settings.yml).    For example, when using NZBGet, Radarr will import from <code>/mnt/unionfs/downloads/nzbs/nzbget/</code>, which is essentially <code>/mnt/local/downloads/nzbs/nzbget/</code> on host system.   <code>/mnt/unionfs/downloads/torrents/</code> <code>/mnt/local/downloads/torrents/</code> (default) Torrent downloads folder as set in settings.yml).    For example, when using ruTorrent, Radarr will import from <code>/mnt/unionfs/downloads/torrents/rutorrent/</code>, which is essentially <code>/mnt/local/downloads/torrents/rutorrent/</code> on host system.","title":"Radarr"},{"location":"saltbox/basics/paths/#lidarr","text":"Docker Path  <pre>                 </pre> Host Path <pre>                                     </pre> Description <pre>                                                                                                                                                             </pre>     <code>/mnt/unionfs/Media/Music/</code> <code>/mnt/unionfs/Media/Music/</code> Lidarr will import to <code>/music/</code>, which is actually <code>/mnt/unionfs/Media/Music/</code> on host system.   <code>/mnt/unionfs/downloads/nzbs/</code> <code>/mnt/local/downloads/nzbs/</code> (default) NZB downloads folder as set in settings.yml).    For example, when using NZBGet, Lidarr will import from <code>/mnt/unionfs/downloads/nzbs/nzbget/</code>, which is essentially <code>/mnt/local/downloads/nzbs/nzbget/</code> on host system.   <code>/mnt/unionfs/downloads/torrents/</code> <code>/mnt/local/downloads/torrents/</code> (default) Torrent downloads folder as set in settings.yml).    For example, when using ruTorrent, Lidarr will import from <code>/mnt/unionfs/downloads/torrents/rutorrent/</code>, which is essentially <code>/mnt/local/downloads/torrents/rutorrent/</code> on host system.","title":"Lidarr"},{"location":"saltbox/basics/paths/#plexpy-tautulli","text":"Docker Path  <pre>                 </pre> Host Path <pre>                                                            </pre> Description <pre>                                     </pre>     <code>/logs/</code> <code>/opt/plex/Library/Application Support/Plex Media Server/Logs/</code> Location of the Plex logs used by PlexPy.","title":"PlexPy (Tautulli)"},{"location":"saltbox/basics/update/","text":"<p>To update Saltbox run:</p> <pre><code>sb update\n</code></pre> <p>This will also upgrade Ansible as needed and migrate the configuration files as additional options are added over time.</p>","title":"Update"},{"location":"saltbox/install/after/","text":"<p>All the apps are installed and configured, but here are some things you want to set up or do that aren't done automatically:</p> <ol> <li> <p>Harden your SSH server.  There are some tips here, but three simple actions to take are:</p> <ol> <li> <p>Change the default SSH port from 22 to something else.</p> </li> <li> <p>Disable password login and use only SSH keys to authenticate.</p> </li> <li> <p>Disable root login.</p> </li> </ol> </li> <li> <p>Set up scheduled backups. There is no backup enabled automatically, so unless you explicitly set them up, you will be disappointed to find that you don't have a backup when something goes wrong.</p> </li> <li> <p>Take some time to verify disk space usage for the apps.</p> <p>You need local disk space for stuff between download completion and cloudplow moving things into the cloud.  If you don't, for example, set cloudplow's upload thresholds and Nzbget's \"stop downloading\" disk space threshold to meaningful values for your situation, you can get into a situation where cloudplow's not uploading because that threshold hasn't been met and nzbget has stopped because its threshold has been met and everything grinds to a halt.  Alternatively, nzbget just keeps going and runs your disk out of space.</p> <p>You also need a bunch of disk space for the scheduled backups that you just set up to succeed, so be sure to take that into account.</p> <p>Another common \"hidden\" disk space consumer is unfinished or unimported downloads.  If NZBGet downloads something and Radarr can't tell what movie it is, it will just sit consuming disk space.  There is a script you can set up to keep this stuff cleaned up in the [LOCATION TBD].</p> </li> <li> <p>Spend some time working with the system before you start customizing.  A lot of problems are seen by new users rushing ahead to install All The Things and customize the system without understanding how things work.  Slow down.  Learn how the thing works, and then make changes in a controlled manner.</p> <p>None of these apps or scripts are sentient, so if they are not doing what you expect, it's almost certainly a configuration problem.</p> </li> <li> <p>Take time to go through some Youtube or other tutorials about:</p> <ol> <li> <p>JSON </p> <p>Many config files are written in JSON, so you need to have a grounding in how JSON works before editing them.  You should know how to edit within the structure of a JSON file, and how to validate a JSON file to figure out how you've broken it.</p> <ol> <li> <p>first \"json tutorial\" result; no endorsement</p> </li> <li> <p>online JSON validator</p> </li> </ol> </li> <li> <p>YAML</p> <p>Many config files are written in YAML, so you need to have a grounding in how YAML works before editing them.</p> <ol> <li> <p>first \"yaml tutorial\" result; no endorsement</p> </li> <li> <p>online YAML validator</p> </li> </ol> </li> <li> <p>Docker</p> <p>Nearly everything is running as a Docker container, so it's helpful to have at least a nodding familiarity with how that works.</p> <ol> <li>first \"docker tutorial\" result; no endorsement</li> </ol> </li> </ol> </li> </ol>","title":"After-Install"},{"location":"saltbox/install/install/","text":"<p>If you're migrating from Cloudbox you probably want the Cloudbox migrations instructions</p>","title":"Install"},{"location":"saltbox/install/install/#dependencies","text":"curl <pre><code>curl -sL https://install.saltbox.dev | sudo -H bash; cd /srv/git/saltbox\n</code></pre>  wget <pre><code>wget -qO- https://install.saltbox.dev | sudo -H bash; cd /srv/git/saltbox\n</code></pre>  curl (verbose) <pre><code>curl -sL https://install.saltbox.dev | sudo -H bash -s -- -v; cd /srv/git/saltbox\n</code></pre>  wget (verbose) <pre><code>wget -qO- https://install.saltbox.dev | sudo -H bash -s -- -v; cd /srv/git/saltbox\n</code></pre>    <p>Info</p> <p>See here for more information about the dependencies.</p>","title":"Dependencies"},{"location":"saltbox/install/install/#configuration","text":"<p>Make sure you fill out the following configuration files before proceeding. Each file will be located in <code>/srv/git/saltbox</code></p> <p>accounts.yml</p> <pre><code>---\nuser:\n  name: seed # (1)\n  pass: password123 # (2)\n  domain: testsaltbox.ml # (3)\n  email: your@email.com # (4)\ncloudflare:\n  email: # (5)\n  api: # (6)\nplex:\n  user: # (7)\n  pass: # (8)\n  tfa: no # (9)\ndockerhub:\n  user: # (10)\n  token: # (11)\napprise: # (12)\n</code></pre> <ol> <li> <p>Username that will be created (if it doesn't exist) during the installation and apps that have automatic user configuration.</p> <p>Do not use root.</p> <p>Required.</p> </li> <li> <p>Password used for username account during the installation and apps that have automatic user configuration.</p> <p>Required.</p> </li> <li> <p>Domain that you want to use for the server.</p> <p>If this is left blanbk,. applications will be accessible at IP:PORT instead of via subdomains.</p> </li> <li> <p>Email address used for Let's Encrypt SSL certificates.</p> <p>Required.</p> </li> <li> <p>Email used for the Cloudflare account.</p> </li> <li> <p>Cloudflare API Token.</p> </li> <li> <p>Plex.tv username or email address on the account.</p> </li> <li> <p>Plex.tv password for the account.</p> </li> <li> <p>Enable if you want to use the Two Factor Authentication [TFA] compatible Plex account login.</p> </li> <li> <p>Docker Hub account name. Entering these credentials will at least double your image pull capacity from 100 every 6 hours to 200. https://www.docker.com/blog/checking-your-current-docker-pull-rate-limits-and-status/</p> </li> <li> <p>Docker Hub account token</p> </li> <li> <p>apprise url. See https://github.com/caronc/apprise#popular-notification-services for more information.</p> </li> </ol> <p>settings.yml</p> <pre><code>---\ndownloads:\n  nzbs: /mnt/unionfs/downloads/nzbs # (1)\n  torrents: /mnt/unionfs/downloads/torrents # (2)\ntranscodes: /mnt/local/transcodes # (3)\nrclone:\n  version: latest # (4)\n  remote: google # (5)\nshell: bash # (6)\nauthelia:\n  subdomain: login # (7)\n</code></pre> <ol> <li> <p>Folder used for usenet downloads.</p> </li> <li> <p>Folder used for torrent downloads.</p> </li> <li> <p>Folder used for temporary transcode files.</p> </li> <li> <p>Rclone version that Saltbox will install. </p> <p>Valid options are latest, beta or a specific version (1.55).</p> </li> <li> <p>Rclone remote that Saltbox will mount by default and use in any automated configuration.</p> <p>Optional - Leave empty to avoid remote mount setup.</p> </li> <li> <p>Shell used by the system. Valid options are bash or zsh.</p> </li> <li> <p>Subdomain used for Authelia.</p> <p>Use different values here when using a Mediabox + Feederbox setup.</p> <p>Each instance needs a unique subdomain to function.</p> </li> </ol>  <p>Info</p> <p>See here for more information about these settings.</p>","title":"Configuration"},{"location":"saltbox/install/install/#preinstall","text":"<p>Warning</p> <p>Make sure that you have set up the configuration correctly before proceeding.</p>  <p>This step will create the specified user account, add it to sudoers, update the kernel, edit GRUB configuration and install Rclone and reboot the server if needed.</p> <pre><code>sb install preinstall\n</code></pre>  <p>Warning</p> <p>From this point you'll want to make sure you run commands as the user specified in the accounts.yml</p>  <p>If your server did not need to reboot you can run <code>su username</code> to switch user or reconnect to SSH as the newly created user. Everything after this point will assume you are running as the user entered in accounts.yml</p>  <p>Info</p> <p>See here for more information about the preinstall.</p>","title":"Preinstall"},{"location":"saltbox/install/install/#rclone","text":"<p>Saltbox assumes an rclone remote pointed at your google storage named <code>google</code> [as shown in the settings.yml above].</p>  <p>Info</p> <p>See here for more information about creating this remote.  The walkthrough for creating the remote is found there to keep this page short.</p>","title":"Rclone"},{"location":"saltbox/install/install/#install-saltbox","text":"Saltbox <pre><code>sb install saltbox\n</code></pre>  Mediabox <pre><code>sb install mediabox\n</code></pre>  Feederbox <pre><code>sb install feederbox\n</code></pre>  Core <pre><code>sb install core\n</code></pre>    <p>Info</p> <p>See here for more information about the install.</p>","title":"Install Saltbox"},{"location":"saltbox/install/install/#reboot","text":"<p>You're now ready to install other apps and tweak the setup as you see fit. After rebooting!</p>","title":"Reboot"},{"location":"saltbox/inventory/","text":"<p>Advanced use cases that would normally require editing roles can now be handled through the inventory system instead. </p> <p>Any variables defined in <code>/srv/git/saltbox/roles/&lt;role_name&gt;/defaults/main.yml</code> are available to be overridden by the user in  <code>/srv/git/saltbox/inventories/host_vars/localhost.yml</code>.  This implementation avoids git merge conflicts when updating Saltbox.</p> <p>Should you require additional functionality then by all means create an issue on the main repository and we'll look at accommodating it.</p> <p>For example, an excerpt from <code>/srv/git/saltbox/roles/sonarr/defaults/main.yml</code>:</p> <pre><code>################################\n# Basics\n################################\n\nsonarr_name: sonarr\n\n################################\n# Paths\n################################\n\nsonarr_paths_folder: \"{{ sonarr_name }}\"\nsonarr_paths_location: \"{{ server_appdata_path }}/{{ sonarr_paths_folder }}\"\nsonarr_paths_folders_list:\n  - \"{{ sonarr_paths_location }}\"\nsonarr_paths_config_location: \"{{ sonarr_paths_location }}/config.xml\"\n...\n</code></pre> <p>We can see there that Sonarr gets the name \"sonarr\", and that name then flows through to those next four settings.</p> <p>If you wanted to change the name of the Sonarr app to BingBangBoing, you'd add this to <code>/srv/git/saltbox/inventories/host_vars/localhost.yml</code>:</p> <pre><code>sonarr_name: BingBangBoing\n</code></pre> <p>When you next run the <code>sonarr</code> tag, everything that's based off that name will change:</p> <ul> <li>docker container name =&gt; BingBangBoing</li> <li>subdomain =&gt; BingBangBoing.DOMAIN.TLD</li> <li>app data folder =&gt; /opt/BingBangBoing</li> <li>and so on.</li> </ul> <p>A common use for these overrides will probably be changing the version of the docker container being used.</p> <p>Looking further down in that defaults file:</p> <pre><code>################################\n# Docker\n################################\n\n# Container\nsonarr_docker_container: \"{{ sonarr_name }}\"\n\n# Image\nsonarr_docker_image_pull: true\nsonarr_docker_image_tag: \"release\"\nsonarr_docker_image: \"hotio/sonarr:{{ sonarr_docker_image_tag }}\"\n</code></pre> <p>We see again the name flowing through down here. but look at <code>sonarr_docker_image_tag: \"release\"</code></p> <p>By default, for Sonarr, Saltbox will use the docker image <code>hotio/sonarr:release</code>.</p> <p>If you wanted to change that to \"nightly\", you'd add this line to <code>/srv/git/saltbox/inventories/host_vars/localhost.yml</code>:</p> <pre><code>sonarr_docker_image_tag: \"nightly\"\n</code></pre> <p>Which would override the default and result in Saltbox using <code>hotio/sonarr:nightly</code>.</p>","title":"Inventory"},{"location":"saltbox/prerequisites/prerequisites/","text":"","title":"Prerequisites"},{"location":"saltbox/prerequisites/prerequisites/#presumptions","text":"<p>Saltbox presumes you have a basic understanding of Linux, Docker containers, BitTorrent, and Usenet, and are also familiar with Sonarr, Radarr, NZBGet, rTorrent/ruTorrent, and Plex/Emby.</p> <p>The Saltbox setup is all done on the command line in the linux shell.  There is no GUI and there are no plans to add one.  If you want to run Saltbox, you will need to be familiar with Linux.</p> <p>The guides in this wiki are only meant to setup Saltbox specific settings into the various apps that are installed with Saltbox (e.g. Sonarr, Radarr, Plex, etc) and are not meant to be a full setup for, or an introduction to, the workings of these apps. However, you may pick up a few things as you go thru the guides. </p> <p>If you wish to learn more about them in detail, you can easily find a ton of guides for them online (e.g. HTPC Guides, YouTube, etc).</p> <p>There are, broadly, 4 prerequisites to installing Saltbox:</p>  <ul> <li>A Server</li> <li>A Domain Name</li> <li>Cloud Storage</li> <li>A Plex Account</li> <li>Usenet or Bittorrent sources</li> </ul>","title":"Presumptions"},{"location":"saltbox/prerequisites/prerequisites/#server","text":"<p>For best results, the assumed server environment for Saltbox is:</p> <ul> <li>a dedicated remote x64 [Intel or AMD] server [not a VPS], </li> <li>from a server provider like Hetzner, OVH, kimsufi, etc., </li> <li>freshly installed with Ubuntu Server 20.04, </li> <li>with at least 500GB of disk space, and </li> <li>allowing root access</li> </ul> <p>See here for more information about server requirements.</p>","title":"Server"},{"location":"saltbox/prerequisites/prerequisites/#domain","text":"<p>You will need a domain name as Saltbox apps are only accessed via https://appname.yourdomain.com (see Accessing Apps).</p> <p>Ports are [for the most part] bound only to the internal <code>saltbox</code> docker network, which means they are not visible on the host; you won't be able to connect externally to the apps using <code>IP:PORT</code>.</p> <p>See here for more information about setting up a domain and DNS settings for use with Saltbox.</p> <p>Note: there is planned support for running without a domain, but it is not complete and is not well-tested.</p>","title":"Domain"},{"location":"saltbox/prerequisites/prerequisites/#cloud-storage","text":"<p>A base assumption in Saltbox is that you are storing your media on cloud storage.  Saltbox can be set up to use any cloud storage provider that Rclone supports. However, Google Drive via G-Suite Business is the preferred choice among users.  Some of the components are designed expressly for Google Drive, like the Google Drive monitoring in plex-autoscan and the service-account rotation in cloudplow.</p> <p>See here for more information about Cloud Storage requirements and running Saltbox without it.</p>","title":"Cloud Storage"},{"location":"saltbox/prerequisites/prerequisites/#plex-account","text":"<p>You'll need a Plex account, if you don't already have one, for purposes of the install, even if you're not planning to use Plex.  </p> <p>This may change in the future, but for now it's a requirement for the simplest Happy Path install described here.</p> <p>See here for more information about Plex account requirements.</p>","title":"Plex Account"},{"location":"saltbox/prerequisites/prerequisites/#usenet-or-bittorrent-sources","text":"<p>If you are planning to set up a standard Saltbox or a feederbox, you will need a source of media; Usenet, Torrents, or both</p> <p>You won't need these particular [media source] details for the initial install, but you will need them for application setup.</p> <p>See here for more information about media source requirements.</p>","title":"Usenet or Bittorrent sources"}]}